{
  "openapi": "3.1.0",
  "info": {
    "title": "Sync for Expenses API",
    "version": "prealpha",
    "contact": {
      "name": "Codat",
      "url": "https://www.codat.io/",
      "email": "expenses@codat.io"
    },
    "description": "The API for Sync for Expenses.\n\nSync for Expenses is an API and a set of supporting tools. It has been built to\nenable corporate card and expense management platforms to provide high-quality\nintegrations with multiple accounting platforms through a standardized API.\n\n[Read more...](https://docs.codat.io/sync-for-expenses/overview)\n\n[See our OpenAPI spec](https://github.com/codatio/oas)\n\n<!-- Not seeing the end points you're expecting? We've reorganized our products, and you may be using a [different version of Sync for Commerce](https://docs.codat.io/sync-for-expenses-v1-api#/). -->",
    "termsOfService": "https://www.codat.io/legals/"
  },
  "security": [
    {
      "auth_header": []
    }
  ],
  "x-speakeasy-retries": {
    "strategy": "backoff",
    "backoff": {
      "initialInterval": 500,
      "maxInterval": 60000,
      "maxElapsedTime": 3600000,
      "exponent": 1.5
    },
    "statusCodes": [
      408,
      429,
      "5XX"
    ],
    "retryConnectionErrors": true
  },
  "tags": [
    {
      "name": "Connections",
      "description": "Create and manage partner expense connection."
    },
    {
      "name": "Configuration",
      "description": "Companies sync configuration."
    },
    {
      "name": "Mapping options",
      "description": "Mapping options for a companies expenses."
    },
    {
      "name": "Sync",
      "description": "Trigger and monitor expense syncs to accounting software."
    },
    {
      "name": "Expenses",
      "description": "Create expense datasets and upload receipts."
    },
    {
      "name": "Transaction status",
      "description": "Retrieve the status of transactions within a sync."
    },
    {
      "name": "Companies",
      "description": "Create and manage your Codat companies."
    },
    {
      "name": "Refresh data",
      "description": "Asynchronously retrieve data from an integration to refresh data in Codat."
    },
    {
      "name": "Push data",
      "description": "View push options and get push statuses."
    },
    {
      "name": "Accounts",
      "description": "Accounts"
    },
    {
      "name": "Customers",
      "description": "Customers"
    },
    {
      "name": "Suppliers",
      "description": "Suppliers"
    }
  ],
  "servers": [
    {
      "url": "https://api.codat.io"
    }
  ],
  "paths": {
    "/companies/{companyId}/sync/expenses/config": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfiguration"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "summary": "Get company configuration",
        "description": "Gets a companies expense sync configuration",
        "operationId": "get-company-configuration"
      },
      "post": {
        "tags": [
          "Configuration"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyConfiguration"
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyConfiguration"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "summary": "Set company configuration",
        "description": "Sets a companies expense sync configuration",
        "operationId": "save-company-configuration"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ]
    },
    "/companies/{companyId}/sync/expenses/connections/partnerExpense": {
      "post": {
        "tags": [
          "Connections"
        ],
        "description": "Creates a Partner Expense data connection",
        "summary": "Create Partner Expense connection",
        "operationId": "create-partner-expense-connection",
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connection"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        }
      }
    },
    "/companies/{companyId}/sync/expenses/mappingOptions": {
      "get": {
        "tags": [
          "Mapping options"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MappingOptions"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "description": "Gets the expense mapping options for a companies accounting software",
        "summary": "Mapping options",
        "operationId": "get-mapping-options"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ]
    },
    "/companies/{companyId}/sync/expenses/syncs": {
      "post": {
        "tags": [
          "Sync"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "summary": "Initiate sync",
        "description": "Initiate sync of pending transactions.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostSync"
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Returns the newly created SyncId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncInitiated"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "If model is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodatErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "If company not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodatErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "If the specified company does not have a valid set of DataConnections setup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodatErrorMessage"
                }
              }
            }
          }
        },
        "operationId": "intiate-sync"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ]
    },
    "/companies/{companyId}/sync/expenses/syncs/lastSuccessful/status": {
      "get": {
        "tags": [
          "Sync"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "description": "Gets the status of the last successful sync",
        "summary": "Last successful sync",
        "operationId": "get-last-successful-sync"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ]
    },
    "/companies/{companyId}/sync/expenses/syncs/latest/status": {
      "get": {
        "tags": [
          "Sync"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "description": "Gets the latest sync status",
        "summary": "Latest sync status",
        "operationId": "get-latest-sync"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ]
    },
    "/companies/{companyId}/sync/expenses/syncs/list/status": {
      "get": {
        "tags": [
          "Sync"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySyncStatus"
                  }
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "summary": "List sync statuses",
        "description": "Gets a list of sync statuses",
        "operationId": "list-syncs"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ]
    },
    "/companies/{companyId}/sync/expenses/syncs/{syncId}/status": {
      "get": {
        "tags": [
          "Sync"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          },
          {
            "$ref": "#/components/parameters/syncId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncStatus"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "summary": "Get Sync status",
        "description": "Get the sync status for a specified sync",
        "operationId": "get-sync-by-id"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/syncId"
        }
      ]
    },
    "/companies/{companyId}/sync/expenses/syncs/{syncId}/transactions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          },
          {
            "$ref": "#/components/parameters/syncId"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionMetadataList"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "tags": [
          "Transaction status"
        ],
        "summary": "Get Sync transactions",
        "description": "Get's the transactions and status for a sync",
        "operationId": "list-sync-transactions"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/syncId"
        }
      ]
    },
    "/companies/{companyId}/sync/expenses/syncs/{syncId}/transactions/{transactionId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          },
          {
            "$ref": "#/components/parameters/syncId"
          },
          {
            "$ref": "#/components/parameters/transactionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionMetadata"
                  }
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "tags": [
          "Transaction status"
        ],
        "summary": "Get Sync Transaction",
        "description": "Gets the status of a transaction for a sync",
        "operationId": "get-sync-transaction"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/syncId"
        },
        {
          "$ref": "#/components/parameters/transactionId"
        }
      ]
    },
    "/companies/{companyId}/sync/expenses/data/expense-transactions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ],
      "post": {
        "summary": "Create expense-transactions",
        "operationId": "create-expense-dataset",
        "description": "Create an expense transaction",
        "tags": [
          "Expenses"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "x-speakeasy-usage-example": true,
                "schema": {
                  "$ref": "#/components/schemas/CreateExpenseResponse"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "datasetId": "cd937d46-8e41-43a9-9477-a79158ffd98a"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExpenseRequest"
              },
              "examples": {
                "Payment": {
                  "value": {
                    "items": [
                      {
                        "id": "4d7c6929-7770-412b-91bb-44d3bc71d111",
                        "type": "Payment",
                        "issueDate": "2021-05-21T00:00:00+00:00",
                        "currency": "GBP",
                        "currencyRate": 1.18,
                        "contactRef": {
                          "id": "f5244103-5223-4b0a-857f-50566ac86c11",
                          "type": "Supplier"
                        },
                        "merchantName": "Amazon UK",
                        "lines": [
                          {
                            "netAmount": 110.42,
                            "taxAmount": 14.43,
                            "taxRateRef": {
                              "id": "77a32ee2-60c7-4ab9-917a-bd82e2e43a26"
                            },
                            "accountRef": {
                              "id": "9aa5b894-1be9-4f97-96cd-ffde90766b3e"
                            },
                            "trackingRefs": [
                              {
                                "id": "dde5b35f-5d33-40bd-a34f-ee529f4c785c"
                              }
                            ]
                          }
                        ],
                        "notes": "APPLE.COM/BILL - 09001077498 - Card Ending: 4590"
                      }
                    ]
                  }
                },
                "Refund": {
                  "value": {
                    "items": [
                      {
                        "id": "7008d3f2-aeb4-11ed-afa1-0242ac120002",
                        "type": "Refund",
                        "issueDate": "2023-02-17T00:00:00+00:00",
                        "currency": "GBP",
                        "merchantName": "Amazon UK",
                        "lines": [
                          {
                            "netAmount": 110.42,
                            "taxAmount": 14.43,
                            "taxRateRef": {
                              "id": "23_Bills"
                            },
                            "accountRef": {
                              "id": "42"
                            },
                            "trackingRefs": [
                              {
                                "id": "DEPARTMENT_6"
                              }
                            ]
                          }
                        ],
                        "notes": "APPLE.COM/BILL - 09001077498 - Card Ending: 4590"
                      }
                    ]
                  }
                },
                "Transfer": {
                  "value": {
                    "items": [
                      {
                        "id": "979a7ee8-aeb4-11ed-afa1-0242ac120002",
                        "type": "TransferIn",
                        "issueDate": "2021-05-21T00:00:00+00:00",
                        "currency": "GBP",
                        "lines": [
                          {
                            "netAmount": 180.93,
                            "taxAmount": 0,
                            "accountRef": {
                              "id": "40e3e57c-2322-4898-966c-ca41adfd23fd"
                            }
                          }
                        ],
                        "notes": "Credit Card Payment"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/companies/{companyId}/sync/expenses/expense-transactions/{transactionId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/transactionId"
        }
      ],
      "put": {
        "summary": "Update expense-transactions",
        "tags": [
          "Expenses"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "syncId": {
                      "type": "string"
                    }
                  },
                  "examples": {
                    "Example 1": {
                      "syncId": "1ad0695c-4566-4715-918c-adbb03eac81e"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable-Content"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "operationId": "update-expense-dataset",
        "description": "Update an expense transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExpenseRequest"
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}/sync/expenses/syncs/{syncId}/transactions/{transactionId}/attachments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/syncId"
        },
        {
          "$ref": "#/components/parameters/transactionId"
        }
      ],
      "post": {
        "summary": "Upload attachment",
        "operationId": "upload-attachment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "tags": [
          "Expenses"
        ],
        "description": "Creates an attachment in the accounting software against the given transactionId"
      }
    },
    "/companies": {
      "get": {
        "summary": "List companies",
        "tags": [
          "Companies"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Companies"
                },
                "examples": {
                  "One company": {
                    "value": {
                      "results": [
                        {
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "name": "My Test Company",
                          "description": "My Test Company make testing software",
                          "platform": "",
                          "redirect": "https://link.codat.io/company/3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "lastSync": "2022-01-01T12:30:00.000Z",
                          "dataConnections": [
                            {
                              "id": "51baa045-4836-4317-a42e-3542e991e581",
                              "integrationId": "1c312d69-e638-46d4-ad31-72e6c3ba8390",
                              "integrationKey": "vjms",
                              "sourceId": "396c3158-5dd7-481b-a7c4-a795ca31792b",
                              "platformName": "Pandle",
                              "linkUrl": "https://link-api.codat.io/companies/3fa85f64-5717-4562-b3fc-2c963f66afa6/connections/51baa045-4836-4317-a42e-3542e991e581/start",
                              "status": "Linked",
                              "lastSync": "2022-01-01T12:30:00.000Z",
                              "created": "2022-01-01T11:30:00Z",
                              "sourceType": "Accounting"
                            }
                          ],
                          "created": "2022-01-01T11:30:00Z",
                          "createdByUserName": "Mike Smith"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 100,
                      "totalResults": 1,
                      "_links": {
                        "current": {
                          "href": "/companies?page=1&pageSize=100"
                        },
                        "self": {
                          "href": "/companies"
                        }
                      }
                    }
                  },
                  "List of Companies": {
                    "value": {
                      "results": [
                        {
                          "id": "d1568dde-adf6-11ed-afa1-0242ac120002",
                          "name": "Technicalium",
                          "description": "Technology services, including web and app design and development",
                          "platform": "",
                          "redirect": "https://link.codat.io/company/d1568dde-adf6-11ed-afa1-0242ac120002",
                          "lastSync": "2022-01-01T12:30:00.000Z",
                          "dataConnections": [
                            {
                              "id": "51baa045-4836-4317-a42e-3542e991e581",
                              "integrationId": "1c312d69-e638-46d4-ad31-72e6c3ba8390",
                              "integrationKey": "vjms",
                              "sourceId": "396c3158-5dd7-481b-a7c4-a795ca31792b",
                              "platformName": "Pandle",
                              "linkUrl": "https://link-api.codat.io/companies/d1568dde-adf6-11ed-afa1-0242ac120002/connections/51baa045-4836-4317-a42e-3542e991e581/start",
                              "status": "Linked",
                              "lastSync": "2022-01-01T12:30:00.000Z",
                              "created": "2022-01-01T11:30:00Z",
                              "sourceType": "Accounting"
                            }
                          ],
                          "created": "2022-01-01T11:30:00Z",
                          "createdByUserName": "Joe Bloggs"
                        },
                        {
                          "id": "096db70b-78de-4ff0-aa98-299cb5fe17a0",
                          "name": "Godata",
                          "description": "A new digital agency with a passion for creating amazing digital experiences",
                          "platform": "",
                          "redirect": "https://link.codat.io/company/096db70b-78de-4ff0-aa98-299cb5fe17a0",
                          "lastSync": "2022-01-01T12:30:00.000Z",
                          "dataConnections": [
                            {
                              "id": "a70bc148-dc21-46b2-a257-d9c58ac15cbb",
                              "integrationId": "1c312d69-e638-46d4-ad31-72e6c3ba8390",
                              "integrationKey": "vjms",
                              "sourceId": "396c3158-5dd7-481b-a7c4-a795ca31792b",
                              "platformName": "Pandle",
                              "linkUrl": "https://link-api.codat.io/companies/096db70b-78de-4ff0-aa98-299cb5fe17a0/connections/a70bc148-dc21-46b2-a257-d9c58ac15cbb/start",
                              "status": "Linked",
                              "lastSync": "2022-01-01T12:30:00.000Z",
                              "created": "2022-01-01T11:30:00Z",
                              "sourceType": "Accounting"
                            }
                          ],
                          "created": "2022-01-01T11:30:00Z",
                          "createdByUserName": "Mike Smith"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 100,
                      "totalResults": 2,
                      "_links": {
                        "current": {
                          "href": "/companies?page=1&pageSize=100"
                        },
                        "self": {
                          "href": "/companies"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Malformed-Query"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "operationId": "list-companies",
        "description": "﻿Returns a list of your companies. The company schema contains a list of [connections](https://docs.codat.io/codat-api#/schemas/Connection) related to the company.",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/query"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          }
        ]
      },
      "post": {
        "summary": "Create company",
        "tags": [
          "Companies"
        ],
        "operationId": "create-company",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "x-speakeasy-usage-example": true,
                "schema": {
                  "$ref": "#/components/schemas/Company"
                },
                "examples": {
                  "New Company": {
                    "value": {
                      "id": "ab12c58d-a678-4ebf-a159-ae99e1807bd0",
                      "name": "My First Company",
                      "description": "",
                      "platform": "",
                      "redirect": "https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0",
                      "dataConnections": [],
                      "created": "2022-11-10T10:45:18.1950523Z",
                      "createdByUserName": "Dan Tzabar"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "description": "﻿Creates a new company that can be used to assign connections to. \n\nIf forbidden characters (see `name` pattern) are present in the request, a company will be created with the forbidden characters removed. For example, `Company (Codat[1])` with be created as `Company Codat1`.\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRequestBody"
              },
              "examples": {
                "Example with no description": {
                  "value": {
                    "name": "Technicalium"
                  }
                },
                "Example with a description": {
                  "value": {
                    "name": "Technicalium",
                    "description": "Technology services, including web and app design and development"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companies/{companyId}": {
      "put": {
        "summary": "Update company",
        "description": "﻿Updates both the name and description of the company.",
        "operationId": "update-company",
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "tags": [
          "Companies"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRequestBody"
              },
              "examples": {
                "Update name": {
                  "value": {
                    "name": "New Name"
                  }
                },
                "Update description": {
                  "value": {
                    "name": "Same name",
                    "description": "Additional documents required"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a company",
        "operationId": "delete-company",
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "description": "﻿\nPermanently deletes a company, its connections and any cached data. This operation is irreversible. If the company ID does not exist an error is returned.",
        "tags": [
          "Companies"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        }
      },
      "get": {
        "summary": "Get company",
        "operationId": "get-company",
        "description": "﻿Returns the company for a valid identifier. If the identifier is for a deleted company, a not found response is returned.",
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "tags": [
          "Companies"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ab12c58d-a678-4ebf-a159-ae99e1807bd0",
                      "name": "My First Company",
                      "description": "",
                      "platform": "",
                      "redirect": "https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0",
                      "dataConnections": [],
                      "created": "2022-11-10T10:45:18Z",
                      "createdByUserName": "Dan Tzabar"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        }
      }
    },
    "/companies/{companyId}/connections": {
      "get": {
        "summary": "List connections",
        "description": "﻿List the connections for a company.",
        "operationId": "list-company-connections",
        "tags": [
          "Connections"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/query"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connections"
                },
                "examples": {
                  "Connections": {
                    "value": {
                      "results": [
                        {
                          "id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd",
                          "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c",
                          "integrationKey": "dfxm",
                          "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee",
                          "platformName": "Basiq",
                          "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start",
                          "status": "Linked",
                          "lastSync": "2022-10-27T10:22:43.6464237Z",
                          "created": "2022-10-27T09:53:29Z",
                          "sourceType": "Banking"
                        }
                      ],
                      "pageNumber": 0,
                      "pageSize": 0,
                      "totalResults": 0,
                      "_links": {
                        "self": {
                          "href": "string"
                        },
                        "current": {
                          "href": "string"
                        },
                        "next": {
                          "href": "string"
                        },
                        "previous": {
                          "href": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Malformed-Query"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        }
      },
      "post": {
        "summary": "Create connection",
        "description": "﻿Creates a connection for the company by providing a valid `platformKey`. \n\nUse the [List Integrations](https://docs.codat.io/codat-api#/operations/list-integrations) endpoint to access valid platform keys. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          }
        ],
        "tags": [
          "Connections"
        ],
        "operationId": "create-data-connection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "platformKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connection"
                },
                "examples": {
                  "Connection": {
                    "value": {
                      "id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd",
                      "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c",
                      "integrationKey": "dfxm",
                      "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee",
                      "platformName": "Basiq",
                      "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start",
                      "status": "Linked",
                      "lastSync": "2022-10-27T10:22:43.6464237Z",
                      "created": "2022-10-27T09:53:29Z",
                      "sourceType": "Banking"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        }
      }
    },
    "/companies/{companyId}/connections/{connectionId}": {
      "get": {
        "summary": "Get connection",
        "operationId": "get-company-connection",
        "description": "﻿Returns a specific connection for a company when valid identifiers are provided. If the identifiers are for a deleted company and/or connection, a not found response is returned.",
        "tags": [
          "Connections"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          },
          {
            "$ref": "#/components/parameters/connectionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connection"
                },
                "examples": {
                  "Connection": {
                    "value": {
                      "id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd",
                      "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c",
                      "integrationKey": "dfxm",
                      "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee",
                      "platformName": "Basiq",
                      "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start",
                      "status": "Linked",
                      "lastSync": "2022-10-27T10:22:43.6464237Z",
                      "created": "2022-10-27T09:53:29Z",
                      "sourceType": "Banking"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        }
      },
      "delete": {
        "summary": "Delete connection",
        "operationId": "delete-company-connection",
        "description": "﻿Revoke and remove a connection from a company.\nThis operation is not reversible. The end user would need to reauthorize a new data connection if you wish to view new data for this company.",
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          },
          {
            "$ref": "#/components/parameters/connectionId"
          }
        ],
        "tags": [
          "Connections"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        }
      },
      "patch": {
        "summary": "Unlink connection",
        "description": "﻿This allows you to deauthorize a connection, without deleting it from Codat. This means you can still view any data that has previously been pulled into Codat, and also lets you re-authorize in future if your customer wishes to resume sharing their data.",
        "operationId": "unlink-connection",
        "tags": [
          "Connections"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/companyId"
          },
          {
            "$ref": "#/components/parameters/connectionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connection"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "status": "Unlinked"
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/companies/{companyId}/data/all": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ],
      "post": {
        "summary": "Refresh all data",
        "operationId": "refresh-company-data",
        "x-speakeasy-name-override": "all",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "description": "Refreshes all data types with `fetch on first link` set to `true` for a given company.\n\nThis is an asynchronous operation, and will bring updated data into Codat from the linked integration for you to view.\n\n[Read more](https://docs.codat.io/core-concepts/data-type-settings) about data type settings and `fetch on first link`.",
        "tags": [
          "Refresh data"
        ]
      }
    },
    "/companies/{companyId}/dataStatus": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ],
      "get": {
        "summary": "Get data status",
        "operationId": "get-company-data-status",
        "description": "Get the state of each data type for a company",
        "tags": [
          "Refresh data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataStatusResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "invoices": {
                        "dataType": "invoices",
                        "lastSuccessfulSync": "2022-01-01T00:00:00.000Z",
                        "currentStatus": "success",
                        "latestSyncId": "d03b6979-eb3b-447a-a27a-13cf457a9f48",
                        "latestSuccessfulSyncId": "6883bba8-514d-423f-ba7f-c38285a80b7f"
                      },
                      "bills": {
                        "dataType": "bills",
                        "lastSuccessfulSync": "2022-01-01T00:00:00.000Z",
                        "currentStatus": "failure",
                        "latestSyncId": "d03b6979-eb3b-447a-a27a-13cf457a9f48",
                        "latestSuccessfulSyncId": "6883bba8-514d-423f-ba7f-c38285a80b7f"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        }
      }
    },
    "/companies/{companyId}/data/queue/{dataType}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/dataType"
        }
      ],
      "post": {
        "summary": "Refresh data type",
        "operationId": "refresh-data-type",
        "x-speakeasy-name-override": "by-data-type",
        "description": "Refreshes a given data type for a given company.\n\nThis is an asynchronous operation, and will bring updated data into Codat from the linked integration for you to view.",
        "tags": [
          "Refresh data"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "connectionId",
            "description": "Optionally, provide a data connection id to only queue pull operations on that connection."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PullOperation"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        }
      }
    },
    "/companies/{companyId}/data/history": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ],
      "get": {
        "summary": "List pull operations",
        "tags": [
          "Refresh data"
        ],
        "operationId": "list-pull-operations",
        "x-speakeasy-name-override": "list-pull-operations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnectionHistory"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "results": [
                        {
                          "id": "97d60846-f07a-4d42-b5a0-0bdcc6ebf56b",
                          "companyId": "4645bd78-8988-45bc-ac9e-67ba5df6e4e5",
                          "connectionId": "51baa045-4836-4317-a42e-3542e991e581",
                          "dataType": "invoices",
                          "status": "Initial",
                          "requested": "2022-11-14T11:18:37.2798351Z",
                          "progress": 10,
                          "isCompleted": false,
                          "isErrored": false
                        }
                      ],
                      "_links": {
                        "self": {
                          "href": "../dictionary"
                        },
                        "current": {
                          "href": "../dictionary"
                        },
                        "next": {
                          "href": "../dictionary"
                        },
                        "previous": {
                          "href": "../dictionary"
                        }
                      },
                      "pageNumber": 0,
                      "pageSize": 0,
                      "totalResults": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Malformed-Query"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "description": "Gets the pull operation history (datasets) for a given company.",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/query"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          }
        ]
      }
    },
    "/companies/{companyId}/push": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ],
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/query"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          }
        ],
        "summary": "List push operations",
        "tags": [
          "Push data"
        ],
        "operationId": "get-company-push-history",
        "x-speakeasy-name-override": "list-operations",
        "description": "List push operation records.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushHistoryResponse"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Malformed-Query"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        }
      }
    },
    "/companies/{companyId}/data/history/{datasetId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/datasetId"
        }
      ],
      "get": {
        "summary": "Get pull operation",
        "operationId": "get-pull-operation",
        "x-speakeasy-name-override": "get-pull-operation",
        "tags": [
          "Refresh data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PullOperation"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "description": "Retrieve information about a single dataset or pull operation."
      }
    },
    "/companies/{companyId}/push/{pushOperationKey}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "pushOperationKey",
          "in": "path",
          "required": true,
          "description": "Push operation key."
        }
      ],
      "get": {
        "summary": "Get push operation",
        "tags": [
          "Push data"
        ],
        "operationId": "get-push-operation",
        "x-speakeasy-name-override": "get-operation",
        "description": "Retrieve push operation.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushOperation"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        }
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/accounts": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/connectionId"
        }
      ],
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create account",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResponse"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "description": "The *Create account* endpoint creates a new [account](https://docs.codat.io/accounting-api#/schemas/Account) for a given company's connection.\n\n[Accounts](https://docs.codat.io/accounting-api#/schemas/Account) are the categories a business uses to record accounting transactions.\n\n**Integration-specific behaviour**\n\nRequired data may vary by integration. To see what data to post, first call [Get create account model](https://docs.codat.io/accounting-api#/operations/get-create-chartOfAccounts-model).\n\nCheck out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=chartOfAccounts) for integrations that support creating an account.\n",
        "operationId": "create-account"
      }
    },
    "/companies/{companyId}/data/customers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "List customers",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/query"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customers"
                },
                "examples": {
                  "Clear Books": {
                    "value": {
                      "results": [
                        {
                          "id": "c8180244-74ac-40cf-a5df-6d83661c44d7",
                          "customerName": "Arjun Kuvalis",
                          "contactName": "Werner Langworth",
                          "emailAddress": "Arjun34@hotmail.com",
                          "defaultCurrency": "GBP",
                          "phone": "014605 64820",
                          "addresses": [
                            {
                              "type": "Delivery",
                              "line1": "Suite 214",
                              "line2": "8439 Lueilwitz Passage",
                              "city": "Fernandohaven",
                              "region": "Northern Ireland",
                              "country": "United Kingdom",
                              "postalCode": "JG04 7PV"
                            },
                            {
                              "type": "Delivery",
                              "line1": "Suite 096",
                              "line2": "864 Halie Course",
                              "city": "Juliochester",
                              "region": "England",
                              "country": "United Kingdom",
                              "postalCode": "DZ8 4BF"
                            },
                            {
                              "type": "Delivery",
                              "line1": "Suite 001",
                              "line2": "416 Stokes Fords",
                              "city": "Naderborough",
                              "region": "Wales",
                              "country": "United Kingdom",
                              "postalCode": "XG25 0XX"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Werner Langworth",
                              "email": "Werner_Langworth@hotmail.com",
                              "phone": [],
                              "address": {
                                "type": "Delivery",
                                "line1": "Apt. 145",
                                "line2": "317 Williamson Freeway",
                                "city": "Hortenseville",
                                "region": "Scotland",
                                "country": "United Kingdom",
                                "postalCode": "CV4 2HR"
                              },
                              "status": "Active"
                            },
                            {
                              "name": "Belle Glover",
                              "email": "Belle51@yahoo.com",
                              "phone": [],
                              "address": {
                                "type": "Delivery",
                                "line1": "Suite 075",
                                "line2": "9921 Dickens Walk",
                                "city": "South Ali",
                                "region": "Scotland",
                                "country": "United Kingdom",
                                "postalCode": "TI04 4OO"
                              },
                              "status": "Active"
                            }
                          ],
                          "registrationNumber": "NI7JEJVM",
                          "taxNumber": "7505220209.583549",
                          "status": "Active",
                          "modifiedDate": "2023-04-26T12:38:16Z",
                          "sourceModifiedDate": "2022-07-03T01:27:00",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "6d162ee4-47b4-46c6-a2e6-aa9edd0fe6b0",
                          "customerName": "Breitenberg, Emard and Schiller",
                          "contactName": "Miguel Hahn",
                          "emailAddress": "contact@BreitenbergEmardandSchiller.biz",
                          "defaultCurrency": "GBP",
                          "phone": "0800 445 6957",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "Apt. 184",
                              "line2": "60578 Louie Springs",
                              "city": "East Khalid",
                              "region": "Wales",
                              "country": "United Kingdom",
                              "postalCode": "XW89 7NT"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Miguel Hahn",
                              "email": "Miguel.Hahn@gmail.com",
                              "phone": [
                                {
                                  "number": "018555 09614",
                                  "type": "Landline"
                                }
                              ],
                              "address": {
                                "type": "Delivery",
                                "line1": "Suite 400",
                                "line2": "21930 Milan Lane",
                                "city": "Reingerton",
                                "region": "Wales",
                                "country": "United Kingdom",
                                "postalCode": "QG10 2DL"
                              },
                              "status": "Active"
                            }
                          ],
                          "registrationNumber": "KME0AMIL",
                          "taxNumber": "8560920952.553111",
                          "status": "Archived",
                          "modifiedDate": "2023-04-26T12:38:16Z",
                          "sourceModifiedDate": "2022-12-03T11:05:01",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 20,
                      "_links": {
                        "current": {
                          "href": "/companies/354a121b-855f-4d25-90ad-0905b498c1c0/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/354a121b-855f-4d25-90ad-0905b498c1c0/data/customers"
                        },
                        "next": {
                          "href": "/companies/354a121b-855f-4d25-90ad-0905b498c1c0/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Dynamics 365 Business Central": {
                    "value": {
                      "results": [
                        {
                          "id": "0e2f7751-7696-ed11-bff5-6045bd0d2ad6",
                          "customerName": "",
                          "contactName": "",
                          "emailAddress": "",
                          "defaultCurrency": "GBP",
                          "phone": "",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "",
                              "line2": "",
                              "city": "",
                              "region": "",
                              "country": "",
                              "postalCode": ""
                            }
                          ],
                          "contacts": [
                            {
                              "name": "",
                              "email": "",
                              "phone": [],
                              "address": {
                                "type": "Billing",
                                "line1": "",
                                "line2": "",
                                "city": "",
                                "region": "",
                                "country": "",
                                "postalCode": ""
                              },
                              "status": "Active"
                            }
                          ],
                          "taxNumber": "",
                          "status": "Active",
                          "modifiedDate": "2023-03-27T14:21:25Z",
                          "sourceModifiedDate": "2023-01-17T14:50:54Z",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "0ef95175-48c4-eb11-9f0a-0022481b4343",
                          "customerName": "",
                          "contactName": "",
                          "emailAddress": "",
                          "defaultCurrency": "GBP",
                          "phone": "",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "",
                              "line2": "",
                              "city": "",
                              "region": "",
                              "country": "GB",
                              "postalCode": ""
                            }
                          ],
                          "contacts": [
                            {
                              "name": "",
                              "email": "",
                              "phone": [],
                              "address": {
                                "type": "Billing",
                                "line1": "",
                                "line2": "",
                                "city": "",
                                "region": "",
                                "country": "GB",
                                "postalCode": ""
                              },
                              "status": "Active"
                            }
                          ],
                          "taxNumber": "",
                          "status": "Active",
                          "modifiedDate": "2023-03-27T14:21:25Z",
                          "sourceModifiedDate": "2021-06-03T08:48:36Z",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 42,
                      "_links": {
                        "current": {
                          "href": "/companies/d6849caf-c146-41be-8335-b73346e3bd84/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/d6849caf-c146-41be-8335-b73346e3bd84/data/customers"
                        },
                        "next": {
                          "href": "/companies/d6849caf-c146-41be-8335-b73346e3bd84/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Exact (Netherlands)": {
                    "value": {
                      "results": [
                        {
                          "id": "555f8251-c65a-433a-a813-5dbe04321d1e",
                          "customerName": "Ab Netherlands",
                          "defaultCurrency": "EUR",
                          "addresses": [
                            {
                              "type": "Billing",
                              "country": "NL"
                            }
                          ],
                          "contacts": [],
                          "status": "Active",
                          "modifiedDate": "2022-10-26T13:32:05Z",
                          "sourceModifiedDate": "2021-06-14T15:26:37Z"
                        },
                        {
                          "id": "9fd1f78e-67aa-4af7-8a10-df1fc5fb5841",
                          "customerName": "anna test 2",
                          "defaultCurrency": "EUR",
                          "addresses": [
                            {
                              "type": "Billing",
                              "country": "NL"
                            }
                          ],
                          "contacts": [],
                          "status": "Active",
                          "modifiedDate": "2022-10-26T13:32:05Z",
                          "sourceModifiedDate": "2022-05-24T11:53:21Z"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 71,
                      "_links": {
                        "current": {
                          "href": "/companies/b83b1923-4db6-45a8-a779-b4e320c15979/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/b83b1923-4db6-45a8-a779-b4e320c15979/data/customers"
                        },
                        "next": {
                          "href": "/companies/b83b1923-4db6-45a8-a779-b4e320c15979/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Exact (UK)": {
                    "value": {
                      "results": [
                        {
                          "id": "5f20075a-a28e-434d-81a6-2db0dc170e87",
                          "customerName": "Abdi 99",
                          "emailAddress": "email@codat.io",
                          "defaultCurrency": "GBP",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "Ink Rooms",
                              "city": "London",
                              "country": "GB",
                              "postalCode": "WC1X 0BE"
                            }
                          ],
                          "contacts": [],
                          "registrationNumber": "123456789",
                          "taxNumber": "GB339 0727 47",
                          "status": "Active",
                          "modifiedDate": "2022-10-26T13:33:08Z",
                          "sourceModifiedDate": "2020-02-26T11:23:50Z"
                        },
                        {
                          "id": "1d9dc1a7-92d6-441b-93fd-42c9fb321b1c",
                          "customerName": "Abdulbasit Al-haj",
                          "contactName": "abeee",
                          "emailAddress": "a.alhaj@codat.io",
                          "defaultCurrency": "GBP",
                          "addresses": [
                            {
                              "type": "Billing",
                              "country": "GB"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "abeee",
                              "phone": [],
                              "address": {
                                "type": "Unknown",
                                "line1": "",
                                "country": "GB "
                              },
                              "status": "Active",
                              "modifiedDate": "2020-02-24T12:00:51.027Z"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2022-10-26T13:33:08Z",
                          "sourceModifiedDate": "2020-02-24T12:00:50Z"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 53,
                      "_links": {
                        "current": {
                          "href": "/companies/d95030cd-22b2-482b-9c7b-2980dcc2b1ce/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/d95030cd-22b2-482b-9c7b-2980dcc2b1ce/data/customers"
                        },
                        "next": {
                          "href": "/companies/d95030cd-22b2-482b-9c7b-2980dcc2b1ce/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "FreeAgent": {
                    "value": {
                      "results": [
                        {
                          "id": "11526230",
                          "customerName": "-",
                          "contactName": "Test 1",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "1 Place House",
                              "line2": "",
                              "city": "London",
                              "country": "United Kingdom",
                              "postalCode": "WC1X 1AH"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Test 1",
                              "phone": [],
                              "address": {
                                "type": "Billing",
                                "line1": "1 Place House",
                                "line2": "",
                                "city": "London",
                                "country": "United Kingdom",
                                "postalCode": "WC1X 1AH"
                              },
                              "status": "Unknown"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-04-25T14:19:12Z",
                          "sourceModifiedDate": "2023-04-17T06:02:46Z",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "9677150",
                          "customerName": "-",
                          "contactName": "Test 1",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "1 Place House",
                              "line2": "",
                              "city": "London",
                              "country": "United Kingdom",
                              "postalCode": "WC1X 1AH"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Test 1",
                              "phone": [],
                              "address": {
                                "type": "Billing",
                                "line1": "1 Place House",
                                "line2": "",
                                "city": "London",
                                "country": "United Kingdom",
                                "postalCode": "WC1X 1AH"
                              },
                              "status": "Unknown"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-04-25T14:19:12Z",
                          "sourceModifiedDate": "2023-04-24T06:19:23Z",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 159,
                      "_links": {
                        "current": {
                          "href": "/companies/071ad738-68f3-4561-afd0-69bab9df0803/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/071ad738-68f3-4561-afd0-69bab9df0803/data/customers"
                        },
                        "next": {
                          "href": "/companies/071ad738-68f3-4561-afd0-69bab9df0803/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "FreshBooks": {
                    "value": {
                      "results": [
                        {
                          "id": "634509",
                          "customerName": "A test customer 14 (updated)",
                          "contactName": "test person name",
                          "emailAddress": "test14@example.com",
                          "defaultCurrency": "GBP",
                          "phone": "01876 541245",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "Line 1",
                              "line2": "Line 2",
                              "city": "Some city",
                              "region": "A region",
                              "country": "Country 1",
                              "postalCode": "SW1 2JQ"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "test person1",
                              "email": "test14A@example.com",
                              "phone": [
                                {
                                  "number": "24681012",
                                  "type": "Primary"
                                },
                                {
                                  "number": "121086420",
                                  "type": "Unknown"
                                }
                              ],
                              "status": "Active"
                            },
                            {
                              "name": "test person2",
                              "email": "test14B@example.com",
                              "phone": [
                                {
                                  "number": "1234 56789",
                                  "type": "Primary"
                                },
                                {
                                  "number": "9876 54321",
                                  "type": "Unknown"
                                }
                              ],
                              "status": "Active"
                            },
                            {
                              "name": "test person name",
                              "email": "test14@example.com",
                              "phone": [
                                {
                                  "number": "01876 541245",
                                  "type": "Unknown"
                                }
                              ],
                              "status": "Active"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-03-24T16:07:23Z",
                          "sourceModifiedDate": "2022-05-18T09:23:56",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "634486",
                          "customerName": "A test customer name 2",
                          "contactName": "test person name",
                          "emailAddress": "test8@example.com",
                          "defaultCurrency": "GBP",
                          "phone": "01876 541245",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "Line 1",
                              "line2": "Line 2",
                              "city": "Some city",
                              "region": "A region",
                              "country": "Country 1",
                              "postalCode": "SW1 2JQ"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "test person1",
                              "email": "test9@example.com",
                              "phone": [
                                {
                                  "number": "24681012",
                                  "type": "Primary"
                                },
                                {
                                  "number": "121086420",
                                  "type": "Unknown"
                                }
                              ],
                              "status": "Active"
                            },
                            {
                              "name": "test person2",
                              "email": "test10@example.com",
                              "phone": [
                                {
                                  "number": "123456789",
                                  "type": "Primary"
                                },
                                {
                                  "number": "987654321",
                                  "type": "Unknown"
                                }
                              ],
                              "status": "Active"
                            },
                            {
                              "name": "test person name",
                              "email": "test8@example.com",
                              "phone": [
                                {
                                  "number": "01876 541245",
                                  "type": "Unknown"
                                }
                              ],
                              "status": "Active"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-03-24T16:07:23Z",
                          "sourceModifiedDate": "2022-05-11T11:39:58",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 39,
                      "_links": {
                        "current": {
                          "href": "/companies/3691c49e-0db4-4172-b3ab-e4084c365013/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/3691c49e-0db4-4172-b3ab-e4084c365013/data/customers"
                        },
                        "next": {
                          "href": "/companies/3691c49e-0db4-4172-b3ab-e4084c365013/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "KashFlow": {
                    "value": {
                      "results": [
                        {
                          "id": "92227673",
                          "customerName": "Chekko Customer Test 01",
                          "contactName": "",
                          "emailAddress": "",
                          "phone": "",
                          "addresses": [],
                          "contacts": [
                            {
                              "name": "",
                              "email": "",
                              "phone": [],
                              "status": "Active"
                            }
                          ],
                          "taxNumber": "",
                          "status": "Active",
                          "modifiedDate": "2022-09-30T10:29:15Z",
                          "sourceModifiedDate": "0001-01-01T00:00:00"
                        },
                        {
                          "id": "88459410",
                          "customerName": "Diogo Sousa",
                          "contactName": "Mr Diogo Sousa",
                          "emailAddress": "diogomail@mail.com",
                          "phone": "123123123",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "Billing Address",
                              "line2": "Billing line 2 Billing line 3",
                              "city": "Billing line 4",
                              "country": "United Kingdom",
                              "postalCode": "123321"
                            },
                            {
                              "type": "Delivery",
                              "line1": "Delivery Address",
                              "line2": "Delivery line2 Delivery line3",
                              "city": "Delivery line4",
                              "country": "United Kingdom",
                              "postalCode": "123321"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Mr Diogo Sousa",
                              "email": "diogomail@mail.com",
                              "phone": [
                                {
                                  "number": "123123123",
                                  "type": "Landline"
                                },
                                {
                                  "number": "321321321",
                                  "type": "Mobile"
                                }
                              ],
                              "address": {
                                "type": "Billing",
                                "line1": "Billing Address",
                                "line2": "Billing line 2 Billing line 3",
                                "city": "Billing line 4",
                                "country": "United Kingdom",
                                "postalCode": "123321"
                              },
                              "status": "Active"
                            },
                            {
                              "name": "Mr Diogo Sousa",
                              "phone": [],
                              "address": {
                                "type": "Delivery",
                                "line1": "Delivery Address",
                                "line2": "Delivery line2 Delivery line3",
                                "city": "Delivery line4",
                                "country": "United Kingdom",
                                "postalCode": "123321"
                              },
                              "status": "Active"
                            }
                          ],
                          "taxNumber": "",
                          "status": "Active",
                          "modifiedDate": "2022-09-30T10:29:15Z",
                          "sourceModifiedDate": "2021-05-04T13:22:19"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 10,
                      "_links": {
                        "current": {
                          "href": "/companies/3a707a99-89da-4b16-a5d6-595333a16352/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/3a707a99-89da-4b16-a5d6-595333a16352/data/customers"
                        },
                        "next": {
                          "href": "/companies/3a707a99-89da-4b16-a5d6-595333a16352/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Oracle NetSuite": {
                    "value": {
                      "results": [
                        {
                          "id": "773",
                          "customerName": "119 Test Customer",
                          "contactName": "Mr Test  Customer",
                          "defaultCurrency": "GBP",
                          "addresses": [],
                          "contacts": [],
                          "status": "Active",
                          "modifiedDate": "2023-01-30T14:48:02Z",
                          "sourceModifiedDate": "2022-01-11T12:28:49"
                        },
                        {
                          "id": "172722",
                          "customerName": "1248 European Company",
                          "contactName": "European Company",
                          "defaultCurrency": "GBP",
                          "addresses": [],
                          "contacts": [],
                          "status": "Active",
                          "modifiedDate": "2023-01-30T14:48:02Z",
                          "sourceModifiedDate": "2022-07-27T14:29:16"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 4,
                      "_links": {
                        "current": {
                          "href": "/companies/d5074b08-6a34-4b06-a742-236edf5dc4f1/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/d5074b08-6a34-4b06-a742-236edf5dc4f1/data/customers"
                        },
                        "next": {
                          "href": "/companies/d5074b08-6a34-4b06-a742-236edf5dc4f1/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "QuickBooks Desktop": {
                    "value": {
                      "results": [
                        {
                          "id": "150000-933272658",
                          "customerName": "Abercrombie, Kristy",
                          "contactName": "Kristy Abercrombie",
                          "emailAddress": "kristy@samplename.com",
                          "defaultCurrency": "GBP",
                          "phone": "415-555-6579",
                          "addresses": [
                            {
                              "type": "Delivery",
                              "line1": "Kristy Abercrombie",
                              "line2": "5647 Cypress Hill Rd",
                              "city": "Bayshore",
                              "region": "CA",
                              "postalCode": "94326"
                            },
                            {
                              "type": "Billing",
                              "line1": "Kristy Abercrombie",
                              "line2": "5647 Cypress Hill Rd",
                              "city": "Bayshore",
                              "region": "CA",
                              "postalCode": "94326"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Abercrombie, Kristy",
                              "email": "kristy@samplename.com",
                              "phone": [
                                {
                                  "number": "415-555-6579",
                                  "type": "Primary"
                                }
                              ],
                              "status": "Active"
                            },
                            {
                              "name": "Kristy Abercrombie",
                              "phone": [],
                              "status": "Active"
                            },
                            {
                              "name": "Steve Darcangelo",
                              "phone": [],
                              "status": "Active"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-04-26T09:07:55Z",
                          "sourceModifiedDate": "2023-12-16T05:06:42",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "800000D0-1182061376",
                          "customerName": "Allard, Robert",
                          "contactName": "Amanda Roberts",
                          "emailAddress": "rallard@myemail.com",
                          "defaultCurrency": "GBP",
                          "phone": "650-555-3422",
                          "addresses": [
                            {
                              "type": "Delivery",
                              "line1": "Robert Allard",
                              "line2": "92834 Chandler St.",
                              "city": "Millbrae",
                              "region": "CA",
                              "postalCode": "94030"
                            },
                            {
                              "type": "Billing",
                              "line1": "Robert Allard",
                              "line2": "92834 Chandler St.",
                              "city": "Millbrae",
                              "region": "CA",
                              "postalCode": "94030"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Allard, Robert",
                              "email": "rallard@myemail.com",
                              "phone": [
                                {
                                  "number": "650-555-3422",
                                  "type": "Primary"
                                },
                                {
                                  "number": "650-555-9804",
                                  "type": "Fax"
                                },
                                {
                                  "number": "650-555-8349",
                                  "type": "Unknown"
                                }
                              ],
                              "status": "Active"
                            },
                            {
                              "name": "Robert Allard",
                              "phone": [],
                              "status": "Active"
                            },
                            {
                              "name": "Rachel Fisher",
                              "phone": [],
                              "status": "Active"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-04-26T09:07:55Z",
                          "sourceModifiedDate": "2023-12-16T05:06:42",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 64,
                      "_links": {
                        "current": {
                          "href": "/companies/fc72ba08-af13-4474-b28a-01dcfa6cfb51/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/fc72ba08-af13-4474-b28a-01dcfa6cfb51/data/customers"
                        },
                        "next": {
                          "href": "/companies/fc72ba08-af13-4474-b28a-01dcfa6cfb51/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "QuickBooks Online": {
                    "value": {
                      "results": [
                        {
                          "id": "9",
                          "customerName": "Abe",
                          "contactName": "Abraham's Company",
                          "emailAddress": "ab@email.com",
                          "defaultCurrency": "GBP",
                          "addresses": [],
                          "contacts": [
                            {
                              "name": "Abe",
                              "email": "ab@email.com",
                              "phone": [
                                {
                                  "number": "01111111111",
                                  "type": "Mobile"
                                }
                              ],
                              "status": "Active"
                            }
                          ],
                          "registrationNumber": "XXXX9900001",
                          "taxNumber": "XXXX9900001",
                          "status": "Active",
                          "modifiedDate": "2023-01-18T11:02:35Z",
                          "sourceModifiedDate": "2022-12-08T15:42:59Z"
                        },
                        {
                          "id": "49",
                          "customerName": "adeel qbo child test",
                          "contactName": "Adeel test",
                          "emailAddress": "adeel@adeel.com",
                          "defaultCurrency": "GBP",
                          "phone": "123456789",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "4 Privet Drive",
                              "city": "London",
                              "country": "United Kingdom",
                              "postalCode": "WD25 7LR"
                            },
                            {
                              "type": "Delivery",
                              "line1": "4 Privet Drive",
                              "city": "London",
                              "country": "United Kingdom",
                              "postalCode": "WD25 7LR"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Adeel test",
                              "email": "adeel@adeel.com",
                              "phone": [
                                {
                                  "number": "123456789",
                                  "type": "Primary"
                                },
                                {
                                  "number": "07546543216",
                                  "type": "Mobile"
                                }
                              ],
                              "address": {
                                "type": "Billing",
                                "line1": "4 Privet Drive",
                                "city": "London",
                                "country": "United Kingdom",
                                "postalCode": "WD25 7LR"
                              },
                              "status": "Active"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-01-18T11:02:35Z",
                          "sourceModifiedDate": "2022-08-22T09:21:09Z"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 40,
                      "_links": {
                        "current": {
                          "href": "/companies/10818b5e-6e6a-4ed4-a1c5-3e3efe626e87/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/10818b5e-6e6a-4ed4-a1c5-3e3efe626e87/data/customers"
                        },
                        "next": {
                          "href": "/companies/10818b5e-6e6a-4ed4-a1c5-3e3efe626e87/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "QuickBooks Online Sandbox": {
                    "value": {
                      "results": [
                        {
                          "id": "66",
                          "customerName": "Abercrombie International Group",
                          "contactName": "Kristy Abercrombie",
                          "defaultCurrency": "GBP",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "123 Main St",
                              "city": "New York, NY"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Abercrombie International Group (deleted)",
                              "phone": [],
                              "address": {
                                "type": "Billing",
                                "line1": "123 Main St",
                                "city": "New York, NY"
                              },
                              "status": "Archived"
                            }
                          ],
                          "status": "Archived",
                          "modifiedDate": "2023-04-26T09:35:56Z",
                          "sourceModifiedDate": "2016-09-12T18:53:19Z",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "67",
                          "customerName": "Abercrombie International Group",
                          "contactName": "Natalie Watts",
                          "emailAddress": "n.watts@google.com",
                          "defaultCurrency": "USD",
                          "addresses": [
                            {
                              "type": "Billing"
                            },
                            {
                              "type": "Delivery"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Abercrombie International Group",
                              "email": "n.watts@google.com",
                              "phone": [],
                              "address": {
                                "type": "Billing"
                              },
                              "status": "Active"
                            }
                          ],
                          "registrationNumber": "XXXXVat123456",
                          "taxNumber": "XXXXVat123456",
                          "status": "Active",
                          "modifiedDate": "2023-04-26T09:35:56Z",
                          "sourceModifiedDate": "2023-03-29T01:12:55Z",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 243,
                      "_links": {
                        "current": {
                          "href": "/companies/5a7f3597-36e1-4216-86fe-289ad36088a6/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/5a7f3597-36e1-4216-86fe-289ad36088a6/data/customers"
                        },
                        "next": {
                          "href": "/companies/5a7f3597-36e1-4216-86fe-289ad36088a6/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Sage 200cloud": {
                    "value": {
                      "results": [
                        {
                          "id": "A1D001",
                          "customerName": "A1 Design Services",
                          "contactName": "Lee Dalkin",
                          "emailAddress": "newbusinessadvice@sage.com",
                          "defaultCurrency": "GBP",
                          "phone": "01742 876 234",
                          "addresses": [
                            {
                              "type": "Delivery",
                              "line1": "67a Station Road",
                              "line2": "",
                              "city": "Blackpool",
                              "region": "Lancashire",
                              "country": "",
                              "postalCode": "BP12 7HT"
                            },
                            {
                              "type": "Delivery",
                              "line1": "23a Union Street",
                              "line2": "",
                              "city": "Manchester",
                              "region": "",
                              "country": "",
                              "postalCode": "M2 6JK"
                            },
                            {
                              "type": "Billing",
                              "line1": "67a Station Road",
                              "line2": "",
                              "city": "Blackpool",
                              "region": "Lancashire",
                              "country": "Great Britain",
                              "postalCode": "BP12 7HT"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Lee Dalkin",
                              "email": "newbusinessadvice@sage.com",
                              "phone": [
                                {
                                  "number": "01742 876 234",
                                  "type": "Landline"
                                },
                                {
                                  "number": "01742 876 235",
                                  "type": "Landline"
                                },
                                {
                                  "number": "01742 876 236",
                                  "type": "Fax"
                                }
                              ],
                              "status": "Active"
                            },
                            {
                              "name": "Malcolm Leverret",
                              "email": "",
                              "phone": [],
                              "status": "Active"
                            },
                            {
                              "name": "Jim Thomas",
                              "email": "Jim@a1designservices.co.uk",
                              "phone": [
                                {
                                  "number": "01742 876 234",
                                  "type": "Landline"
                                },
                                {
                                  "number": "01742 876 235",
                                  "type": "Fax"
                                }
                              ],
                              "status": "Active"
                            },
                            {
                              "name": "Jullian Plawsworth",
                              "email": "Jullian@a1designservices.co.uk",
                              "phone": [
                                {
                                  "number": "0151 349 3939",
                                  "type": "Landline"
                                },
                                {
                                  "number": "0151 349 3940",
                                  "type": "Fax"
                                }
                              ],
                              "status": "Active"
                            }
                          ],
                          "registrationNumber": "",
                          "taxNumber": "GB238 3839 38",
                          "status": "Active",
                          "modifiedDate": "2022-10-14T09:35:53Z",
                          "sourceModifiedDate": "2022-04-27T15:17:36Z"
                        },
                        {
                          "id": "A1D002",
                          "customerName": "A2 Design Services",
                          "contactName": "Lee Dalkin",
                          "emailAddress": "newbusinessadvice@sage.com",
                          "defaultCurrency": "GBP",
                          "phone": "01742 876 234",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "77a Station Road",
                              "line2": "",
                              "city": "Blackpool",
                              "region": "Lancashire",
                              "country": "Great Britain",
                              "postalCode": "BP12 7HT"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Lee Dalkin",
                              "email": "newbusinessadvice@sage.com",
                              "phone": [
                                {
                                  "number": "01742 876 234",
                                  "type": "Landline"
                                },
                                {
                                  "number": "01742 876 235",
                                  "type": "Landline"
                                },
                                {
                                  "number": "01742 876 236",
                                  "type": "Fax"
                                }
                              ],
                              "status": "Active"
                            },
                            {
                              "name": "Malcolm Leverret",
                              "email": "",
                              "phone": [],
                              "status": "Active"
                            },
                            {
                              "name": "Jim Thomas",
                              "email": "Jim@a1designservices.co.uk",
                              "phone": [
                                {
                                  "number": "01742 876 234",
                                  "type": "Landline"
                                },
                                {
                                  "number": "01742 876 235",
                                  "type": "Fax"
                                }
                              ],
                              "status": "Active"
                            },
                            {
                              "name": "Jullian Plawsworth",
                              "email": "Jullian@a1designservices.co.uk",
                              "phone": [
                                {
                                  "number": "0151 349 3939",
                                  "type": "Landline"
                                },
                                {
                                  "number": "0151 349 3940",
                                  "type": "Fax"
                                }
                              ],
                              "status": "Active"
                            }
                          ],
                          "registrationNumber": "",
                          "taxNumber": "GB238 3839 40",
                          "status": "Active",
                          "modifiedDate": "2022-10-14T09:35:53Z",
                          "sourceModifiedDate": "2020-09-23T10:28:58Z"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 43,
                      "_links": {
                        "current": {
                          "href": "/companies/93c21e2d-049c-4d24-b41b-57e61c30b69e/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/93c21e2d-049c-4d24-b41b-57e61c30b69e/data/customers"
                        },
                        "next": {
                          "href": "/companies/93c21e2d-049c-4d24-b41b-57e61c30b69e/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Sage 50 (UK)": {
                    "value": {
                      "results": [
                        {
                          "id": "A1D001",
                          "customerName": "A1 Design Services",
                          "contactName": "Ian Cairns",
                          "emailAddress": "newbusinessadvice@sage.com",
                          "defaultCurrency": "GBP",
                          "phone": "01742 876 234",
                          "addresses": [
                            {
                              "type": "Delivery",
                              "line1": "67a Station Road",
                              "line2": "",
                              "city": "Blackpool",
                              "region": "Lancashire",
                              "country": "GB",
                              "postalCode": "BP12 7HT"
                            },
                            {
                              "type": "Delivery",
                              "line1": "23a Union Street",
                              "line2": "",
                              "city": "Manchester",
                              "region": "",
                              "country": "GB",
                              "postalCode": "M2 6JK"
                            },
                            {
                              "type": "Unknown",
                              "line1": "67a Station Road",
                              "line2": "",
                              "city": "Blackpool",
                              "region": "Lancashire",
                              "country": "GB",
                              "postalCode": "BP12 7HT"
                            }
                          ],
                          "contacts": [],
                          "taxNumber": "GB238 3839 38",
                          "status": "Active",
                          "modifiedDate": "2023-03-30T14:42:41Z",
                          "sourceModifiedDate": "2022-11-25T09:43:54Z",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "ABS001",
                          "customerName": "ABS Garages Ltd",
                          "contactName": "Mike Hall",
                          "emailAddress": "newbusinessadvice@sage.com",
                          "defaultCurrency": "GBP",
                          "phone": "0191 254 5909",
                          "addresses": [
                            {
                              "type": "Delivery",
                              "line1": "Swanson Industries",
                              "line2": "Dukes Industrial Estate",
                              "city": "Whitley Bay",
                              "region": "North Tyneside",
                              "country": "GB",
                              "postalCode": "NE56 4ER"
                            },
                            {
                              "type": "Delivery",
                              "line1": "Unit 34",
                              "line2": "Holystone Ind Estate",
                              "city": "Hebburn",
                              "region": "Tyne & Wear",
                              "country": "GB",
                              "postalCode": "NE31 1VB"
                            },
                            {
                              "type": "Unknown",
                              "line1": "Unit 34",
                              "line2": "Holystone Ind Estate",
                              "city": "Hebburn",
                              "region": "Tyne & Wear",
                              "country": "GB",
                              "postalCode": "NE31 1VB"
                            }
                          ],
                          "contacts": [],
                          "taxNumber": "GB745 4584 68",
                          "status": "Active",
                          "modifiedDate": "2023-03-30T14:42:41Z",
                          "sourceModifiedDate": "2022-11-25T09:43:54Z",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 30,
                      "_links": {
                        "current": {
                          "href": "/companies/cf5f2a47-2990-4221-bae6-0c19c86ac304/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/cf5f2a47-2990-4221-bae6-0c19c86ac304/data/customers"
                        },
                        "next": {
                          "href": "/companies/cf5f2a47-2990-4221-bae6-0c19c86ac304/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Sage Business Cloud Accounting": {
                    "value": {
                      "results": [
                        {
                          "id": "260f6a3f94a243738f2d5e08496a41a8",
                          "customerName": "100 test name",
                          "contactName": "Main Contact",
                          "emailAddress": "email@codat.io",
                          "defaultCurrency": "GBP",
                          "phone": "contact phone number",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "Aruba Address line 1",
                              "line2": "Aruba Address line 2",
                              "city": "Aruba City",
                              "region": "Aruba Province",
                              "country": "Aruba (AW)",
                              "postalCode": "Aruba Post"
                            }
                          ],
                          "contacts": [
                            {
                              "phone": [
                                {
                                  "number": "contact mobile number",
                                  "type": "Mobile"
                                },
                                {
                                  "number": "contact fax number",
                                  "type": "Fax"
                                }
                              ],
                              "status": "Unknown"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2022-10-24T14:52:54Z",
                          "sourceModifiedDate": "2021-05-10T16:31:51Z"
                        },
                        {
                          "id": "44a5d9461d9e4f6d90a5ace251c5cf35",
                          "customerName": "100 test name DS",
                          "contactName": "Main Contact",
                          "emailAddress": "DCemail@codat.io",
                          "defaultCurrency": "GBP",
                          "phone": "contact phone number",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "POST - Aruba Address line 1",
                              "line2": "POST - Aruba Address line 2",
                              "city": "POST - Aruba City",
                              "region": "Aruba Province",
                              "country": "Aruba (AW)",
                              "postalCode": "Aruba Post"
                            }
                          ],
                          "contacts": [],
                          "status": "Active",
                          "modifiedDate": "2022-10-24T14:52:54Z",
                          "sourceModifiedDate": "2021-06-10T14:22:46Z"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 168,
                      "_links": {
                        "current": {
                          "href": "/companies/390083e2-351b-407c-a3be-55081c36c182/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/390083e2-351b-407c-a3be-55081c36c182/data/customers"
                        },
                        "next": {
                          "href": "/companies/390083e2-351b-407c-a3be-55081c36c182/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Sage Intacct": {
                    "value": {
                      "results": [
                        {
                          "id": "188",
                          "customerName": "33Across",
                          "contactName": "Yuna Conn",
                          "defaultCurrency": "USD",
                          "phone": "520-393-4468",
                          "addresses": [
                            {
                              "type": "Unknown",
                              "line1": "155 Westend Point",
                              "line2": "",
                              "city": "Albuquerque",
                              "region": "NM",
                              "country": "United States",
                              "postalCode": "87140"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Conn, Yuna",
                              "phone": [
                                {
                                  "number": "520-393-4468",
                                  "type": "Primary"
                                }
                              ],
                              "address": {
                                "type": "Unknown",
                                "line1": "155 Westend Point",
                                "line2": "",
                                "city": "Albuquerque",
                                "region": "NM",
                                "country": "United States",
                                "postalCode": "87140"
                              },
                              "status": "Unknown"
                            }
                          ],
                          "taxNumber": "",
                          "status": "Active",
                          "modifiedDate": "2023-04-04T16:32:21Z",
                          "sourceModifiedDate": "2022-09-06T12:58:27",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "324",
                          "customerName": "3Way International Logistics",
                          "contactName": "Lauri O'Heagertie",
                          "defaultCurrency": "CAD",
                          "phone": "410-309-3976",
                          "addresses": [
                            {
                              "type": "Unknown",
                              "line1": "7 Lerdahl Junction",
                              "line2": "",
                              "city": "Sparwood",
                              "region": "British Columbia",
                              "country": "Canada",
                              "postalCode": "L4R"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "O'Heagertie, Lauri",
                              "phone": [
                                {
                                  "number": "410-309-3976",
                                  "type": "Primary"
                                }
                              ],
                              "address": {
                                "type": "Unknown",
                                "line1": "7 Lerdahl Junction",
                                "line2": "",
                                "city": "Sparwood",
                                "region": "British Columbia",
                                "country": "Canada",
                                "postalCode": "L4R"
                              },
                              "status": "Unknown"
                            }
                          ],
                          "taxNumber": "",
                          "status": "Active",
                          "modifiedDate": "2023-04-04T16:32:21Z",
                          "sourceModifiedDate": "2020-10-20T05:01:49",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 530,
                      "_links": {
                        "current": {
                          "href": "/companies/df02b289-cb16-4964-ac4d-9fd60b04538e/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/df02b289-cb16-4964-ac4d-9fd60b04538e/data/customers"
                        },
                        "next": {
                          "href": "/companies/df02b289-cb16-4964-ac4d-9fd60b04538e/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Wave": {
                    "value": {
                      "results": [
                        {
                          "id": "QnVzaW5lc3M6ZTI0OGQyZDctMWE5Ni00YTk4LWFkOTEtMDdlMGYyMmNhNmE2O0N1c3RvbWVyOjMyMzkzNTA4",
                          "customerName": "ABC Textiles",
                          "contactName": "",
                          "emailAddress": "c.taylor@codat.io",
                          "defaultCurrency": "USD",
                          "addresses": [],
                          "contacts": [],
                          "status": "Active",
                          "modifiedDate": "2022-11-16T18:15:30Z",
                          "sourceModifiedDate": "2019-10-17T07:59:04Z"
                        },
                        {
                          "id": "QnVzaW5lc3M6ZTI0OGQyZDctMWE5Ni00YTk4LWFkOTEtMDdlMGYyMmNhNmE2O0N1c3RvbWVyOjM3MTUzNDI2",
                          "customerName": "Coffee Cart",
                          "contactName": "Coffee Carl",
                          "emailAddress": "coffee.cart@example.com",
                          "defaultCurrency": "GBP",
                          "phone": "0201111",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "11 Coffee Lane",
                              "line2": "Coffee Town",
                              "city": "Coffee City",
                              "region": "Hampshire",
                              "country": "United Kingdom",
                              "postalCode": "CC1 1CC"
                            }
                          ],
                          "contacts": [
                            {
                              "name": "Coffee Carl",
                              "phone": [
                                {
                                  "number": "07733",
                                  "type": "Mobile"
                                }
                              ],
                              "status": "Active"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2022-11-16T18:15:30Z",
                          "sourceModifiedDate": "2020-03-17T19:12:39Z"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 10,
                      "_links": {
                        "current": {
                          "href": "/companies/0b22b59d-b4e5-4c35-b03f-88bbbcb41256/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/0b22b59d-b4e5-4c35-b03f-88bbbcb41256/data/customers"
                        },
                        "next": {
                          "href": "/companies/0b22b59d-b4e5-4c35-b03f-88bbbcb41256/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Xero": {
                    "value": {
                      "results": [
                        {
                          "id": "e4c9d0e2-c285-4e85-b579-6d28b180c730",
                          "customerName": "24 Locks",
                          "emailAddress": "",
                          "addresses": [],
                          "contacts": [],
                          "status": "Active",
                          "modifiedDate": "2023-03-15T20:35:10Z",
                          "sourceModifiedDate": "2023-02-17T18:03:42",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "bab779bc-c5fb-42cb-a888-953e8309711c",
                          "customerName": "7-Eleven",
                          "emailAddress": "",
                          "addresses": [],
                          "contacts": [],
                          "status": "Active",
                          "modifiedDate": "2023-03-15T20:35:10Z",
                          "sourceModifiedDate": "2023-02-17T18:03:42",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 48,
                      "_links": {
                        "current": {
                          "href": "/companies/5ced9667-a310-443a-a711-958d36377141/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/5ced9667-a310-443a-a711-958d36377141/data/customers"
                        },
                        "next": {
                          "href": "/companies/5ced9667-a310-443a-a711-958d36377141/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Zoho Books": {
                    "value": {
                      "results": [
                        {
                          "id": "104957000000032105",
                          "customerName": "A B",
                          "contactName": "Contact (First Name) Contact (Last Name)",
                          "emailAddress": "contactperson@whateveryouwantidontcare12345.com",
                          "defaultCurrency": "GBP",
                          "phone": "Work Phone",
                          "addresses": [],
                          "contacts": [
                            {
                              "name": "Contact (First Name) Contact (Last Name)",
                              "email": "contactperson@whateveryouwantidontcare12345.com",
                              "phone": [
                                {
                                  "number": "Work Phone",
                                  "type": "Landline"
                                },
                                {
                                  "number": "Mobile",
                                  "type": "Mobile"
                                }
                              ],
                              "status": "Active"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2022-10-03T08:40:37Z",
                          "sourceModifiedDate": "2022-06-09T14:36:47"
                        },
                        {
                          "id": "104957000000054050",
                          "customerName": "Doe, John",
                          "contactName": "John Doe",
                          "emailAddress": "",
                          "defaultCurrency": "GBP",
                          "addresses": [],
                          "contacts": [
                            {
                              "name": "John Doe",
                              "email": "",
                              "phone": [],
                              "status": "Active"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2022-10-03T08:40:37Z",
                          "sourceModifiedDate": "2022-09-28T15:09:22"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 14,
                      "_links": {
                        "current": {
                          "href": "/companies/d0b68840-db50-4bc3-b88c-96e225333fea/data/customers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/d0b68840-db50-4bc3-b88c-96e225333fea/data/customers"
                        },
                        "next": {
                          "href": "/companies/d0b68840-db50-4bc3-b88c-96e225333fea/data/customers?page=2&pageSize=2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Malformed-Query"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        },
        "description": "The *List customers* endpoint returns a list of [customers](https://docs.codat.io/accounting-api#/schemas/Customer) for a given company's connection.\n\n[Customers](https://docs.codat.io/accounting-api#/schemas/Customer) are people or organizations that buy goods or services from the SMB.\n\nBefore using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/codat-api#/operations/refresh-company-data).\n    ",
        "operationId": "list-customers"
      }
    },
    "/companies/{companyId}/data/customers/{customerId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get customer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                },
                "examples": {
                  "Clear Books": {
                    "value": {
                      "id": "c8180244-74ac-40cf-a5df-6d83661c44d7",
                      "customerName": "Arjun Kuvalis",
                      "contactName": "Werner Langworth",
                      "emailAddress": "Arjun34@hotmail.com",
                      "defaultCurrency": "GBP",
                      "phone": "014605 64820",
                      "addresses": [
                        {
                          "type": "Delivery",
                          "line1": "Suite 214",
                          "line2": "8439 Lueilwitz Passage",
                          "city": "Fernandohaven",
                          "region": "Northern Ireland",
                          "country": "United Kingdom",
                          "postalCode": "JG04 7PV"
                        },
                        {
                          "type": "Delivery",
                          "line1": "Suite 096",
                          "line2": "864 Halie Course",
                          "city": "Juliochester",
                          "region": "England",
                          "country": "United Kingdom",
                          "postalCode": "DZ8 4BF"
                        },
                        {
                          "type": "Delivery",
                          "line1": "Suite 001",
                          "line2": "416 Stokes Fords",
                          "city": "Naderborough",
                          "region": "Wales",
                          "country": "United Kingdom",
                          "postalCode": "XG25 0XX"
                        }
                      ],
                      "contacts": [
                        {
                          "name": "Werner Langworth",
                          "email": "Werner_Langworth@hotmail.com",
                          "phone": [],
                          "address": {
                            "type": "Delivery",
                            "line1": "Apt. 145",
                            "line2": "317 Williamson Freeway",
                            "city": "Hortenseville",
                            "region": "Scotland",
                            "country": "United Kingdom",
                            "postalCode": "CV4 2HR"
                          },
                          "status": "Active"
                        },
                        {
                          "name": "Belle Glover",
                          "email": "Belle51@yahoo.com",
                          "phone": [],
                          "address": {
                            "type": "Delivery",
                            "line1": "Suite 075",
                            "line2": "9921 Dickens Walk",
                            "city": "South Ali",
                            "region": "Scotland",
                            "country": "United Kingdom",
                            "postalCode": "TI04 4OO"
                          },
                          "status": "Active"
                        }
                      ],
                      "registrationNumber": "NI7JEJVM",
                      "taxNumber": "7505220209.583549",
                      "status": "Active",
                      "modifiedDate": "2023-04-26T12:38:16Z",
                      "sourceModifiedDate": "2022-07-03T01:27:00",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Dynamics 365 Business Central": {
                    "value": {
                      "id": "0e2f7751-7696-ed11-bff5-6045bd0d2ad6",
                      "customerName": "",
                      "contactName": "",
                      "emailAddress": "",
                      "defaultCurrency": "GBP",
                      "phone": "",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "",
                          "line2": "",
                          "city": "",
                          "region": "",
                          "country": "",
                          "postalCode": ""
                        }
                      ],
                      "contacts": [
                        {
                          "name": "",
                          "email": "",
                          "phone": [],
                          "address": {
                            "type": "Billing",
                            "line1": "",
                            "line2": "",
                            "city": "",
                            "region": "",
                            "country": "",
                            "postalCode": ""
                          },
                          "status": "Active"
                        }
                      ],
                      "taxNumber": "",
                      "status": "Active",
                      "modifiedDate": "2023-03-27T14:21:25Z",
                      "sourceModifiedDate": "2023-01-17T14:50:54Z",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Exact (Netherlands)": {
                    "value": {
                      "id": "555f8251-c65a-433a-a813-5dbe04321d1e",
                      "customerName": "Ab Netherlands",
                      "defaultCurrency": "EUR",
                      "addresses": [
                        {
                          "type": "Billing",
                          "country": "NL"
                        }
                      ],
                      "contacts": [],
                      "status": "Active",
                      "modifiedDate": "2022-10-26T13:32:05Z",
                      "sourceModifiedDate": "2021-06-14T15:26:37Z"
                    }
                  },
                  "Exact (UK)": {
                    "value": {
                      "id": "5f20075a-a28e-434d-81a6-2db0dc170e87",
                      "customerName": "Abdi 99",
                      "emailAddress": "email@codat.io",
                      "defaultCurrency": "GBP",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "Ink Rooms",
                          "city": "London",
                          "country": "GB",
                          "postalCode": "WC1X 0BE"
                        }
                      ],
                      "contacts": [],
                      "registrationNumber": "123456789",
                      "taxNumber": "GB339 0727 47",
                      "status": "Active",
                      "modifiedDate": "2022-10-26T13:33:08Z",
                      "sourceModifiedDate": "2020-02-26T11:23:50Z"
                    }
                  },
                  "FreeAgent": {
                    "value": {
                      "id": "11526230",
                      "customerName": "-",
                      "contactName": "Test 1",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "1 Place House",
                          "line2": "",
                          "city": "London",
                          "country": "United Kingdom",
                          "postalCode": "WC1X 1AH"
                        }
                      ],
                      "contacts": [
                        {
                          "name": "Test 1",
                          "phone": [],
                          "address": {
                            "type": "Billing",
                            "line1": "1 Place House",
                            "line2": "",
                            "city": "London",
                            "country": "United Kingdom",
                            "postalCode": "WC1X 1AH"
                          },
                          "status": "Unknown"
                        }
                      ],
                      "status": "Active",
                      "modifiedDate": "2023-04-25T14:19:12Z",
                      "sourceModifiedDate": "2023-04-17T06:02:46Z",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "FreshBooks": {
                    "value": {
                      "id": "634509",
                      "customerName": "A test customer 14 (updated)",
                      "contactName": "test person name",
                      "emailAddress": "test14@example.com",
                      "defaultCurrency": "GBP",
                      "phone": "01876 541245",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "Line 1",
                          "line2": "Line 2",
                          "city": "Some city",
                          "region": "A region",
                          "country": "Country 1",
                          "postalCode": "SW1 2JQ"
                        }
                      ],
                      "contacts": [
                        {
                          "name": "test person1",
                          "email": "test14A@example.com",
                          "phone": [
                            {
                              "number": "24681012",
                              "type": "Primary"
                            },
                            {
                              "number": "121086420",
                              "type": "Unknown"
                            }
                          ],
                          "status": "Active"
                        },
                        {
                          "name": "test person2",
                          "email": "test14B@example.com",
                          "phone": [
                            {
                              "number": "123456789",
                              "type": "Primary"
                            },
                            {
                              "number": "987654321",
                              "type": "Unknown"
                            }
                          ],
                          "status": "Active"
                        },
                        {
                          "name": "test person name",
                          "email": "test14@example.com",
                          "phone": [
                            {
                              "number": "01876 541245",
                              "type": "Unknown"
                            }
                          ],
                          "status": "Active"
                        }
                      ],
                      "status": "Active",
                      "modifiedDate": "2023-03-24T16:07:23Z",
                      "sourceModifiedDate": "2022-05-18T09:23:56",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "KashFlow": {
                    "value": {
                      "id": "92227673",
                      "customerName": "Chekko Customer Test 01",
                      "contactName": "",
                      "emailAddress": "",
                      "phone": "",
                      "addresses": [],
                      "contacts": [
                        {
                          "name": "",
                          "email": "",
                          "phone": [],
                          "status": "Active"
                        }
                      ],
                      "taxNumber": "",
                      "status": "Active",
                      "modifiedDate": "2022-09-30T10:29:15Z",
                      "sourceModifiedDate": "0001-01-01T00:00:00"
                    }
                  },
                  "Oracle NetSuite": {
                    "value": {
                      "id": "773",
                      "customerName": "119 Test Customer",
                      "contactName": "Mr Test  Customer",
                      "defaultCurrency": "GBP",
                      "addresses": [],
                      "contacts": [],
                      "status": "Active",
                      "modifiedDate": "2023-01-30T14:48:02Z",
                      "sourceModifiedDate": "2022-01-11T12:28:49"
                    }
                  },
                  "QuickBooks Desktop": {
                    "value": {
                      "id": "150000-933272658",
                      "customerName": "Abercrombie, Kristy",
                      "contactName": "Kristy Abercrombie",
                      "emailAddress": "kristy@samplename.com",
                      "defaultCurrency": "GBP",
                      "phone": "415-555-6579",
                      "addresses": [
                        {
                          "type": "Delivery",
                          "line1": "Kristy Abercrombie",
                          "line2": "5647 Cypress Hill Rd",
                          "city": "Bayshore",
                          "region": "CA",
                          "postalCode": "94326"
                        },
                        {
                          "type": "Billing",
                          "line1": "Kristy Abercrombie",
                          "line2": "5647 Cypress Hill Rd",
                          "city": "Bayshore",
                          "region": "CA",
                          "postalCode": "94326"
                        }
                      ],
                      "contacts": [
                        {
                          "name": "Abercrombie, Kristy",
                          "email": "kristy@samplename.com",
                          "phone": [
                            {
                              "number": "415-555-6579",
                              "type": "Primary"
                            }
                          ],
                          "status": "Active"
                        },
                        {
                          "name": "Kristy Abercrombie",
                          "phone": [],
                          "status": "Active"
                        },
                        {
                          "name": "Steve Darcangelo",
                          "phone": [],
                          "status": "Active"
                        }
                      ],
                      "status": "Active",
                      "modifiedDate": "2023-04-26T09:07:55Z",
                      "sourceModifiedDate": "2023-12-16T05:06:42",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "QuickBooks Online": {
                    "value": {
                      "id": "9",
                      "customerName": "Abe",
                      "contactName": "Abraham's Company",
                      "emailAddress": "ab@email.com",
                      "defaultCurrency": "GBP",
                      "addresses": [],
                      "contacts": [
                        {
                          "name": "Abe",
                          "email": "ab@email.com",
                          "phone": [
                            {
                              "number": "01111111111",
                              "type": "Mobile"
                            }
                          ],
                          "status": "Active"
                        }
                      ],
                      "registrationNumber": "XXXX9900001",
                      "taxNumber": "XXXX9900001",
                      "status": "Active",
                      "modifiedDate": "2023-01-18T11:02:35Z",
                      "sourceModifiedDate": "2022-12-08T15:42:59Z"
                    }
                  },
                  "QuickBooks Online Sandbox": {
                    "value": {
                      "id": "66",
                      "customerName": "Abercrombie International Group",
                      "contactName": "Kristy Abercrombie",
                      "defaultCurrency": "GBP",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "123 Main St",
                          "city": "New York, NY"
                        }
                      ],
                      "contacts": [
                        {
                          "name": "Abercrombie International Group (deleted)",
                          "phone": [],
                          "address": {
                            "type": "Billing",
                            "line1": "123 Main St",
                            "city": "New York, NY"
                          },
                          "status": "Archived"
                        }
                      ],
                      "status": "Archived",
                      "modifiedDate": "2023-04-26T09:35:56Z",
                      "sourceModifiedDate": "2016-09-12T18:53:19Z",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Sage 200cloud": {
                    "value": {
                      "id": "A1D001",
                      "customerName": "A1 Design Services",
                      "contactName": "Lee Dalkin",
                      "emailAddress": "newbusinessadvice@sage.com",
                      "defaultCurrency": "GBP",
                      "phone": "01742 876 234",
                      "addresses": [
                        {
                          "type": "Delivery",
                          "line1": "67a Station Road",
                          "line2": "",
                          "city": "Blackpool",
                          "region": "Lancashire",
                          "country": "",
                          "postalCode": "BP12 7HT"
                        },
                        {
                          "type": "Delivery",
                          "line1": "23a Union Street",
                          "line2": "",
                          "city": "Manchester",
                          "region": "",
                          "country": "",
                          "postalCode": "M2 6JK"
                        },
                        {
                          "type": "Billing",
                          "line1": "67a Station Road",
                          "line2": "",
                          "city": "Blackpool",
                          "region": "Lancashire",
                          "country": "Great Britain",
                          "postalCode": "BP12 7HT"
                        }
                      ],
                      "contacts": [
                        {
                          "name": "Lee Dalkin",
                          "email": "newbusinessadvice@sage.com",
                          "phone": [
                            {
                              "number": "01742 876 234",
                              "type": "Landline"
                            },
                            {
                              "number": "01742 876 235",
                              "type": "Landline"
                            },
                            {
                              "number": "01742 876 236",
                              "type": "Fax"
                            }
                          ],
                          "status": "Active"
                        },
                        {
                          "name": "Malcolm Leverret",
                          "email": "",
                          "phone": [],
                          "status": "Active"
                        },
                        {
                          "name": "Jim Thomas",
                          "email": "Jim@a1designservices.co.uk",
                          "phone": [
                            {
                              "number": "01742 876 234",
                              "type": "Landline"
                            },
                            {
                              "number": "01742 876 235",
                              "type": "Fax"
                            }
                          ],
                          "status": "Active"
                        },
                        {
                          "name": "Jullian Plawsworth",
                          "email": "Jullian@a1designservices.co.uk",
                          "phone": [
                            {
                              "number": "0151 349 3939",
                              "type": "Landline"
                            },
                            {
                              "number": "0151 349 3940",
                              "type": "Fax"
                            }
                          ],
                          "status": "Active"
                        }
                      ],
                      "registrationNumber": "",
                      "taxNumber": "GB238 3839 38",
                      "status": "Active",
                      "modifiedDate": "2022-10-14T09:35:53Z",
                      "sourceModifiedDate": "2022-04-27T15:17:36Z"
                    }
                  },
                  "Sage 50 (UK)": {
                    "value": {
                      "id": "A1D001",
                      "customerName": "A1 Design Services",
                      "contactName": "Ian Cairns",
                      "emailAddress": "newbusinessadvice@sage.com",
                      "defaultCurrency": "GBP",
                      "phone": "01742 876 234",
                      "addresses": [
                        {
                          "type": "Delivery",
                          "line1": "67a Station Road",
                          "line2": "",
                          "city": "Blackpool",
                          "region": "Lancashire",
                          "country": "GB",
                          "postalCode": "BP12 7HT"
                        },
                        {
                          "type": "Delivery",
                          "line1": "23a Union Street",
                          "line2": "",
                          "city": "Manchester",
                          "region": "",
                          "country": "GB",
                          "postalCode": "M2 6JK"
                        },
                        {
                          "type": "Unknown",
                          "line1": "67a Station Road",
                          "line2": "",
                          "city": "Blackpool",
                          "region": "Lancashire",
                          "country": "GB",
                          "postalCode": "BP12 7HT"
                        }
                      ],
                      "contacts": [],
                      "taxNumber": "GB238 3839 38",
                      "status": "Active",
                      "modifiedDate": "2023-03-30T14:42:41Z",
                      "sourceModifiedDate": "2022-11-25T09:43:54Z",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Sage Business Cloud Accounting": {
                    "value": {
                      "id": "260f6a3f94a243738f2d5e08496a41a8",
                      "customerName": "100 test name",
                      "contactName": "Main Contact",
                      "emailAddress": "email@codat.io",
                      "defaultCurrency": "GBP",
                      "phone": "contact phone number",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "Aruba Address line 1",
                          "line2": "Aruba Address line 2",
                          "city": "Aruba City",
                          "region": "Aruba Province",
                          "country": "Aruba (AW)",
                          "postalCode": "Aruba Post"
                        }
                      ],
                      "contacts": [
                        {
                          "phone": [
                            {
                              "number": "contact mobile number",
                              "type": "Mobile"
                            },
                            {
                              "number": "contact fax number",
                              "type": "Fax"
                            }
                          ],
                          "status": "Unknown"
                        }
                      ],
                      "status": "Active",
                      "modifiedDate": "2022-10-24T14:52:54Z",
                      "sourceModifiedDate": "2021-05-10T16:31:51Z"
                    }
                  },
                  "Sage Intacct": {
                    "value": {
                      "id": "188",
                      "customerName": "33Across",
                      "contactName": "Yuna Conn",
                      "defaultCurrency": "USD",
                      "phone": "520-393-4468",
                      "addresses": [
                        {
                          "type": "Unknown",
                          "line1": "155 Westend Point",
                          "line2": "",
                          "city": "Albuquerque",
                          "region": "NM",
                          "country": "United States",
                          "postalCode": "87140"
                        }
                      ],
                      "contacts": [
                        {
                          "name": "Conn, Yuna",
                          "phone": [
                            {
                              "number": "520-393-4468",
                              "type": "Primary"
                            }
                          ],
                          "address": {
                            "type": "Unknown",
                            "line1": "155 Westend Point",
                            "line2": "",
                            "city": "Albuquerque",
                            "region": "NM",
                            "country": "United States",
                            "postalCode": "87140"
                          },
                          "status": "Unknown"
                        }
                      ],
                      "taxNumber": "",
                      "status": "Active",
                      "modifiedDate": "2023-04-04T16:32:21Z",
                      "sourceModifiedDate": "2022-09-06T12:58:27",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Wave": {
                    "value": {
                      "id": "QnVzaW5lc3M6ZTI0OGQyZDctMWE5Ni00YTk4LWFkOTEtMDdlMGYyMmNhNmE2O0N1c3RvbWVyOjMyMzkzNTA4",
                      "customerName": "ABC Textiles",
                      "contactName": "",
                      "emailAddress": "c.taylor@codat.io",
                      "defaultCurrency": "USD",
                      "addresses": [],
                      "contacts": [],
                      "status": "Active",
                      "modifiedDate": "2022-11-16T18:15:30Z",
                      "sourceModifiedDate": "2019-10-17T07:59:04Z"
                    }
                  },
                  "Xero": {
                    "value": {
                      "id": "e4c9d0e2-c285-4e85-b579-6d28b180c730",
                      "customerName": "24 Locks",
                      "emailAddress": "",
                      "addresses": [],
                      "contacts": [],
                      "status": "Active",
                      "modifiedDate": "2023-03-15T20:35:10Z",
                      "sourceModifiedDate": "2023-02-17T18:03:42",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Zoho Books": {
                    "value": {
                      "id": "104957000000032105",
                      "customerName": "A B",
                      "contactName": "Contact (First Name) Contact (Last Name)",
                      "emailAddress": "contactperson@whateveryouwantidontcare12345.com",
                      "defaultCurrency": "GBP",
                      "phone": "Work Phone",
                      "addresses": [],
                      "contacts": [
                        {
                          "name": "Contact (First Name) Contact (Last Name)",
                          "email": "contactperson@whateveryouwantidontcare12345.com",
                          "phone": [
                            {
                              "number": "Work Phone",
                              "type": "Landline"
                            },
                            {
                              "number": "Mobile",
                              "type": "Mobile"
                            }
                          ],
                          "status": "Active"
                        }
                      ],
                      "status": "Active",
                      "modifiedDate": "2022-10-03T08:40:37Z",
                      "sourceModifiedDate": "2022-06-09T14:36:47"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "description": "The *Get customer* endpoint returns a single customer for a given customerId.\n\n[Customers](https://docs.codat.io/accounting-api#/schemas/Customer) are people or organizations that buy goods or services from the SMB.\n\nCheck out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=customers) for integrations that support getting a specific customer.\n\nBefore using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/codat-api#/operations/refresh-company-data).\n",
        "operationId": "get-customer"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/customers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/connectionId"
        }
      ],
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create customer",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomerResponse"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "operationId": "create-customer",
        "description": "The *Create customer* endpoint creates a new [customer](https://docs.codat.io/accounting-api#/schemas/Customer) for a given company's connection.\n\n[Customers](https://docs.codat.io/accounting-api#/schemas/Customer) are people or organizations that buy goods or services from the SMB.\n\n**Integration-specific behaviour**\n\nRequired data may vary by integration. To see what data to post, first call [Get create/update customer model](https://docs.codat.io/accounting-api#/operations/get-create-update-customers-model).\n\nCheck out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=customers) for integrations that support creating an account.\n"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/customers/{customerId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/connectionId"
        },
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Update customer",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCustomerResponse"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "description": "The *Update customer* endpoint updates an existing [customer](https://docs.codat.io/accounting-api#/schemas/Customer) for a given company's connection.\n\n[Customers](https://docs.codat.io/accounting-api#/schemas/Customer) are people or organizations that buy goods or services from the SMB.\n\n**Integration-specific behaviour**\n\nRequired data may vary by integration. To see what data to post, first call [Get create/update customer model](https://docs.codat.io/accounting-api#/operations/get-create-update-customers-model).\n\nCheck out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=customers) for integrations that support creating an account.\n",
        "operationId": "update-customer"
      }
    },
    "/companies/{companyId}/data/suppliers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "List suppliers",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/query"
          },
          {
            "$ref": "#/components/parameters/orderBy"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Suppliers"
                },
                "examples": {
                  "Clear Books": {
                    "value": {
                      "results": [
                        {
                          "id": "owQ2Gqgj9f",
                          "supplierName": "Abshire - Kshlerin",
                          "contactName": "Faye Hansen",
                          "emailAddress": "hello@Abshire-Kshlerin.info",
                          "phone": "01338 858162",
                          "addresses": [
                            {
                              "type": "Delivery",
                              "line1": "Suite 431",
                              "line2": "289 Giles Lake",
                              "city": "Cesarmouth",
                              "region": "Northern Ireland",
                              "country": "United Kingdom",
                              "postalCode": "BG40 9GP"
                            }
                          ],
                          "registrationNumber": "VYL1XZXR",
                          "taxNumber": "1396267523.0914588",
                          "status": "Active",
                          "modifiedDate": "2023-04-26T12:38:17Z",
                          "sourceModifiedDate": "1660-11-28T23:18:00",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "FyUkHbZxhn",
                          "supplierName": "Arjun Kuvalis",
                          "contactName": "Werner Langworth",
                          "emailAddress": "Arjun34@hotmail.com",
                          "phone": "0116 796 3163",
                          "addresses": [
                            {
                              "type": "Delivery",
                              "line1": "Suite 214",
                              "line2": "8439 Lueilwitz Passage",
                              "city": "Fernandohaven",
                              "region": "Northern Ireland",
                              "country": "United Kingdom",
                              "postalCode": "JG04 7PV"
                            },
                            {
                              "type": "Delivery",
                              "line1": "Suite 096",
                              "line2": "864 Halie Course",
                              "city": "Juliochester",
                              "region": "England",
                              "country": "United Kingdom",
                              "postalCode": "DZ8 4BF"
                            },
                            {
                              "type": "Delivery",
                              "line1": "Suite 001",
                              "line2": "416 Stokes Fords",
                              "city": "Naderborough",
                              "region": "Wales",
                              "country": "United Kingdom",
                              "postalCode": "XG25 0XX"
                            }
                          ],
                          "registrationNumber": "NI7JEJVM",
                          "taxNumber": "7505220209.583549",
                          "status": "Active",
                          "modifiedDate": "2023-04-26T12:38:17Z",
                          "sourceModifiedDate": "0177-04-27T11:56:00",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 100,
                      "_links": {
                        "current": {
                          "href": "/companies/354a121b-855f-4d25-90ad-0905b498c1c0/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/354a121b-855f-4d25-90ad-0905b498c1c0/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/354a121b-855f-4d25-90ad-0905b498c1c0/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Dynamics 365 Business Central": {
                    "value": {
                      "results": [
                        {
                          "id": "78623f13-931e-eb11-bbf8-0022481b3585",
                          "supplierName": "",
                          "contactName": "",
                          "emailAddress": "",
                          "phone": "",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "",
                              "line2": "",
                              "city": "",
                              "region": "",
                              "country": "GB",
                              "postalCode": ""
                            }
                          ],
                          "taxNumber": "",
                          "status": "Active",
                          "modifiedDate": "2023-03-27T14:21:12Z",
                          "sourceModifiedDate": "2020-11-04T11:44:22Z",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "be49ec62-6754-ed11-946f-0022481b67d1",
                          "supplierName": "",
                          "contactName": "",
                          "emailAddress": "",
                          "phone": "",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "",
                              "line2": "",
                              "city": "",
                              "region": "",
                              "country": "GB",
                              "postalCode": ""
                            }
                          ],
                          "taxNumber": "",
                          "status": "Active",
                          "modifiedDate": "2023-03-27T14:21:12Z",
                          "sourceModifiedDate": "2022-10-25T13:17:36Z",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 31,
                      "_links": {
                        "current": {
                          "href": "/companies/d6849caf-c146-41be-8335-b73346e3bd84/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/d6849caf-c146-41be-8335-b73346e3bd84/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/d6849caf-c146-41be-8335-b73346e3bd84/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Exact (Netherlands)": {
                    "value": {
                      "results": [
                        {
                          "id": "3150917c-1d92-4d77-9018-31b5c4758ca9",
                          "supplierName": "Abe",
                          "contactName": "Kelly's Contact Name",
                          "emailAddress": "sales@kellysupplies.com",
                          "phone": "07999 999999",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "Unit 51",
                              "city": "Bakersfield",
                              "region": "California",
                              "country": "US",
                              "postalCode": "933081"
                            }
                          ],
                          "registrationNumber": "8409314368",
                          "status": "Active",
                          "modifiedDate": "2022-10-26T13:32:05Z",
                          "sourceModifiedDate": "2022-07-15T12:01:15Z",
                          "defaultCurrency": "EUR"
                        },
                        {
                          "id": "00014c12-2616-481a-a2e8-31bdf2497775",
                          "supplierName": "Ann's test supplier 2",
                          "contactName": "Ann's contact name",
                          "emailAddress": "anna@anna888888.com",
                          "phone": "55555555",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "line1",
                              "line2": "line2",
                              "city": "city",
                              "region": "region",
                              "country": "RU",
                              "postalCode": "postal"
                            }
                          ],
                          "registrationNumber": "55566677788899944455",
                          "taxNumber": "RU4444444",
                          "status": "Active",
                          "modifiedDate": "2022-10-26T13:32:05Z",
                          "sourceModifiedDate": "2021-06-09T12:04:08Z",
                          "defaultCurrency": "USD"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 73,
                      "_links": {
                        "current": {
                          "href": "/companies/b83b1923-4db6-45a8-a779-b4e320c15979/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/b83b1923-4db6-45a8-a779-b4e320c15979/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/b83b1923-4db6-45a8-a779-b4e320c15979/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Exact (UK)": {
                    "value": {
                      "results": [
                        {
                          "id": "0185fea2-0298-445b-909a-0db685118a9e",
                          "supplierName": "a",
                          "addresses": [
                            {
                              "type": "Billing",
                              "country": "GB"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2022-10-26T13:33:13Z",
                          "sourceModifiedDate": "2017-08-02T10:58:54Z",
                          "defaultCurrency": "GBP"
                        },
                        {
                          "id": "64ae712f-4155-48bb-9fce-98232c51d979",
                          "supplierName": "aa",
                          "addresses": [
                            {
                              "type": "Billing",
                              "country": "GB"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2022-10-26T13:33:13Z",
                          "sourceModifiedDate": "2020-05-01T14:05:46Z",
                          "defaultCurrency": "GBP"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 118,
                      "_links": {
                        "current": {
                          "href": "/companies/d95030cd-22b2-482b-9c7b-2980dcc2b1ce/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/d95030cd-22b2-482b-9c7b-2980dcc2b1ce/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/d95030cd-22b2-482b-9c7b-2980dcc2b1ce/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "FreeAgent": {
                    "value": {
                      "results": [
                        {
                          "id": "11526230",
                          "supplierName": "-",
                          "contactName": "Test 1",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "1 Place House",
                              "line2": "",
                              "city": "London",
                              "country": "United Kingdom",
                              "postalCode": "WC1X 1AH"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-04-25T14:19:08Z",
                          "sourceModifiedDate": "2023-04-17T06:02:46",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "9677150",
                          "supplierName": "-",
                          "contactName": "Test 1",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "1 Place House",
                              "line2": "",
                              "city": "London",
                              "country": "United Kingdom",
                              "postalCode": "WC1X 1AH"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-04-25T14:19:08Z",
                          "sourceModifiedDate": "2023-04-24T06:19:23",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 159,
                      "_links": {
                        "current": {
                          "href": "/companies/071ad738-68f3-4561-afd0-69bab9df0803/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/071ad738-68f3-4561-afd0-69bab9df0803/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/071ad738-68f3-4561-afd0-69bab9df0803/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "FreshBooks": {
                    "value": {
                      "results": [
                        {
                          "id": "api vendor",
                          "supplierName": "api vendor",
                          "addresses": [],
                          "status": "Active",
                          "modifiedDate": "2023-03-24T16:07:25Z",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "DUndsRykrmy8kFsc+FvYk29YkJze4zSjGecoF4YcUEhVU7auJ5JkQA0VjXptZ7XQ+D4n6WoxFIkaGY2V/t4flA==",
                          "supplierName": "Chekko Test merchant 100 - Test Very long name: ORIG CO NAME:AMERICAN EXPRESS       ORIG ID:9493560001 DESC DATE:220307 CO ENTRY DESCR:ACH PMT   SEC:CCD    TRACE#:021000023255482 EED:220307   IND ID:A4670                        IND NAME:Rick Sanchez",
                          "addresses": [],
                          "status": "Active",
                          "modifiedDate": "2023-03-24T16:07:25Z",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 7,
                      "_links": {
                        "current": {
                          "href": "/companies/3691c49e-0db4-4172-b3ab-e4084c365013/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/3691c49e-0db4-4172-b3ab-e4084c365013/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/3691c49e-0db4-4172-b3ab-e4084c365013/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "KashFlow": {
                    "value": {
                      "results": [
                        {
                          "id": "6202387",
                          "supplierName": "Dell",
                          "contactName": "",
                          "emailAddress": "",
                          "phone": "",
                          "addresses": [],
                          "taxNumber": "",
                          "status": "Unknown",
                          "modifiedDate": "2022-09-30T10:29:15Z",
                          "sourceModifiedDate": "2017-05-09T00:00:00"
                        },
                        {
                          "id": "9338173",
                          "supplierName": "Home",
                          "contactName": "",
                          "emailAddress": "",
                          "phone": "",
                          "addresses": [],
                          "taxNumber": "",
                          "status": "Unknown",
                          "modifiedDate": "2022-09-30T10:29:15Z",
                          "sourceModifiedDate": "1990-01-01T00:00:00"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 7,
                      "_links": {
                        "current": {
                          "href": "/companies/3a707a99-89da-4b16-a5d6-595333a16352/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/3a707a99-89da-4b16-a5d6-595333a16352/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/3a707a99-89da-4b16-a5d6-595333a16352/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Oracle NetSuite": {
                    "value": {
                      "results": [
                        {
                          "id": "779",
                          "supplierName": "Test Vendor",
                          "contactName": "Test Vendor",
                          "emailAddress": "",
                          "phone": "",
                          "addresses": [],
                          "status": "Active",
                          "modifiedDate": "2023-01-30T14:47:02Z",
                          "sourceModifiedDate": "2022-02-04T14:24:43",
                          "defaultCurrency": "GBP"
                        },
                        {
                          "id": "726",
                          "supplierName": "Vendor -.A",
                          "contactName": "Vendor -.A",
                          "emailAddress": "",
                          "phone": "",
                          "addresses": [],
                          "status": "Active",
                          "modifiedDate": "2023-01-30T14:47:02Z",
                          "sourceModifiedDate": "2021-03-26T09:53:15",
                          "defaultCurrency": "GBP"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 6,
                      "_links": {
                        "current": {
                          "href": "/companies/d5074b08-6a34-4b06-a742-236edf5dc4f1/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/d5074b08-6a34-4b06-a742-236edf5dc4f1/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/d5074b08-6a34-4b06-a742-236edf5dc4f1/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "QuickBooks Desktop": {
                    "value": {
                      "results": [
                        {
                          "id": "A60000-1197760912",
                          "supplierName": "A Cheung Limited",
                          "contactName": "Angela Cheung",
                          "emailAddress": "AC@CheungLimited.com",
                          "phone": "510 555 5723",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "A Cheung Limited, Angela Cheung",
                              "line2": "3818 Bear Rd. West",
                              "city": "Berkeley",
                              "region": "CA",
                              "postalCode": "94688"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-04-26T09:09:03Z",
                          "sourceModifiedDate": "2023-12-16T05:06:44",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "A40000-1197774038",
                          "supplierName": "Bank of Anycity",
                          "contactName": "Lisa D. Holzhauser",
                          "emailAddress": "lisah@samplename.com",
                          "phone": "415-555-9135",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "Bank of Anycity, Lisa Holzhauser",
                              "line2": "1935 Main Street",
                              "city": "Middlefield",
                              "region": "CA",
                              "postalCode": "94482"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-04-26T09:09:03Z",
                          "sourceModifiedDate": "2023-12-16T05:06:44",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 54,
                      "_links": {
                        "current": {
                          "href": "/companies/fc72ba08-af13-4474-b28a-01dcfa6cfb51/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/fc72ba08-af13-4474-b28a-01dcfa6cfb51/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/fc72ba08-af13-4474-b28a-01dcfa6cfb51/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "QuickBooks Online": {
                    "value": {
                      "results": [
                        {
                          "id": "41",
                          "supplierName": "AI Support",
                          "contactName": "AI Support",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "test",
                              "region": "string",
                              "country": "Djibouti"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-01-18T11:02:36Z",
                          "sourceModifiedDate": "2022-12-07T10:48:18Z",
                          "defaultCurrency": "GBP"
                        },
                        {
                          "id": "42",
                          "supplierName": "AI Support 2",
                          "contactName": "AI Support 2",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "test",
                              "region": "string",
                              "country": "DJ"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-01-18T11:02:36Z",
                          "sourceModifiedDate": "2021-08-31T08:45:02Z",
                          "defaultCurrency": "GBP"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 23,
                      "_links": {
                        "current": {
                          "href": "/companies/10818b5e-6e6a-4ed4-a1c5-3e3efe626e87/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/10818b5e-6e6a-4ed4-a1c5-3e3efe626e87/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/10818b5e-6e6a-4ed4-a1c5-3e3efe626e87/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "QuickBooks Online Sandbox": {
                    "value": {
                      "results": [
                        {
                          "id": "129",
                          "supplierName": "Ally Johnson",
                          "contactName": "Miss Smith",
                          "phone": "0728 38474",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "100 London Road",
                              "line2": "Angel",
                              "city": "London",
                              "region": "Greater London",
                              "country": "England",
                              "postalCode": "EC1M"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2023-04-26T09:35:55Z",
                          "sourceModifiedDate": "2023-04-13T01:51:08Z",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "88",
                          "supplierName": "Andrew Haberbosch",
                          "addresses": [],
                          "status": "Active",
                          "modifiedDate": "2023-04-26T09:35:55Z",
                          "sourceModifiedDate": "2022-07-06T15:55:28Z",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 64,
                      "_links": {
                        "current": {
                          "href": "/companies/5a7f3597-36e1-4216-86fe-289ad36088a6/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/5a7f3597-36e1-4216-86fe-289ad36088a6/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/5a7f3597-36e1-4216-86fe-289ad36088a6/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Sage 200cloud": {
                    "value": {
                      "results": [
                        {
                          "id": "776",
                          "supplierName": "Aaren",
                          "contactName": "",
                          "emailAddress": "",
                          "phone": "",
                          "addresses": [
                            {
                              "type": "Unknown",
                              "line1": "",
                              "line2": "",
                              "city": "",
                              "region": "",
                              "country": "Great Britain",
                              "postalCode": ""
                            }
                          ],
                          "taxNumber": "",
                          "status": "Archived",
                          "modifiedDate": "2022-10-14T09:35:58Z",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": true
                          }
                        },
                        {
                          "id": "914",
                          "supplierName": "Aaren",
                          "contactName": "",
                          "emailAddress": "",
                          "phone": "",
                          "addresses": [
                            {
                              "type": "Unknown",
                              "line1": "",
                              "line2": "",
                              "city": "",
                              "region": "",
                              "country": "Great Britain",
                              "postalCode": ""
                            }
                          ],
                          "taxNumber": "",
                          "status": "Archived",
                          "modifiedDate": "2022-10-14T09:35:58Z",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": true
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 943,
                      "_links": {
                        "current": {
                          "href": "/companies/93c21e2d-049c-4d24-b41b-57e61c30b69e/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/93c21e2d-049c-4d24-b41b-57e61c30b69e/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/93c21e2d-049c-4d24-b41b-57e61c30b69e/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Sage 50 (UK)": {
                    "value": {
                      "results": [
                        {
                          "id": "CON001",
                          "supplierName": "Concept Stationery Supplies",
                          "contactName": "Mark Ramsay",
                          "emailAddress": "newbusinessadvice@sage.com",
                          "phone": "0191 643 4343",
                          "addresses": [
                            {
                              "type": "Delivery",
                              "line1": "66 New Street",
                              "line2": "Ridgeway",
                              "city": "Newcastle Upon Tyne",
                              "region": "",
                              "country": "GB",
                              "postalCode": "NE1 4GF"
                            },
                            {
                              "type": "Unknown",
                              "line1": "66 New Street",
                              "line2": "Ridgeway",
                              "city": "Newcastle upon Tyne",
                              "region": "",
                              "country": "GB",
                              "postalCode": "NE1 4GF"
                            }
                          ],
                          "taxNumber": "GB988 3453 23",
                          "status": "Active",
                          "modifiedDate": "2023-03-30T14:42:38Z",
                          "sourceModifiedDate": "2022-11-25T09:43:54Z",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "MCN001",
                          "supplierName": "McNally Computer Supplies",
                          "contactName": "Stuart Lynn",
                          "emailAddress": "newbusinessadvice@sage.com",
                          "phone": "0191 415 3434",
                          "addresses": [
                            {
                              "type": "Delivery",
                              "line1": "Station Lane Ind Est",
                              "line2": "Birtley",
                              "city": "Chester le Street",
                              "region": "County Durham",
                              "country": "GB",
                              "postalCode": "DH1 3RG"
                            },
                            {
                              "type": "Unknown",
                              "line1": "Station Lane Ind Est",
                              "line2": "Birtley",
                              "city": "Chester le Street",
                              "region": "County Durham",
                              "country": "GB",
                              "postalCode": "DH1 3RG"
                            }
                          ],
                          "taxNumber": "GB455 2385 34",
                          "status": "Active",
                          "modifiedDate": "2023-03-30T14:42:38Z",
                          "sourceModifiedDate": "2022-12-05T13:37:26Z",
                          "defaultCurrency": "GBP",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 15,
                      "_links": {
                        "current": {
                          "href": "/companies/cf5f2a47-2990-4221-bae6-0c19c86ac304/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/cf5f2a47-2990-4221-bae6-0c19c86ac304/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/cf5f2a47-2990-4221-bae6-0c19c86ac304/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Sage Business Cloud Accounting": {
                    "value": {
                      "results": [
                        {
                          "id": "65179671e9ef424caff8b9006cd111c8",
                          "supplierName": "5555 Abdul's Test Name",
                          "contactName": "Main Contact",
                          "addresses": [
                            {
                              "type": "Billing",
                              "country": "United Kingdom (GB)"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2022-10-24T14:52:54Z",
                          "sourceModifiedDate": "2020-02-25T17:23:33Z",
                          "defaultCurrency": "GBP"
                        },
                        {
                          "id": "cf7f44d693904944a6a7cf3de0887964",
                          "supplierName": "Abdi Supplier",
                          "contactName": "Abdi",
                          "emailAddress": "abdisupplier@company.com",
                          "addresses": [
                            {
                              "type": "Billing",
                              "line1": "1 Place House",
                              "city": "London",
                              "country": "United Kingdom (GB)",
                              "postalCode": "WC1X 1AH"
                            }
                          ],
                          "status": "Active",
                          "modifiedDate": "2022-10-24T14:52:54Z",
                          "sourceModifiedDate": "2020-02-13T10:38:19Z",
                          "defaultCurrency": "GBP"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 64,
                      "_links": {
                        "current": {
                          "href": "/companies/390083e2-351b-407c-a3be-55081c36c182/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/390083e2-351b-407c-a3be-55081c36c182/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/390083e2-351b-407c-a3be-55081c36c182/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Sage Intacct": {
                    "value": {
                      "results": [
                        {
                          "id": "3",
                          "supplierName": "ADP",
                          "contactName": "Jones, William",
                          "phone": "214-760-9491",
                          "addresses": [
                            {
                              "type": "Unknown",
                              "line1": "208 S Akard St",
                              "line2": "",
                              "city": "Dallas",
                              "region": "TX",
                              "country": "United States",
                              "postalCode": "75265"
                            }
                          ],
                          "registrationNumber": "",
                          "taxNumber": "85-3678274",
                          "status": "Active",
                          "modifiedDate": "2023-04-04T16:32:20Z",
                          "sourceModifiedDate": "2023-02-16T09:48:27",
                          "defaultCurrency": "USD",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "29",
                          "supplierName": "Advisor Printing",
                          "contactName": "Roach, Nathan",
                          "phone": "130-202-4796",
                          "addresses": [
                            {
                              "type": "Unknown",
                              "line1": "5 Carey Hill",
                              "line2": "",
                              "city": "Drayton Valley",
                              "region": "Alberta",
                              "country": "Canada",
                              "postalCode": "G8V"
                            }
                          ],
                          "registrationNumber": "",
                          "taxNumber": "",
                          "status": "Active",
                          "modifiedDate": "2023-04-04T16:32:20Z",
                          "sourceModifiedDate": "2022-06-15T11:38:29",
                          "defaultCurrency": "CAD",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 77,
                      "_links": {
                        "current": {
                          "href": "/companies/df02b289-cb16-4964-ac4d-9fd60b04538e/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/df02b289-cb16-4964-ac4d-9fd60b04538e/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/df02b289-cb16-4964-ac4d-9fd60b04538e/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Wave": {
                    "value": {
                      "results": [
                        {
                          "id": "QnVzaW5lc3M6ZTI0OGQyZDctMWE5Ni00YTk4LWFkOTEtMDdlMGYyMmNhNmE2O1ZlbmRvcjo2NjA0Nzk0",
                          "supplierName": "Computer Shop",
                          "contactName": "",
                          "emailAddress": "",
                          "addresses": [],
                          "status": "Active",
                          "modifiedDate": "2022-11-16T18:15:24Z",
                          "sourceModifiedDate": "2020-04-07T13:28:02Z",
                          "defaultCurrency": "GBP"
                        },
                        {
                          "id": "QnVzaW5lc3M6ZTI0OGQyZDctMWE5Ni00YTk4LWFkOTEtMDdlMGYyMmNhNmE2O1ZlbmRvcjo2NjA0NzQx",
                          "supplierName": "Flour Mill",
                          "contactName": "",
                          "emailAddress": "",
                          "addresses": [],
                          "status": "Active",
                          "modifiedDate": "2022-11-16T18:15:24Z",
                          "sourceModifiedDate": "2020-04-07T13:12:40Z",
                          "defaultCurrency": "GBP"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 9,
                      "_links": {
                        "current": {
                          "href": "/companies/0b22b59d-b4e5-4c35-b03f-88bbbcb41256/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/0b22b59d-b4e5-4c35-b03f-88bbbcb41256/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/0b22b59d-b4e5-4c35-b03f-88bbbcb41256/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Xero": {
                    "value": {
                      "results": [
                        {
                          "id": "e4c9d0e2-c285-4e85-b579-6d28b180c730",
                          "supplierName": "24 Locks",
                          "emailAddress": "",
                          "addresses": [],
                          "status": "Active",
                          "modifiedDate": "2023-03-15T20:36:09Z",
                          "sourceModifiedDate": "2023-02-17T18:03:42",
                          "metadata": {
                            "isDeleted": false
                          }
                        },
                        {
                          "id": "bab779bc-c5fb-42cb-a888-953e8309711c",
                          "supplierName": "7-Eleven",
                          "emailAddress": "",
                          "addresses": [],
                          "status": "Active",
                          "modifiedDate": "2023-03-15T20:36:09Z",
                          "sourceModifiedDate": "2023-02-17T18:03:42",
                          "metadata": {
                            "isDeleted": false
                          }
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 48,
                      "_links": {
                        "current": {
                          "href": "/companies/5ced9667-a310-443a-a711-958d36377141/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/5ced9667-a310-443a-a711-958d36377141/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/5ced9667-a310-443a-a711-958d36377141/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  },
                  "Zoho Books": {
                    "value": {
                      "results": [
                        {
                          "id": "104957000001494001",
                          "supplierName": "Acme Corporation",
                          "emailAddress": "",
                          "addresses": [],
                          "status": "Active",
                          "modifiedDate": "2022-10-03T08:40:37Z",
                          "sourceModifiedDate": "2022-09-16T13:09:56",
                          "defaultCurrency": "GBP"
                        },
                        {
                          "id": "104957000000648001",
                          "supplierName": "Cool company",
                          "contactName": "Dre",
                          "emailAddress": "",
                          "addresses": [],
                          "status": "Active",
                          "modifiedDate": "2022-10-03T08:40:37Z",
                          "sourceModifiedDate": "2022-06-10T09:07:16",
                          "defaultCurrency": "CAD"
                        }
                      ],
                      "pageNumber": 1,
                      "pageSize": 2,
                      "totalResults": 6,
                      "_links": {
                        "current": {
                          "href": "/companies/d0b68840-db50-4bc3-b88c-96e225333fea/data/suppliers?page=1&pageSize=2"
                        },
                        "self": {
                          "href": "/companies/d0b68840-db50-4bc3-b88c-96e225333fea/data/suppliers"
                        },
                        "next": {
                          "href": "/companies/d0b68840-db50-4bc3-b88c-96e225333fea/data/suppliers?page=2&pageSize=2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Malformed-Query"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        },
        "description": "The *List suppliers* endpoint returns a list of [suppliers](https://docs.codat.io/accounting-api#/schemas/Supplier) for a given company's connection.\n\n[Suppliers](https://docs.codat.io/accounting-api#/schemas/Supplier) are people or organizations that provide something, such as a product or service.\n\nBefore using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/codat-api#/operations/refresh-company-data).\n    ",
        "operationId": "list-suppliers"
      }
    },
    "/companies/{companyId}/data/suppliers/{supplierId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/supplierId"
        }
      ],
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Get supplier",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                },
                "examples": {
                  "Clear Books": {
                    "value": {
                      "id": "owQ2Gqgj9f",
                      "supplierName": "Abshire - Kshlerin",
                      "contactName": "Faye Hansen",
                      "emailAddress": "hello@Abshire-Kshlerin.info",
                      "phone": "01338 858162",
                      "addresses": [
                        {
                          "type": "Delivery",
                          "line1": "Suite 431",
                          "line2": "289 Giles Lake",
                          "city": "Cesarmouth",
                          "region": "Northern Ireland",
                          "country": "United Kingdom",
                          "postalCode": "BG40 9GP"
                        }
                      ],
                      "registrationNumber": "VYL1XZXR",
                      "taxNumber": "1396267523.0914588",
                      "status": "Active",
                      "modifiedDate": "2023-04-26T12:38:17Z",
                      "sourceModifiedDate": "1660-11-28T23:18:00",
                      "defaultCurrency": "GBP",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Dynamics 365 Business Central": {
                    "value": {
                      "id": "78623f13-931e-eb11-bbf8-0022481b3585",
                      "supplierName": "",
                      "contactName": "",
                      "emailAddress": "",
                      "phone": "",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "",
                          "line2": "",
                          "city": "",
                          "region": "",
                          "country": "GB",
                          "postalCode": ""
                        }
                      ],
                      "taxNumber": "",
                      "status": "Active",
                      "modifiedDate": "2023-03-27T14:21:12Z",
                      "sourceModifiedDate": "2020-11-04T11:44:22Z",
                      "defaultCurrency": "GBP",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Exact (Netherlands)": {
                    "value": {
                      "id": "3150917c-1d92-4d77-9018-31b5c4758ca9",
                      "supplierName": "Abe",
                      "contactName": "Kelly's Contact Name",
                      "emailAddress": "sales@kellysupplies.com",
                      "phone": "07999 999999",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "Unit 51",
                          "city": "Bakersfield",
                          "region": "California",
                          "country": "US",
                          "postalCode": "933081"
                        }
                      ],
                      "registrationNumber": "8409314368",
                      "status": "Active",
                      "modifiedDate": "2022-10-26T13:32:05Z",
                      "sourceModifiedDate": "2022-07-15T12:01:15Z",
                      "defaultCurrency": "EUR"
                    }
                  },
                  "Exact (UK)": {
                    "value": {
                      "id": "0185fea2-0298-445b-909a-0db685118a9e",
                      "supplierName": "a",
                      "addresses": [
                        {
                          "type": "Billing",
                          "country": "GB"
                        }
                      ],
                      "status": "Active",
                      "modifiedDate": "2022-10-26T13:33:13Z",
                      "sourceModifiedDate": "2017-08-02T10:58:54Z",
                      "defaultCurrency": "GBP"
                    }
                  },
                  "FreeAgent": {
                    "value": {
                      "id": "11526230",
                      "supplierName": "-",
                      "contactName": "Test 1",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "1 Place House",
                          "line2": "",
                          "city": "London",
                          "country": "United Kingdom",
                          "postalCode": "WC1X 1AH"
                        }
                      ],
                      "status": "Active",
                      "modifiedDate": "2023-04-25T14:19:08Z",
                      "sourceModifiedDate": "2023-04-17T06:02:46",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "FreshBooks": {
                    "value": {
                      "id": "api vendor",
                      "supplierName": "api vendor",
                      "addresses": [],
                      "status": "Active",
                      "modifiedDate": "2023-03-24T16:07:25Z",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "KashFlow": {
                    "value": {
                      "id": "6202387",
                      "supplierName": "Dell",
                      "contactName": "",
                      "emailAddress": "",
                      "phone": "",
                      "addresses": [],
                      "taxNumber": "",
                      "status": "Unknown",
                      "modifiedDate": "2022-09-30T10:29:15Z",
                      "sourceModifiedDate": "2017-05-09T00:00:00"
                    }
                  },
                  "Oracle NetSuite": {
                    "value": {
                      "id": "779",
                      "supplierName": "Test Vendor",
                      "contactName": "Test Vendor",
                      "emailAddress": "",
                      "phone": "",
                      "addresses": [],
                      "status": "Active",
                      "modifiedDate": "2023-01-30T14:47:02Z",
                      "sourceModifiedDate": "2022-02-04T14:24:43",
                      "defaultCurrency": "GBP"
                    }
                  },
                  "QuickBooks Desktop": {
                    "value": {
                      "id": "A60000-1197760912",
                      "supplierName": "A Cheung Limited",
                      "contactName": "Angela Cheung",
                      "emailAddress": "AC@CheungLimited.com",
                      "phone": "510 555 5723",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "A Cheung Limited, Angela Cheung",
                          "line2": "3818 Bear Rd. West",
                          "city": "Berkeley",
                          "region": "CA",
                          "postalCode": "94688"
                        }
                      ],
                      "status": "Active",
                      "modifiedDate": "2023-04-26T09:09:03Z",
                      "sourceModifiedDate": "2023-12-16T05:06:44",
                      "defaultCurrency": "GBP",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "QuickBooks Online": {
                    "value": {
                      "id": "41",
                      "supplierName": "AI Support",
                      "contactName": "AI Support",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "test",
                          "region": "string",
                          "country": "Djibouti"
                        }
                      ],
                      "status": "Active",
                      "modifiedDate": "2023-01-18T11:02:36Z",
                      "sourceModifiedDate": "2022-12-07T10:48:18Z",
                      "defaultCurrency": "GBP"
                    }
                  },
                  "QuickBooks Online Sandbox": {
                    "value": {
                      "id": "129",
                      "supplierName": "Ally Johnson",
                      "contactName": "Miss Smith",
                      "phone": "0728 38474",
                      "addresses": [
                        {
                          "type": "Billing",
                          "line1": "100 London Road",
                          "line2": "Angel",
                          "city": "London",
                          "region": "Greater London",
                          "country": "England",
                          "postalCode": "EC1M"
                        }
                      ],
                      "status": "Active",
                      "modifiedDate": "2023-04-26T09:35:55Z",
                      "sourceModifiedDate": "2023-04-13T01:51:08Z",
                      "defaultCurrency": "GBP",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Sage 200cloud": {
                    "value": {
                      "id": "776",
                      "supplierName": "Aaren",
                      "contactName": "",
                      "emailAddress": "",
                      "phone": "",
                      "addresses": [
                        {
                          "type": "Unknown",
                          "line1": "",
                          "line2": "",
                          "city": "",
                          "region": "",
                          "country": "Great Britain",
                          "postalCode": ""
                        }
                      ],
                      "taxNumber": "",
                      "status": "Archived",
                      "modifiedDate": "2022-10-14T09:35:58Z",
                      "defaultCurrency": "GBP",
                      "metadata": {
                        "isDeleted": true
                      }
                    }
                  },
                  "Sage 50 (UK)": {
                    "value": {
                      "id": "CON001",
                      "supplierName": "Concept Stationery Supplies",
                      "contactName": "Mark Ramsay",
                      "emailAddress": "newbusinessadvice@sage.com",
                      "phone": "0191 643 4343",
                      "addresses": [
                        {
                          "type": "Delivery",
                          "line1": "66 New Street",
                          "line2": "Ridgeway",
                          "city": "Newcastle Upon Tyne",
                          "region": "",
                          "country": "GB",
                          "postalCode": "NE1 4GF"
                        },
                        {
                          "type": "Unknown",
                          "line1": "66 New Street",
                          "line2": "Ridgeway",
                          "city": "Newcastle upon Tyne",
                          "region": "",
                          "country": "GB",
                          "postalCode": "NE1 4GF"
                        }
                      ],
                      "taxNumber": "GB988 3453 23",
                      "status": "Active",
                      "modifiedDate": "2023-03-30T14:42:38Z",
                      "sourceModifiedDate": "2022-11-25T09:43:54Z",
                      "defaultCurrency": "GBP",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Sage Business Cloud Accounting": {
                    "value": {
                      "id": "65179671e9ef424caff8b9006cd111c8",
                      "supplierName": "5555 Abdul's Test Name",
                      "contactName": "Main Contact",
                      "addresses": [
                        {
                          "type": "Billing",
                          "country": "United Kingdom (GB)"
                        }
                      ],
                      "status": "Active",
                      "modifiedDate": "2022-10-24T14:52:54Z",
                      "sourceModifiedDate": "2020-02-25T17:23:33Z",
                      "defaultCurrency": "GBP"
                    }
                  },
                  "Sage Intacct": {
                    "value": {
                      "id": "3",
                      "supplierName": "ADP",
                      "contactName": "Jones, William",
                      "phone": "214-760-9491",
                      "addresses": [
                        {
                          "type": "Unknown",
                          "line1": "208 S Akard St",
                          "line2": "",
                          "city": "Dallas",
                          "region": "TX",
                          "country": "United States",
                          "postalCode": "75265"
                        }
                      ],
                      "registrationNumber": "",
                      "taxNumber": "85-3678274",
                      "status": "Active",
                      "modifiedDate": "2023-04-04T16:32:20Z",
                      "sourceModifiedDate": "2023-02-16T09:48:27",
                      "defaultCurrency": "USD",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Wave": {
                    "value": {
                      "id": "QnVzaW5lc3M6ZTI0OGQyZDctMWE5Ni00YTk4LWFkOTEtMDdlMGYyMmNhNmE2O1ZlbmRvcjo2NjA0Nzk0",
                      "supplierName": "Computer Shop",
                      "contactName": "",
                      "emailAddress": "",
                      "addresses": [],
                      "status": "Active",
                      "modifiedDate": "2022-11-16T18:15:24Z",
                      "sourceModifiedDate": "2020-04-07T13:28:02Z",
                      "defaultCurrency": "GBP"
                    }
                  },
                  "Xero": {
                    "value": {
                      "id": "e4c9d0e2-c285-4e85-b579-6d28b180c730",
                      "supplierName": "24 Locks",
                      "emailAddress": "",
                      "addresses": [],
                      "status": "Active",
                      "modifiedDate": "2023-03-15T20:36:09Z",
                      "sourceModifiedDate": "2023-02-17T18:03:42",
                      "metadata": {
                        "isDeleted": false
                      }
                    }
                  },
                  "Zoho Books": {
                    "value": {
                      "id": "104957000001494001",
                      "supplierName": "Acme Corporation",
                      "emailAddress": "",
                      "addresses": [],
                      "status": "Active",
                      "modifiedDate": "2022-10-03T08:40:37Z",
                      "sourceModifiedDate": "2022-09-16T13:09:56",
                      "defaultCurrency": "GBP"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "description": "The *Get supplier* endpoint returns a single supplier for a given supplierId.\n\n[Suppliers](https://docs.codat.io/accounting-api#/schemas/Supplier) are people or organizations that provide something, such as a product or service.\n\nCheck out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers) for integrations that support getting a specific supplier.\n\nBefore using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/codat-api#/operations/refresh-company-data).\n",
        "operationId": "get-supplier"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/suppliers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/connectionId"
        }
      ],
      "post": {
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              },
              "examples": {
                "Sage Intacct": {
                  "value": {
                    "id": "73593",
                    "supplierName": "test 20230420 1004",
                    "contactName": "Joe Bloggs",
                    "status": "Active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSupplierResponse"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "summary": "Create supplier",
        "description": "The *Create supplier* endpoint creates a new [supplier](https://docs.codat.io/accounting-api#/schemas/Supplier) for a given company's connection.\r\n\r\n[Suppliers](https://docs.codat.io/accounting-api#/schemas/Supplier) are people or organizations that provide something, such as a product or service.\r\n\r\n**Integration-specific behaviour**\r\n\r\nRequired data may vary by integration. To see what data to post, first call [Get create/update supplier model](https://docs.codat.io/accounting-api#/operations/get-create-update-suppliers-model).\r\n\r\nCheck out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers) for integrations that support creating an account.\r\n",
        "operationId": "create-supplier"
      }
    },
    "/companies/{companyId}/connections/{connectionId}/push/suppliers/{supplierId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/companyId"
        },
        {
          "$ref": "#/components/parameters/connectionId"
        },
        {
          "$ref": "#/components/parameters/supplierId"
        }
      ],
      "put": {
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/timeoutInMinutes"
          },
          {
            "$ref": "#/components/parameters/forceUpdate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSupplierResponse"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/Not-Found"
          },
          "429": {
            "$ref": "#/components/responses/Too-Many-Requests"
          }
        },
        "summary": "Update supplier",
        "description": "The *Update supplier* endpoint updates an existing [supplier](https://docs.codat.io/accounting-api#/schemas/Supplier) for a given company's connection.\r\n\r\n[Suppliers](https://docs.codat.io/accounting-api#/schemas/Supplier) are people or organizations that provide something, such as a product or service.\r\n\r\n**Integration-specific behaviour**\r\n\r\nRequired data may vary by integration. To see what data to post, first call [Get create/update supplier model](https://docs.codat.io/accounting-api#/operations/get-create-update-suppliers-model).\r\n\r\nCheck out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers) for integrations that support creating an account.\r\n",
        "operationId": "update-supplier"
      }
    }
  },
  "webhooks": {
    "Sync Started": {
      "post": {
        "requestBody": {
          "description": "Triggered anytime a sync starts.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncStartedWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "Sync Failed": {
      "post": {
        "requestBody": {
          "description": "Triggered anytime a sync fails.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncFailedWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "Sync Complete": {
      "post": {
        "requestBody": {
          "description": "Triggered anytime a sync completes.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncCompleteWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DataConnection": {
        "$ref": "#/components/schemas/Connection"
      },
      "AccountMappingInfo": {
        "title": "Account mapping info",
        "type": "object",
        "additionalProperties": false,
        "x-examples": {
          "Example AccountInfo": {
            "id": "313a4dbe-b3a4-42f0-a5f5-43e382e62db9",
            "name": "Travel",
            "currency": "GBP",
            "accountType": "Expense",
            "validTransactionTypes": [
              "Payment",
              "Refund"
            ]
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of account.",
            "example": "6",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the account as it appears in the companies accounting software.",
            "example": "Purchases",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "Currency of the account.",
            "example": "GBP",
            "nullable": true
          },
          "accountType": {
            "type": "string",
            "description": "Type of the account.",
            "example": "Expense",
            "enum": [
              "Asset",
              "Liability",
              "Income",
              "Expense",
              "Equity"
            ],
            "nullable": true
          },
          "validTransactionTypes": {
            "type": "array",
            "description": "Supported transaction types for the account.",
            "minItems": 0,
            "maxItems": 8,
            "nullable": true,
            "items": {
              "type": "string",
              "enum": [
                "Payment",
                "Refund",
                "Reward",
                "Chargeback",
                "TransferIn",
                "TransferOut",
                "AdjustmentIn",
                "AdjustmentOut"
              ],
              "example": "Payment",
              "minLength": 1,
              "maxLength": 8
            }
          }
        }
      },
      "CompanySyncStatus": {
        "title": "Company sync status",
        "type": "object",
        "additionalProperties": false,
        "x-examples": {
          "Success Data Pushed": {
            "companyId": "20803807-4e9a-4cb7-b67b-9f889a3916e1",
            "syncId": "aa4c9dfd-e945-4424-9628-9e724f14c267",
            "syncStatusCode": 2000,
            "syncStatus": "Complete",
            "errorMessage": "",
            "syncExceptionMessage": "",
            "syncUtc": "2023-01-24T14:15:22Z",
            "dataPushed": true
          },
          "Success No Data Pushed": {
            "companyId": "20803807-4e9a-4cb7-b67b-9f889a3916e1",
            "syncId": "aa4c9dfd-e945-4424-9628-9e724f14c267",
            "syncStatusCode": 2040,
            "syncStatus": "Complete",
            "errorMessage": "",
            "syncExceptionMessage": "",
            "syncUtc": "2023-01-24T14:15:22Z",
            "dataPushed": false
          }
        },
        "properties": {
          "companyId": {
            "type": "string",
            "description": "Unique identifier for your SMB in Codat.",
            "example": "d4d73051-ed31-42b6-99f6-d288cd940992",
            "nullable": true
          },
          "syncId": {
            "type": "string",
            "description": "Unique identifier of the sync.",
            "example": "a6a22aff-a43a-411d-a910-2dae73217cce",
            "nullable": true
          },
          "syncStatusCode": {
            "type": "integer",
            "format": "int32",
            "description": "Status code of the sync.",
            "example": 2000
          },
          "syncStatus": {
            "type": "string",
            "description": "Text status of the sync.",
            "example": "Completed",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message of the sync.",
            "nullable": true
          },
          "syncExceptionMessage": {
            "type": "string",
            "description": "Exception message of the sync.",
            "nullable": true
          },
          "syncUtc": {
            "$ref": "#/components/schemas/Company/properties/created",
            "description": "Datetime of the sync.",
            "nullable": true
          },
          "dataPushed": {
            "type": "boolean",
            "description": "Boolean of whether the sync resulted in data being pushed."
          }
        }
      },
      "MappingOptions": {
        "title": "Mapping options",
        "type": "object",
        "additionalProperties": false,
        "x-examples": {},
        "properties": {
          "expenseProvider": {
            "type": "string",
            "description": "Name of the expense integration.",
            "example": "Partner Expense",
            "nullable": true
          },
          "accounts": {
            "type": "array",
            "description": "Array of available accounts for mapping.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AccountMappingInfo"
            }
          },
          "trackingCategories": {
            "type": "array",
            "description": "Array of available tracking categories for mapping.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TrackingCategoryMappingInfo"
            }
          },
          "taxRates": {
            "type": "array",
            "description": "Array of available tax rates for mapping.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TaxRateMappingInfo"
            }
          }
        }
      },
      "TaxRateMappingInfo": {
        "title": "Tax rate mapping info",
        "type": "object",
        "additionalProperties": false,
        "x-examples": {
          "UK Tax Rate": {
            "id": "59_Bills",
            "name": "UK Standard Rate (Bills) Bills",
            "code": "UK Standard Rate (Bills)",
            "effectiveTaxRate": 20,
            "totalTaxRate": 20,
            "validTransactionTypes": [
              "Payment",
              "Reward"
            ]
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of tax rate.",
            "example": "59_Bills",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the tax rate in the accounting platform.",
            "example": "UK Standard Rate (Bills) Bills",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Code for the tax rate from the accounting platform.",
            "example": "UK Standard Rate (Bills)",
            "nullable": true
          },
          "effectiveTaxRate": {
            "type": "number",
            "description": "Effective tax rate.",
            "example": 20
          },
          "totalTaxRate": {
            "type": "number",
            "description": "Total (not compounded) sum of the components of a tax rate.",
            "example": 20
          },
          "validTransactionTypes": {
            "type": "array",
            "description": "Supported transaction types for the account.",
            "minItems": 0,
            "maxItems": 8,
            "nullable": true,
            "items": {
              "type": "string",
              "enum": [
                "Payment",
                "Refund",
                "Reward",
                "Chargeback",
                "TransferIn",
                "TransferOut",
                "AdjustmentIn",
                "AdjustmentOut"
              ],
              "example": "Payment"
            }
          }
        }
      },
      "TrackingCategoryMappingInfo": {
        "title": "Tracking category mapping info",
        "type": "object",
        "additionalProperties": false,
        "x-examples": {
          "Tracking Category with parentId": {
            "id": "DEPARTMENT_1",
            "modifiedDate": "2023-02-09T11:42:41Z",
            "name": "TestLocation",
            "hasChildren": false,
            "parentId": "DEPARTMENTS"
          },
          "Parent Tracking Category": {
            "id": "DEPARTMENTS",
            "modifiedDate": "2023-02-09T11:42:41Z",
            "name": "Departments",
            "hasChildren": true
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the tracking category.",
            "example": "DEPARTMENT_2",
            "nullable": true
          },
          "modifiedDate": {
            "$ref": "#/components/schemas/Company/properties/created",
            "description": "Datetime when the tracking category was last modified.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the tracking category as it appears in the accounting software.",
            "example": "New York",
            "nullable": true
          },
          "hasChildren": {
            "type": "boolean",
            "description": "Boolean of whether the tracking category has child categories."
          },
          "parentId": {
            "type": "string",
            "description": "ID of the parent tracking category",
            "example": "DEPARTMENTS",
            "nullable": true
          }
        }
      },
      "TransactionMetadata": {
        "title": "Transaction metadata",
        "type": "object",
        "additionalProperties": false,
        "x-examples": {
          "Successful Transaction": {
            "transactionId": "8fdba4ed-e327-4925-be1a-b7a2b04627f7",
            "status": "Completed",
            "integrationType": "expense"
          },
          "Unsuccessful Transaction": {
            "transactionId": "3d694cd1-4cd9-4136-91db-32408195c6fc",
            "status": "ValidationError",
            "message": "The line item total -208.10((-195.01 + -1.09) + (-10.01 + -1.99)) must equal the transaction total -1.1",
            "integrationType": "string"
          }
        },
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Your unique idenfier of the transaction.",
            "example": "aa02271d-ed5f-47f5-be76-778d5905225a",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/TransactionStatus"
          },
          "message": {
            "type": "string",
            "description": "Metadata such as validation errors or the resulting record created in the accounting software.",
            "nullable": true
          },
          "integrationType": {
            "$ref": "#/components/schemas/IntegrationType"
          }
        }
      },
      "TransactionStatus": {
        "x-internal": true,
        "type": "string",
        "description": "Status of the transaction.",
        "enum": [
          "Unknown",
          "Pending",
          "ValidationError",
          "Completed",
          "PushError"
        ],
        "example": "Completed",
        "nullable": true
      },
      "IntegrationType": {
        "x-internal": true,
        "type": "string",
        "description": "Type of transaction that has been processed e.g. Expense or Bank Feed.",
        "enum": [
          "expenses",
          "bankfeeds"
        ],
        "default": "expenses",
        "example": "expenses",
        "nullable": true
      },
      "TransactionMetadataList": {
        "x-internal": true,
        "additionalProperties": false,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TransactionMetadata"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/PagingInfo"
          }
        ],
        "x-examples": {
          "Example 1": {
            "results": [
              {
                "transactionId": "aa02271d-ed5f-47f5-be76-778d5905225a",
                "status": "Completed",
                "integrationType": "expenses"
              },
              {
                "transactionId": "730177a2-8505-410a-9ebc-c2dd52e4bea9",
                "status": "Completed",
                "integrationType": "expenses"
              }
            ],
            "pageNumber": 1,
            "pageSize": 100,
            "totalResults": 2,
            "links": {
              "self": {
                "href": "string"
              },
              "current": {
                "href": "string"
              }
            }
          }
        }
      },
      "CreateExpenseRequest": {
        "x-internal": true,
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "minItems": 1,
            "maxItems": 50,
            "items": {
              "$ref": "#/components/schemas/ExpenseTransaction"
            }
          }
        }
      },
      "CreateExpenseResponse": {
        "x-internal": true,
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string",
            "example": "cd937d46-8e41-43a9-9477-a79158ffd98a",
            "format": "uuid",
            "description": "Unique id of dataset created"
          }
        }
      },
      "ExpenseTransaction": {
        "title": "Expense transaction",
        "type": "object",
        "x-examples": {
          "Payment": {
            "id": "a44135b0-6882-489a-83fe-a0c57a4afb19",
            "type": "Payment",
            "issueDate": "2021-05-21T00:00:00+00:00",
            "currency": "GBP",
            "currencyRate": 1.18,
            "merchantName": "Amazon UK",
            "lines": [
              {
                "netAmount": 110.42,
                "taxAmount": 14.43,
                "taxRateRef": {
                  "id": "7e2ccb60-de1a-4c2b-9bd9-2f98a1c6be3f"
                },
                "accountRef": {
                  "id": "a505cb47-0f7d-4e8b-90aa-9f9c2308b7bc"
                },
                "trackingRefs": [
                  {
                    "id": "31a7e93c-4bb2-474c-b26d-10b2b75f7a25"
                  }
                ]
              }
            ],
            "notes": "amazon purchase"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "4d7c6929-7770-412b-91bb-44d3bc71d111",
            "format": "uuid",
            "description": "Your unique identifier for the transaction."
          },
          "type": {
            "type": "string",
            "example": "Payment",
            "description": "The type of transaction.",
            "enum": [
              "Payment",
              "Refund",
              "Reward",
              "Chargeback",
              "TransferIn",
              "TransferOut",
              "AdjustmentIn",
              "AdjustmentOut"
            ]
          },
          "issueDate": {
            "$ref": "#/components/schemas/Company/properties/created",
            "description": "Date of the transaction was recorded."
          },
          "currency": {
            "type": "string",
            "example": "GBP",
            "description": "Currency the transaction was recorded in."
          },
          "currencyRate": {
            "title": "Currency rate",
            "type": "number",
            "nullable": true,
            "description": "Rate to convert the total amount of the payment into the base currency for the company at the time of the payment.\n\nCurrency rates in Codat are implemented as the multiple of foreign currency units to each base currency unit.  \n\nIt is not possible to perform the currency conversion with two or more non-base currencies participating in the transaction. For example, if a company's base currency is USD, and it has a bill issued in EUR, then the bill payment must happen in USD or EUR.\n\nWhere the currency rate is provided by the underlying accounting platform, it will be available from Codat with the same precision (up to a maximum of 9 decimal places). \n\nFor accounting platforms which do not provide an explicit currency rate, it is calculated as `baseCurrency / foreignCurrency` and will be returned to 9 decimal places.\n\n## Examples with base currency of GBP\n\n| Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (GBP) |\n| :--------------- | :------------- | :------------ | :------------------------- |\n| **USD**          | $20            | 0.781         | £15.62                     |\n| **EUR**          | €20            | 0.885         | £17.70                     |\n| **RUB**          | ₽20            | 0.011         | £0.22                      |\n\n## Examples with base currency of USD\n\n| Foreign Currency | Foreign Amount | Currency Rate | Base Currency Amount (USD) |\n| :--------------- | :------------- | :------------ | :------------------------- |\n| **GBP**          | £20            | 1.277         | $25.54                     |\n| **EUR**          | €20            | 1.134         | $22.68                     |\n| **RUB**          | ₽20            | 0.015         | $0.30                      |"
          },
          "contactRef": {
            "description": "Supplier or customer for the purchase to be associated to.",
            "$ref": "#/components/schemas/ContactRef"
          },
          "merchantName": {
            "type": "string",
            "example": "Amazon UK",
            "description": "Name of the merchant where the purchase took place"
          },
          "lines": {
            "type": "array",
            "description": "Array of transaction lines.",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "$ref": "#/components/schemas/ExpenseTransactionLine"
            }
          },
          "notes": {
            "type": "string",
            "description": "Any private, company notes about the transaction.",
            "example": "APPLE.COM/BILL - 09001077498 - Card Ending: 4590"
          }
        },
        "required": [
          "id",
          "type",
          "issueDate",
          "currency"
        ]
      },
      "RecordRef": {
        "x-internal": true,
        "type": "object",
        "title": "Record reference",
        "properties": {
          "id": {
            "type": "string",
            "example": "40e3e57c-2322-4898-966c-ca41adfd23fd",
            "description": "identifier of linked reference from mapping options."
          }
        }
      },
      "ContactRef": {
        "type": "object",
        "title": "Supplier/Customer reference",
        "properties": {
          "id": {
            "type": "string",
            "example": "40e3e57c-2322-4898-966c-ca41adfd23fd",
            "description": "Identifier of supplier or customer."
          },
          "contactType": {
            "description": "The type of contact.",
            "type": "string",
            "example": "Supplier",
            "enum": [
              "Supplier"
            ]
          }
        }
      },
      "ExpenseTransactionLine": {
        "x-internal": true,
        "title": "Expense transaction line",
        "type": "object",
        "x-examples": {
          "ExpenseTransactionLine": {
            "netAmount": 110.42,
            "taxAmount": 14.43,
            "taxRateRef": {
              "id": "08d37c46-8d5d-441b-8bad-76286c43047e"
            },
            "accountRef": {
              "id": "16989b16-96d4-401a-9054-f5c620c655a6"
            },
            "trackingRefs": [
              {
                "id": "e9a1b63d-9ff0-40e7-8038-016354b987e6"
              }
            ]
          }
        },
        "properties": {
          "netAmount": {
            "type": "number",
            "example": 110.42,
            "description": "Amount of the line, exclusive of tax."
          },
          "taxAmount": {
            "type": "number",
            "example": 14.43,
            "description": "Amount of tax for the line."
          },
          "taxRateRef": {
            "$ref": "#/components/schemas/RecordRef"
          },
          "accountRef": {
            "$ref": "#/components/schemas/RecordRef"
          },
          "trackingRefs": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/RecordRef"
            }
          }
        },
        "required": [
          "netAmount",
          "taxAmount",
          "accountRef"
        ]
      },
      "Attachment": {
        "title": "Attachment",
        "type": "object",
        "x-examples": {
          "Attachment Example": {
            "companyId": "bf1e0242-5b7a-418b-a307-9e09dbf9f39a",
            "id": "1400000000122699154",
            "transactionId": "f8f00edd-ddb0-4ca5-b36b-8f932e6b5160"
          }
        },
        "properties": {
          "companyId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique ID of company in Codat"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of attachment"
          },
          "transactionId": {
            "type": "string",
            "description": "Unique identifier of transaction"
          }
        }
      },
      "CompanyConfiguration": {
        "required": [
          "bankAccount",
          "supplier",
          "customer"
        ],
        "title": "Company configuration",
        "type": "object",
        "x-examples": {
          "Config Example": {
            "bankAccount": {
              "id": "89"
            },
            "supplier": {
              "id": "124"
            },
            "customer": {
              "id": "140"
            }
          }
        },
        "properties": {
          "bankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "supplier": {
            "$ref": "#/components/schemas/Supplier"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        }
      },
      "BankAccount": {
        "x-internal": true,
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the account from which purchases are made",
            "example": "32"
          }
        }
      },
      "Supplier": {
        "x-internal": true,
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id of the supplier for all purchases to be associated to",
            "example": "124"
          }
        }
      },
      "Customer": {
        "x-internal": true,
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id of the customer for all income related activities to be associated to.",
            "example": "142"
          }
        }
      },
      "SyncInitiated": {
        "title": "Sync initiated",
        "type": "object",
        "properties": {
          "syncId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PostSync": {
        "title": "Post sync",
        "type": "object",
        "properties": {
          "datasetIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodatErrorMessage": {
        "title": "Error message",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "service": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "correlationId": {
            "type": "string"
          },
          "validation": {
            "type": "object",
            "properties": {
              "hasErrors": {
                "type": "boolean"
              },
              "hasWarnings": {
                "type": "boolean"
              },
              "hasInternals": {
                "type": "boolean"
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "itemId": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "validatorName": {
                      "type": "string"
                    },
                    "ruleId": {
                      "type": "string"
                    }
                  }
                }
              },
              "warnings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "itemId": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "validatorName": {
                      "type": "string"
                    },
                    "ruleId": {
                      "type": "string"
                    }
                  }
                }
              },
              "internals": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "itemId": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "validatorName": {
                      "type": "string"
                    },
                    "ruleId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "inner": {
            "type": "string"
          },
          "canBeRetried": {
            "type": "string"
          },
          "detailedErrorCode": {
            "type": "integer"
          }
        },
        "x-examples": {
          "Not Found": {
            "statusCode": 404,
            "service": "ExpenseSyncApi",
            "error": "NotFound",
            "correlationId": "",
            "canBeRetried": "Unknown",
            "detailedErrorCode": 0
          },
          "Invalid Dataset": {
            "statusCode": 400,
            "service": "ExpenseSyncApi",
            "error": "There are problems with the request, see the Validation property for more detail.",
            "correlationId": "2201579598a29055025d2e0f829fa89a",
            "validation": {
              "errors": [
                {
                  "itemId": "Items[0].Lines[0].NetAmount",
                  "message": "The field NetAmount must be between 0 and 5000000."
                },
                {
                  "itemId": "Items[0].Lines[0].TaxAmount",
                  "message": "The field TaxAmount must be between 0 and 5000000."
                }
              ],
              "warnings": []
            },
            "canBeRetried": "No",
            "detailedErrorCode": 0
          }
        }
      },
      "PagingInfo": {
        "type": "object",
        "x-internal": true,
        "properties": {
          "pageNumber": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "totalResults": {
            "type": "integer"
          },
          "_links": {
            "$ref": "#/components/schemas/PagingInfo/definitions/links"
          }
        },
        "definitions": {
          "links": {
            "title": "Hal Links",
            "type": "object",
            "required": [
              "self",
              "current"
            ],
            "properties": {
              "self": {
                "$ref": "#/components/schemas/PagingInfo/definitions/halRef"
              },
              "current": {
                "$ref": "#/components/schemas/PagingInfo/definitions/halRef"
              },
              "next": {
                "$ref": "#/components/schemas/PagingInfo/definitions/halRef"
              },
              "previous": {
                "$ref": "#/components/schemas/PagingInfo/definitions/halRef"
              }
            },
            "examples": [
              {
                "self": {
                  "href": "/companies/{id}/data/{dataType}"
                },
                "current": {
                  "href": "/companies/{id}/data/{dataType}?page=1&pageSize=10"
                }
              }
            ]
          },
          "halRef": {
            "title": "Hypertext reference",
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "format": "uri-reference"
              }
            }
          }
        },
        "required": [
          "pageNumber",
          "pageSize",
          "totalResults",
          "_links"
        ],
        "examples": [
          {
            "_links": {
              "pageNumber": 1,
              "pageSize": 10,
              "totalResults": 1,
              "self": {
                "href": "/companies/{id}/data/{dataType}"
              },
              "current": {
                "href": "/companies/{id}/data/{dataType}?page=1&pageSize=10"
              }
            }
          }
        ]
      },
      "HalLink": {
        "title": "Hypertext reference",
        "type": "object",
        "x-internal": true,
        "properties": {
          "href": {
            "type": "string",
            "format": "uri-reference"
          }
        }
      },
      "UpdateExpenseRequest": {
        "title": "Updating Expense Transaction Request",
        "type": "object",
        "examples": {
          "Payment": {
            "value": {
              "type": "Payment",
              "issueDate": "2023-05-22T00:00:00+00:00",
              "currency": "GBP",
              "currencyRate": 1.18,
              "notes": "New notes",
              "contactRef": {
                "id": "f5244103-5223-4b0a-857f-50566ac86c11",
                "type": "Supplier"
              },
              "merchantName": "My Merchant"
            }
          }
        },
        "properties": {
          "type": "#/definitions/expenseType",
          "issueDate": {
            "type": "string",
            "description": "Date the transaction was recorded.",
            "example": "2022-06-28T00:00:00.000Z"
          },
          "currency": {
            "type": "string",
            "example": "GBP",
            "description": "Currency the transaction was recorded in."
          },
          "currencyRate": {
            "$ref": "#/components/schemas/ExpenseTransaction/properties/currencyRate"
          },
          "contactRef": {
            "description": "Supplier or Customer for the purchase to be associated to.",
            "$ref": "#/components/schemas/ContactRef"
          },
          "merchantName": {
            "type": "string",
            "description": "Name of the merchant where the purchase took place",
            "example": "Amazon UK"
          },
          "lines": {
            "type": "array",
            "description": "Array of transaction lines.",
            "items": {
              "$ref": "#/components/schemas/ExpenseTransactionLine"
            }
          },
          "notes": {
            "type": "string",
            "description": "Any private, company notes about the transaction.",
            "example": "APPLE.COM/BILL - 09001077498 - Card Ending: 4590"
          }
        },
        "definitions": {
          "expenseType": {
            "description": "The type of transaction.",
            "type": "string",
            "example": "Payment",
            "enum": [
              "Payment",
              "Refund",
              "Reward",
              "Chargeback",
              "TransferIn",
              "TransferOut",
              "AdjustmentIn",
              "AdjustmentOut"
            ]
          }
        },
        "required": [
          "type",
          "issueDate"
        ]
      },
      "SyncStartedWebhook": {
        "title": "Sync started webhook",
        "x-internal": true,
        "description": "Webhook request body used to notify that a sync has started.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/parameters/companyId/schema"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "type": "object",
            "properties": {
              "syncId": {
                "$ref": "#/components/schemas/SyncFailedWebhook/properties/Data/properties/syncId"
              },
              "syncType": {
                "$ref": "#/components/schemas/SyncFailedWebhook/properties/Data/properties/syncType"
              },
              "SyncDateRangeStartUtc": {
                "$ref": "#/components/schemas/SyncFailedWebhook/properties/Data/properties/SyncDateRangeStartUtc"
              },
              "SyncDateRangeFinishUtc": {
                "$ref": "#/components/schemas/SyncFailedWebhook/properties/Data/properties/SyncDateRangeFinishUtc"
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "30e0f9d2-52c0-4c9f-a806-bcd98a3bcd7e",
            "ClientName": "Expense Sync",
            "CompanyId": "1f9559e7-8368-48c9-bdf4-f158e16b8b85",
            "AlertId": "33a4f8e9-09ae-4334-9b00-7bbe83024672",
            "RuleId": "5c27631d-3b63-4b50-8228-ee502fd113eb",
            "RuleType": "Sync Started",
            "Message": "Sync 321363b4-efa9-4fbc-b71c-0b58d62f3248 for company 1f9559e7-8368-48c9-bdf4-f158e16b8b85 of type Expense has started.",
            "Data": {
              "syncId": "321363b4-efa9-4fbc-b71c-0b58d62f3248",
              "syncType": "Expense",
              "SyncDateRangeStartUtc": "2023-05-03T09:56:17.4357111Z",
              "SyncDateRangeFinishUtc": "2023-05-03T09:56:18.4357111Z"
            }
          }
        ]
      },
      "SyncFailedWebhook": {
        "title": "Sync failed webhook",
        "x-internal": true,
        "description": "Webhook request body used to notify that a sync has failed.",
        "type": "object",
        "properties": {
          "ClientId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for your client in Codat."
          },
          "ClientName": {
            "type": "string",
            "description": "Name of your client in Codat."
          },
          "CompanyId": {
            "$ref": "#/components/parameters/companyId/schema"
          },
          "RuleId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the rule."
          },
          "RuleType": {
            "type": "string",
            "x-stoplight": {
              "id": "34d52a089f08a"
            },
            "description": "The type of rule."
          },
          "AlertId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier of the webhook event."
          },
          "Message": {
            "type": "string",
            "description": "A human readable message about the webhook."
          },
          "Data": {
            "type": "object",
            "properties": {
              "syncId": {
                "type": "string",
                "format": "uuid",
                "example": "a9367074-b5c3-42c4-9be4-be129f43577e"
              },
              "syncType": {
                "type": "string",
                "description": "The type of sync being performed."
              },
              "SyncDateRangeStartUtc": {
                "$ref": "#/components/schemas/Company/properties/created",
                "description": "The start datetime data will be synced from."
              },
              "SyncDateRangeFinishUtc": {
                "$ref": "#/components/schemas/Company/properties/created",
                "description": "The end datetime data will be synced to."
              },
              "FailureStage": {
                "type": "string",
                "description": "The stage of the job the sync failed."
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "30e0f9d2-52c0-4c9f-a806-bcd98a3bcd7e",
            "ClientName": "Expense Sync",
            "CompanyId": "1f9559e7-8368-48c9-bdf4-f158e16b8b85",
            "RuleId": "289c80dc-2aee-4b71-afff-9acd8d051080",
            "RuleType": "Sync Failed",
            "AlertId": "72c1103b-7f17-4a3a-8db5-67c2d360a516",
            "Message": "Sync 3bead2a1-1b3d-4d90-8077-cddc5ca68b01 for company 1f9559e7-8368-48c9-bdf4-f158e16b8b85 of type Expense has failed at step Pushing.",
            "Data": {
              "syncId": "3bead2a1-1b3d-4d90-8077-cddc5ca68b01",
              "syncType": "Expense",
              "SyncDateRangeStartUtc": "2023-05-03T12:57:58.757Z",
              "SyncDateRangeFinishUtc": "2023-05-03T12:57:59.757Z",
              "FailureStage": "Pushing"
            }
          }
        ]
      },
      "SyncCompleteWebhook": {
        "title": "Sync complete webhook",
        "x-internal": true,
        "description": "Webhook request body used to notify that a sync has completed.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/parameters/companyId/schema"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "type": "object",
            "properties": {
              "syncId": {
                "$ref": "#/components/schemas/SyncFailedWebhook/properties/Data/properties/syncId"
              },
              "syncType": {
                "$ref": "#/components/schemas/SyncFailedWebhook/properties/Data/properties/syncType"
              },
              "SyncDateRangeStartUtc": {
                "$ref": "#/components/schemas/SyncFailedWebhook/properties/Data/properties/SyncDateRangeStartUtc"
              },
              "SyncDateRangeFinishUtc": {
                "$ref": "#/components/schemas/SyncFailedWebhook/properties/Data/properties/SyncDateRangeFinishUtc"
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "30e0f9d2-52c0-4c9f-a806-bcd98a3bcd7e",
            "ClientName": "Expense Sync",
            "CompanyId": "1f9559e7-8368-48c9-bdf4-f158e16b8b85",
            "AlertId": "33a4f8e9-09ae-4334-9b00-7bbe83024672",
            "RuleId": "5c27631d-3b63-4b50-8228-ee502fd113eb",
            "RuleType": "Sync Completed",
            "Message": "Sync 321363b4-efa9-4fbc-b71c-0b58d62f3248 for company 1f9559e7-8368-48c9-bdf4-f158e16b8b85 of type Expense completed successfully.",
            "Data": {
              "syncId": "321363b4-efa9-4fbc-b71c-0b58d62f3248",
              "syncType": "Expense",
              "SyncDateRangeStartUtc": "2023-05-03T09:56:17.4357111Z",
              "SyncDateRangeFinishUtc": "2023-05-03T09:56:18.4357111Z"
            }
          }
        ]
      },
      "Companies": {
        "x-internal": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/PagingInfo"
          }
        ]
      },
      "CompanyRequestBody": {
        "x-internal": true,
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of company being connected.",
            "pattern": "^[A-Za-z0-9\\s\\-',&@.,?!\\s]+$",
            "minLength": 1,
            "example": "Bank of Dave"
          },
          "description": {
            "$ref": "#/components/schemas/Company/properties/description"
          }
        },
        "required": [
          "name"
        ]
      },
      "Company": {
        "title": "Company",
        "description": "﻿In Codat, a company represents a business sharing access to their data. Each company can have multiple [connections](https://docs.codat.io/codat-api#/schemas/Connection) to different data sources such as one connection to [Xero](https://docs.codat.io/integrations/accounting/xero/accounting-xero) for accounting data, two connections to [Plaid](https://docs.codat.io/integrations/banking/plaid/banking-plaid) for two bank accounts and a connection to [Zettle](https://docs.codat.io/integrations/commerce/zettle/commerce-zettle) for POS data.\n\nTypically each company is one of your customers.\n\nWhen you create a company, you can specify a `name` and we will automatically generate a unique `id` for the company. You can also add a `description` to store any additional information about the company.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/parameters/companyId/schema"
          },
          "name": {
            "type": "string",
            "description": "The name of the company",
            "example": "Codat Ltd."
          },
          "description": {
            "type": "string",
            "example": "Requested early access to the new financing scheme.",
            "description": "Additional information about the company. This can be used to store foreign IDs, references, etc."
          },
          "platform": {
            "type": "string",
            "deprecated": true,
            "example": "Xero"
          },
          "redirect": {
            "type": "string",
            "format": "uri",
            "description": "The `redirect` [Link URL](https://docs.codat.io/auth-flow/authorize-hosted-link) enabling the customer to start their auth flow journey for the company.",
            "example": "https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739"
          },
          "lastSync": {
            "$ref": "#/components/schemas/Company/properties/created"
          },
          "created": {
            "title": "Date time",
            "type": "string",
            "examples": [
              "2022-10-23T00:00:00.000Z",
              "2022-10-23T00:00:00.000Z"
            ],
            "description": "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced."
          },
          "createdByUserName": {
            "type": "string"
          },
          "dataConnections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection"
            }
          }
        },
        "required": [
          "id",
          "name",
          "redirect"
        ],
        "examples": [
          {
            "id": "0498e921-9b53-4396-a412-4f2f5983b0a2",
            "name": "string",
            "platform": "string",
            "redirect": "https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739",
            "lastSync": "2022-01-01T12:00:00.000Z",
            "created": "2022-01-01T12:00:00.000Z",
            "createdByUserName": "string",
            "dataConnections": [
              {
                "id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd",
                "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c",
                "integrationKey": "dfxm",
                "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee",
                "platformName": "Basiq",
                "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start",
                "status": "Linked",
                "lastSync": "2022-10-27T10:22:43.6464237Z",
                "created": "2022-10-27T09:53:29Z",
                "sourceType": "Banking"
              }
            ]
          }
        ]
      },
      "Connections": {
        "x-internal": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Connection"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/PagingInfo"
          }
        ]
      },
      "Connection": {
        "title": "Connection",
        "description": "﻿A connection represents a [company's](https://docs.codat.io/codat-api#/schemas/Company) connection to a data source and allows you to synchronize data (pull and/or push) with that source.\n\nA company can have multiple data connections depending on the type of data source it is connecting to. For example, a single company can link to:\n\n- [Accounting data](https://docs.codat.io/accounting-api/overview) - 1 active connection.\n- [Banking data](https://docs.codat.io/banking-api/overview) - Multiple active connections.\n- [Commerce data](https://docs.codat.io/commerce-api/overview) - Multiple active connections.\nAny combination of accounting, banking, and commerce data connections is allowed.\n\nBefore you can use a data connection to pull or push data, the company must grant you access to their business data by [linking the connection](https://docs.codat.io/auth-flow/overview).",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/parameters/connectionId/schema"
          },
          "integrationId": {
            "type": "string",
            "format": "uuid",
            "example": "fd321cb6-7963-4506-b873-e99593a45e30",
            "description": "A Codat ID representing the integration."
          },
          "integrationKey": {
            "type": "string",
            "description": "A unique four-character ID that identifies the platform of the company's data connection. This ensures continuity if the platform changes its name in the future."
          },
          "sourceId": {
            "type": "string",
            "format": "uuid",
            "example": "35b92968-9851-4095-ad60-395c95cbcba4",
            "description": "A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`."
          },
          "sourceType": {
            "title": "Source Type",
            "x-internal": true,
            "description": "The type of platform of the connection.",
            "type": "string",
            "enum": [
              "Accounting",
              "Banking",
              "Commerce",
              "Other",
              "Unknown"
            ],
            "example": "Accounting"
          },
          "platformName": {
            "type": "string"
          },
          "linkUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start"
          },
          "status": {
            "$ref": "#/components/schemas/Connection/definitions/dataConnectionStatus"
          },
          "lastSync": {
            "$ref": "#/components/schemas/Company/properties/created"
          },
          "created": {
            "$ref": "#/components/schemas/Company/properties/created"
          },
          "dataConnectionErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection/definitions/dataConnectionError"
            }
          },
          "connectionInfo": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "required": [
          "id",
          "integrationId",
          "integrationKey",
          "sourceId",
          "platformName",
          "linkUrl",
          "status",
          "created",
          "sourceType"
        ],
        "definitions": {
          "dataConnectionStatus": {
            "title": "Data connection status",
            "description": "The current authorization status of the data connection.",
            "type": "string",
            "enum": [
              "PendingAuth",
              "Linked",
              "Unlinked",
              "Deauthorized"
            ]
          },
          "dataConnectionError": {
            "title": "Data connection error",
            "type": "object",
            "properties": {
              "statusCode": {
                "type": "string"
              },
              "statusText": {
                "type": "string"
              },
              "errorMessage": {
                "type": "string"
              },
              "erroredOnUtc": {
                "$ref": "#/components/schemas/Company/properties/created"
              }
            }
          },
          "dataConnectionSourceType": {
            "title": "Source Type",
            "description": "The type of platform of the connection.",
            "type": "string",
            "enum": [
              "Accounting",
              "Banking",
              "Commerce",
              "Other",
              "Unknown"
            ],
            "example": "Accounting"
          }
        },
        "example": {
          "id": "ee2eb431-c0fa-4dc9-93fa-d29781c12bcd",
          "integrationId": "bf083d72-62c7-493e-aec9-81b4dbba7e2c",
          "integrationKey": "dfxm",
          "sourceId": "bdd831ce-eebd-4896-89a7-20e5ee8989ee",
          "platformName": "Basiq",
          "linkUrl": "https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start",
          "status": "Linked",
          "lastSync": "2022-10-27T10:22:43.6464237Z",
          "created": "2022-10-27T09:53:29Z",
          "sourceType": "Banking"
        }
      },
      "DataStatus": {
        "title": "Data Status",
        "description": "Describes the state of data in the Codat cache for a company and data type",
        "type": "object",
        "required": [
          "dataType",
          "lastSuccessfulSync",
          "currentStatus"
        ],
        "properties": {
          "dataType": {
            "type": "string"
          },
          "lastSuccessfulSync": {
            "$ref": "#/components/schemas/Company/properties/created"
          },
          "currentStatus": {
            "type": "string"
          },
          "latestSyncId": {
            "type": "string",
            "format": "uuid",
            "example": "ad474a37-2003-478e-baee-9af9f1ec2fe3"
          },
          "latestSuccessfulSyncId": {
            "type": "string",
            "format": "uuid",
            "example": "8220fc90-55b6-47bc-9417-48ac6ea93101"
          }
        },
        "examples": [
          {
            "dataType": "string",
            "lastSuccessfulSync": "2022-01-01T13:00:00.000Z",
            "currentStatus": "string",
            "latestSyncId": "ad474a37-2003-478e-baee-9af9f1ec2fe3",
            "latestSuccessfulSyncId": "8220fc90-55b6-47bc-9417-48ac6ea93101"
          }
        ]
      },
      "DataStatusResponse": {
        "x-internal": true,
        "title": "Data status response",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/DataStatus"
        }
      },
      "PullOperation": {
        "title": "Pull Operation",
        "description": "Information about a queued, in progress or completed pull operation.\n*Formally called `dataset`*",
        "x-stoplight": {
          "id": "hvk8xbvt7ekyg"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "943accd0-4247-42d8-865b-363c8629e1da"
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "example": "22ece347-e5f6-4896-95e0-35a4c7f17023"
          },
          "connectionId": {
            "type": "string",
            "format": "uuid",
            "example": "50830828-7d39-4367-b0eb-5ddb2de5faa5"
          },
          "dataType": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Initial",
              "Queued",
              "Fetching",
              "MapQueued",
              "Mapping",
              "Complete",
              "FetchError",
              "MapError",
              "InternalError",
              "ProcessingQueued",
              "Processing",
              "ProcessingError",
              "ValidationQueued",
              "Validating",
              "ValidationError",
              "AuthError",
              "Cancelled",
              "Routing",
              "RoutingError",
              "NotSupported",
              "RateLimitError",
              "PermissionsError",
              "PrerequisiteNotMet"
            ],
            "example": "Complete"
          },
          "requested": {
            "$ref": "#/components/schemas/Company/properties/created"
          },
          "progress": {
            "type": "integer"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "isErrored": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "companyId",
          "connectionId",
          "dataType",
          "status",
          "requested",
          "progress",
          "isCompleted",
          "isErrored"
        ],
        "examples": [
          {
            "id": "97d60846-f07a-4d42-b5a0-0bdcc6ebf56b",
            "companyId": "4645bd78-8988-45bc-ac9e-67ba5df6e4e5",
            "connectionId": "51baa045-4836-4317-a42e-3542e991e581",
            "dataType": "invoices",
            "status": "Initial",
            "requested": "2022-11-14T11:18:37.2798351Z",
            "progress": 10,
            "isCompleted": false,
            "isErrored": false
          }
        ]
      },
      "DataType": {
        "x-internal": true,
        "type": "string",
        "description": "Available Data types",
        "enum": [
          "accountTransactions",
          "balanceSheet",
          "bankAccounts",
          "bankTransactions",
          "billCreditNotes",
          "billPayments",
          "bills",
          "cashFlowStatement",
          "chartOfAccounts",
          "company",
          "creditNotes",
          "customers",
          "directCosts",
          "directIncomes",
          "invoices",
          "items",
          "journalEntries",
          "journals",
          "paymentMethods",
          "payments",
          "profitAndLoss",
          "purchaseOrders",
          "salesOrders",
          "suppliers",
          "taxRates",
          "trackingCategories",
          "transfers",
          "banking-accountBalances",
          "banking-accounts",
          "banking-transactionCategories",
          "banking-transactions",
          "commerce-companyInfo",
          "commerce-customers",
          "commerce-disputes",
          "commerce-locations",
          "commerce-orders",
          "commerce-paymentMethods",
          "commerce-payments",
          "commerce-productCategories",
          "commerce-products",
          "commerce-taxComponents",
          "commerce-transactions"
        ],
        "example": "invoices"
      },
      "DataConnectionHistory": {
        "x-internal": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PullOperation"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/PagingInfo"
          }
        ]
      },
      "PushOperationSummary": {
        "type": "object",
        "x-internal": true,
        "properties": {
          "changes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PushOperationSummary/definitions/pushOperationChange"
            }
          },
          "dataType": {
            "$ref": "#/components/schemas/DataType",
            "nullable": true,
            "description": "The type of data being pushed, eg invoices, customers."
          },
          "companyId": {
            "$ref": "#/components/parameters/companyId/schema"
          },
          "pushOperationKey": {
            "type": "string",
            "format": "uuid",
            "description": "A unique identifier generated by Codat to represent this single push operation. This identifier can be used to track the status of the push, and should be persisted."
          },
          "dataConnectionKey": {
            "$ref": "#/components/parameters/connectionId/schema"
          },
          "requestedOnUtc": {
            "$ref": "#/components/schemas/Company/properties/created",
            "description": "The datetime when the push was requested."
          },
          "completedOnUtc": {
            "$ref": "#/components/schemas/Company/properties/created",
            "description": "The datetime when the push was completed, null if Pending."
          },
          "timeoutInMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timeoutInSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "status": {
            "$ref": "#/components/schemas/PushOperationSummary/definitions/pushOperationStatus"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validation": {
            "$ref": "#/components/schemas/PushOperationSummary/definitions/validation"
          },
          "statusCode": {
            "type": "integer"
          }
        },
        "required": [
          "companyId",
          "pushOperationKey",
          "dataConnectionKey",
          "requestedOnUtc",
          "status",
          "statusCode"
        ],
        "definitions": {
          "validation": {
            "type": "object",
            "title": "Validation",
            "description": "A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.",
            "properties": {
              "errors": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PushOperationSummary/definitions/validationItem"
                }
              },
              "warnings": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PushOperationSummary/definitions/validationItem"
                }
              }
            }
          },
          "validationItem": {
            "title": "Validation item",
            "type": "object",
            "properties": {
              "itemId": {
                "type": "string",
                "nullable": true
              },
              "message": {
                "type": "string",
                "nullable": true
              },
              "validatorName": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "pushChangeType": {
            "title": "Push change type",
            "type": "string",
            "enum": [
              "Unknown",
              "Created",
              "Modified",
              "Deleted",
              "AttachmentUploaded"
            ]
          },
          "pushOperationRef": {
            "title": "Push operation reference",
            "x-internal": true,
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "dataType": {
                "$ref": "#/components/schemas/DataType",
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "pushOperationStatus": {
            "title": "Push operation status",
            "type": "string",
            "enum": [
              "Pending",
              "Failed",
              "Success",
              "TimedOut"
            ],
            "description": "The status of the push operation."
          },
          "pushOperationChange": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/PushOperationSummary/definitions/pushChangeType"
              },
              "recordRef": {
                "$ref": "#/components/schemas/PushOperationSummary/definitions/pushOperationRef"
              },
              "attachmentId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        }
      },
      "PushHistoryResponse": {
        "x-internal": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PushOperationSummary"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/PagingInfo"
          }
        ]
      },
      "PushOperation": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "description": "Object submitted in push operation.",
                "additionalProperties": true
              }
            }
          },
          {
            "$ref": "#/components/schemas/PushOperationSummary"
          }
        ]
      },
      "Account": {
        "title": "Account",
        "description": "> **Language tip:** Accounts are also referred to as **chart of accounts**, **nominal accounts**, and **general ledger**.\n\nView the coverage for accounts in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=chartOfAccounts\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nAccounts are the categories a business uses to record accounting transactions. From the Accounts endpoints, you can retrieve a list of all accounts for a specified company. \n\nThe categories for an account include:\n  * Asset\n  * Expense\n  * Income\n  * Liability\n  * Equity.\n\nThe same account may have a different category based on the integration it is used in. For example, a current account (known as checking in the US) should be categorized as `Asset.Current` for Xero, and `Asset.Bank.Checking` for QuickBooks Online. \n\nAt the same time, each integration may have its own requirements to the categories. For example, a Paypal account in Xero is of the `Asset.Bank` category and therefore requires additional properties to be provided. \n\nTo determine the list of allowed categories for a specific integration, you can: \n- Follow our [Create, update, delete data](https://docs.codat.io/using-the-api/push) guide and use the [Get create account model](https://docs.codat.io/accounting-api#/operations/get-create-chartOfAccounts-model).\n- Refer to the integration's own documentation. \n\n> **Accounts with no category**\n> \n> If an account is pulled from the chart of accounts and its nominal code does not lie within the category layout for the company's accounts, then the **type** is `Unknown`. The **fullyQualifiedCategory** and **fullyQualifiedName** fields return `null`.\n> \n> This approach gives a true representation of the company's accounts whilst preventing distorting financials such as a company's profit and loss and balance sheet reports.",
        "allOf": [
          {
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier for the account, unique for the company.",
                "example": "1b6266d1-1e44-46c5-8eb5-a8f98e03124e"
              },
              "nominalCode": {
                "type": "string",
                "nullable": true,
                "description": "Reference given to each nominal account for a business. It ensures money is allocated to the correct account. This code isn't a unique identifier in the Codat system.",
                "example": "610"
              },
              "name": {
                "type": "string",
                "nullable": true,
                "description": "Name of the account.",
                "example": "Accounts Receivable"
              },
              "description": {
                "type": "string",
                "nullable": true,
                "description": "Description for the account.",
                "example": "Invoices the business has issued but has not yet collected payment on."
              },
              "fullyQualifiedCategory": {
                "type": "string",
                "nullable": true,
                "description": "Full category of the account. \r\n\r\nFor example, `Liability.Current` or `Income.Revenue`. To determine a list of possible categories for each integration, see our examples, follow our [Create, update, delete data](https://docs.codat.io/using-the-api/push) guide, or refer to the integration's own documentation.",
                "example": "Asset.Current"
              },
              "fullyQualifiedName": {
                "type": "string",
                "nullable": true,
                "description": "Full name of the account, for example:\n- `Cash On Hand`\n- `Rents Held In Trust`\n- `Fixed Asset`",
                "examples": [
                  "Cash On Hand",
                  "Fixed Asset"
                ]
              },
              "currency": {
                "title": "Currency",
                "x-internal": true,
                "type": "string",
                "description": "The currency data type in Codat is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, e.g. _GBP_.\n\n## Unknown currencies\n\nIn line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction. \n\nThere are only a very small number of edge cases where this currency code is returned by the Codat system.",
                "format": "ISO4217",
                "examples": [
                  "GBP",
                  "USD",
                  "EUR"
                ]
              },
              "currentBalance": {
                "type": "number",
                "nullable": true,
                "description": "Current balance in the account.",
                "example": 0
              },
              "type": {
                "$ref": "#/components/schemas/Account/definitions/accountType"
              },
              "status": {
                "$ref": "#/components/schemas/Account/definitions/accountStatus"
              },
              "isBankAccount": {
                "type": "boolean",
                "description": "Confirms whether the account is a bank account or not."
              },
              "validDatatypeLinks": {
                "type": "array",
                "nullable": true,
                "description": "The validDatatypeLinks can be used to determine whether an account can be correctly mapped to another object; for example, accounts with a `type` of `income` might only support being used on an Invoice and Direct Income. For more information, see [Valid Data Type Links](/accounting-api#/schemas/ValidDataTypeLinks).",
                "items": {
                  "title": "Valid data type links",
                  "description": "When querying Codat's data model, some data types return `validDatatypeLinks` metadata in the JSON response. This indicates where that object can be used as a reference—a _valid link_—when creating or updating other data.\n\nFor example, `validDatatypeLinks` might indicate the following references:\n\n- Which tax rates are valid to use on the line item of a bill.\n- Which items can be used when creating an invoice. \n\nYou can use `validDatatypeLinks` to present your SMB customers with only valid choices when selecting objects from a list, for example.\n\n## `validDatatypeLinks` example\n\nThe following example uses the `Accounting.Accounts` data type. It shows that, on the linked integration, this account is valid as the account on a payment or bill payment; and as the account referenced on the line item of a direct income or direct cost. Because there is no valid link to Invoices or Bills, using this account on those data types will result in an error.\n\n```json validDatatypeLinks for an account\n{\n            \"id\": \"bd9e85e0-0478-433d-ae9f-0b3c4f04bfe4\",\n            \"nominalCode\": \"090\",\n            \"name\": \"Business Bank Account\",\n            #...\n            \"validDatatypeLinks\": [\n                {\n                    \"property\": \"Id\",\n                    \"links\": [\n                        \"Payment.AccountRef.Id\",\n                        \"BillPayment.AccountRef.Id\",\n                        \"DirectIncome.LineItems.AccountRef.Id\",\n                        \"DirectCost.LineItems.AccountRef.Id\"\n                    ]\n                }\n            ]\n        }\n```\n\n\n\n## Support for `validDatatypeLinks`\n\nCodat currently supports `validDatatypeLinks` for some data types on our Xero, QuickBooks Online, QuickBooks Desktop, Exact (NL), and Sage Business Cloud integrations. \n\nIf you'd like us to extend support to more data types or integrations, suggest or vote for this on our <a href=\"https://portal.productboard.com/codat/5-product-roadmap\">Product Roadmap</a>.",
                  "type": "object",
                  "properties": {
                    "property": {
                      "type": "string",
                      "nullable": true,
                      "description": "The property from the account that can be linked."
                    },
                    "links": {
                      "type": "array",
                      "nullable": true,
                      "description": "Supported `dataTypes` that the record can be linked to.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "metadata": {
                "type": "object",
                "x-internal": true,
                "properties": {
                  "isDeleted": {
                    "type": "boolean",
                    "description": "Indicates whether the record has been deleted in the third-party system this record originated from.",
                    "nullable": true
                  }
                }
              }
            }
          },
          {
            "x-internal": true,
            "allOf": [
              {
                "title": "ModifiedDate",
                "x-internal": true,
                "type": "object",
                "properties": {
                  "modifiedDate": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Company/properties/created"
                      },
                      {
                        "description": "The date when the record was last fetched from the data source and updated in Codat’s data cache. \n\nUse it to identify and retrieve records that have changed since your last fetch. For example, filtering `modifiedDate` to today will provide new records updated in Codat today.\n\nThis date is populated for all data types except for attachments, balance sheets, company information, and profit & loss reports ([read more](https://docs.codat.io/using-the-api/modified-dates#modified-date)).\n\nIn Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>."
                      }
                    ]
                  }
                }
              },
              {
                "title": "Source Modified Date",
                "x-internal": true,
                "type": "object",
                "nullable": true,
                "properties": {
                  "sourceModifiedDate": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Company/properties/created"
                      },
                      {
                        "description": "The date when a record was last modified in the source platform, usually by the business or a business process. For example, when payments are made against an invoice. \n\nIt is not populated ([read more](https://docs.codat.io/using-the-api/modified-dates#source-modified-date)) when:\n  - Pulling attachments\n  - The integration platform does not provide modification dates for a data type\n  - A record has been deleted from the source platform and Codat doesn't have a record of when the deletion occurred\n  - A record has been voided. For certain platforms that soft delete records, `isDeleted` metadata is used to identify void records\n\nIn Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>."
                      }
                    ]
                  }
                }
              }
            ]
          }
        ],
        "definitions": {
          "accountRef": {
            "title": "Account reference",
            "type": "object",
            "description": "Data types that reference an account, for example bill and invoice line items, use an accountRef that includes the ID and name of the linked account.",
            "properties": {
              "id": {
                "type": "string",
                "description": "'id' from the Accounts data type."
              },
              "name": {
                "type": "string",
                "description": "'name' from the Accounts data type."
              }
            }
          },
          "accountType": {
            "title": "Account type",
            "enum": [
              "Unknown",
              "Asset",
              "Expense",
              "Income",
              "Liability",
              "Equity"
            ],
            "type": "string",
            "description": "Type of account",
            "example": "Asset"
          },
          "accountStatus": {
            "title": "Account status",
            "enum": [
              "Unknown",
              "Active",
              "Archived",
              "Pending"
            ],
            "type": "string",
            "description": "Status of the account",
            "example": "Active"
          }
        },
        "type": "object"
      },
      "CreateAccountResponse": {
        "x-internal": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Account"
              }
            }
          },
          {
            "$ref": "#/components/schemas/PushOperationSummary"
          }
        ]
      },
      "Customers": {
        "x-internal": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/PagingInfo"
          }
        ]
      },
      "CreateCustomerResponse": {
        "x-internal": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/PushOperationSummary"
          }
        ]
      },
      "UpdateCustomerResponse": {
        "x-internal": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/PushOperationSummary"
          }
        ]
      },
      "Suppliers": {
        "x-internal": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/PagingInfo"
          }
        ]
      },
      "CreateSupplierResponse": {
        "x-internal": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          },
          {
            "$ref": "#/components/schemas/PushOperationSummary"
          }
        ]
      },
      "UpdateSupplierResponse": {
        "x-internal": true,
        "allOf": [
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          },
          {
            "$ref": "#/components/schemas/PushOperationSummary"
          }
        ]
      },
      "ErrorMessage": {
        "type": "object",
        "x-internal": true,
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "service": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "correlationId": {
            "type": "string"
          },
          "canBeRetried": {
            "type": "string"
          },
          "detailedErrorCode": {
            "type": "integer"
          }
        }
      }
    },
    "parameters": {
      "syncId": {
        "name": "syncId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "6fb40d5e-b13e-11ed-afa1-0242ac120002"
        },
        "description": "Unique identifier for a sync."
      },
      "transactionId": {
        "name": "transactionId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "336694d8-2dca-4cb5-a28d-3ccb83e55eee"
        },
        "description": "The unique identifier for your SMB's transaction."
      },
      "page": {
        "name": "page",
        "in": "query",
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": 1,
          "default": 1
        },
        "description": "Page number. [Read more](https://docs.codat.io/using-the-api/paging)."
      },
      "pageSize": {
        "name": "pageSize",
        "in": "query",
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 100,
          "example": 100,
          "minimum": 1,
          "maximum": 5000
        },
        "description": "Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging)."
      },
      "query": {
        "name": "query",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "-modifiedDate",
        "description": "Codat query string. [Read more](https://docs.codat.io/using-the-api/querying)."
      },
      "orderBy": {
        "name": "orderBy",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "-modifiedDate"
        },
        "description": "Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).",
        "x-stoplight": {
          "id": "4je9lwo02netu"
        }
      },
      "companyId": {
        "name": "companyId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "8a210b68-6988-11ed-a1eb-0242ac120002",
          "description": "Unique identifier for your SMB in Codat."
        }
      },
      "connectionId": {
        "name": "connectionId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
          "description": "Unique identifier for a company's data connection."
        }
      },
      "dataType": {
        "name": "dataType",
        "description": "The key of a Codat data type",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/DataType"
        }
      },
      "datasetId": {
        "name": "datasetId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid",
          "example": "eaed9f0f-e77b-4bc9-a58f-ab8b4b99ab18"
        },
        "description": "Unique ID of a dataset or pull operation."
      },
      "timeoutInMinutes": {
        "x-stoplight": {
          "id": "irz50qjbs3yef"
        },
        "name": "timeoutInMinutes",
        "in": "query",
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "forceUpdate": {
        "name": "forceUpdate",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": false
        },
        "description": "When updating data in the destination platform Codat checks the `sourceModifiedDate` against the `lastupdated` date from the accounting platform, if they're different Codat will return an error suggesting you should initiate another pull of the data. If this is set to `true` then the update will override this check."
      },
      "supplierId": {
        "name": "supplierId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "examples": [
            "13d946f0-c5d5-42bc-b092-97ece17923ab",
            "9wg4lep4ush5cxs79pl8sozmsndbaukll3ind4g7buqbm1h2",
            7110701885,
            "EILBDVJVNUAGVKRQ"
          ]
        },
        "description": "Unique identifier for a supplier"
      }
    },
    "responses": {
      "BadRequest": {
        "description": "The request made is not valid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "examples": {
              "Malformed query": {
                "value": {
                  "statusCode": 400,
                  "service": "PublicApi",
                  "error": "Error processing request - not valid.",
                  "correlationId": "bc997528a9d7abb9161ef45f05d38599",
                  "canBeRetried": "Unknown",
                  "detailedErrorCode": 0
                }
              }
            }
          }
        }
      },
      "Malformed-Query": {
        "description": "Your `query` parameter was not correctly formed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "examples": {
              "Malformed query": {
                "value": {
                  "statusCode": 400,
                  "service": "ClientsApi",
                  "error": "Error parsing query - Malformed query.",
                  "correlationId": "bc997528a9d7abb9161ef45f05d38599",
                  "canBeRetried": "Unknown",
                  "detailedErrorCode": 0
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Your API request was not properly authorized.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "examples": {
              "Unauthorized": {
                "value": {
                  "statusCode": 401,
                  "service": "PublicApi",
                  "error": "Unauthorized",
                  "correlationId": "7eb40d6b415d7bcd99ce658268284056",
                  "canBeRetried": "Unknown",
                  "detailedErrorCode": 0
                }
              }
            }
          }
        }
      },
      "Not-Found": {
        "description": "One or more of the resources you referenced could not be found.\nThis might be because your company or data connection id is wrong, or was already deleted.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "examples": {
              "Data connection not found": {
                "value": {
                  "statusCode": 404,
                  "service": "PublicApi",
                  "error": "Data connection a22dd66b-564a-4832-9b37-7b3ce4aeb7de not found",
                  "correlationId": "8fa2b5f4794970a4ee73758f612e8df0",
                  "canBeRetried": "Unknown",
                  "detailedErrorCode": 0
                }
              },
              "Company not found": {
                "value": {
                  "statusCode": 404,
                  "service": "ClientsApi",
                  "error": "No company was found with ID 846ed55c-974b-4392-a1f1-87b6fdbf3c5e",
                  "correlationId": "0a40c2f31fc8f992fb88b0853e4166f3",
                  "canBeRetried": "Unknown",
                  "detailedErrorCode": 0
                }
              },
              "No data available": {
                "value": {
                  "statusCode": 404,
                  "service": "PublicApi",
                  "error": "No data available for accounts for ID e5889b459f544926ac5b8e6756df2s",
                  "correlationId": "0a40c2f31fc8f992fb88b0853e4166f3",
                  "canBeRetried": "Unknown",
                  "detailedErrorCode": 0
                }
              }
            }
          }
        }
      },
      "Conflict": {
        "description": "The data type's dataset has not been requested or is still syncing.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "examples": {
              "Conflict": {
                "value": {
                  "statusCode": 409,
                  "service": "PublicApi",
                  "error": "The data set has not been requested.",
                  "correlationId": "bc997528a9d7abb9161ef45f05d38599",
                  "canBeRetried": "Unknown",
                  "detailedErrorCode": 0
                }
              }
            }
          }
        }
      },
      "Too-Many-Requests": {
        "description": "Too many requests were made in a given amount of time. Wait a short period and then try again.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "examples": {
              "Conflict": {
                "value": {
                  "statusCode": 429,
                  "service": "PublicApi",
                  "error": "You have made too many requests in a given amount of time; please retry later.",
                  "correlationId": "bc997528a9d7abb9161ef45f05d38599",
                  "canBeRetried": "Unknown",
                  "detailedErrorCode": 0
                }
              }
            }
          }
        }
      },
      "Unprocessable-Content": {
        "description": "The requests made can't be processed. This may be due to differences in platform support.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "examples": {
              "Conflict": {
                "value": {
                  "statusCode": 422,
                  "service": "ExpenseSyncApi",
                  "error": "Expense transaction updates are not supported for platforms other than Xero.",
                  "correlationId": "7c8e23841d211c87f49f30b248f70c93",
                  "canBeRetried": "Unknown",
                  "detailedErrorCode": 0
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "auth_header": {
        "name": "Authorization",
        "description": "The word \"Basic\" followed by a space and your API Key, base64 encoded, which can be found [here](https://app.codat.io/developers/api-keys)",
        "type": "apiKey",
        "in": "header",
        "x-speakeasy-example": "Basic BASE_64_ENCODED(API_KEY)"
      }
    }
  }
}
