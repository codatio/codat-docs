{
  "openapi": "3.1.0",
  "servers": [
    {
      "description": "Production",
      "url": "https://api.codat.io"
    }
  ],
  "info": {
    "title": "Codat webhook event types",
    "description": "Codat's webhook event types",
    "version": "3.0.0",
    "contact": {
      "name": "Codat",
      "email": "support@codat.io"
    },
    "termsOfService": "https://www.codat.io/legals/"
  },
  "security": [
    {
      "auth_header": []
    }
  ],
  "x-speakeasy-retries": {
    "strategy": "backoff",
    "backoff": {
      "initialInterval": 500,
      "maxInterval": 60000,
      "maxElapsedTime": 3600000,
      "exponent": 1.5
    },
    "statusCodes": [
      408,
      429,
      "5XX"
    ],
    "retryConnectionErrors": true
  },
  "tags": [],
  "paths": {},
  "webhooks": {
    "DataConnectionStatusChanged": {
      "post": {
        "description": "Triggered when a data connection status of a specific company changes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionStatusChangedWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "NewCompanySynchronized": {
      "post": {
        "description": "Triggered when initial syncs are complete for all data types queued for a newly connected company, and at least one of those syncs is successful.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCompanySynchronizedWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "DataSyncCompleted": {
      "post": {
        "description": "Generated for each data type to indicate that data synchronization is successfully completed for that specific data type.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSyncCompletedWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "DatasetDataChanged": {
      "post": {
        "description": "Generated for each data type to indicate that dataset synchronization has completed and updated Codat's data cache through the creation of new records or a change to existing records.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetDataChangedWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "DataSyncStatusChangedToError": {
      "post": {
        "description": "Indicates that the synchronization of a dataset failed.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetStatusChangedErrorWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "PushOperationStatusChanged": {
      "post": {
        "description": "Indicates that a create, update, or delete operation's status has changed.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushOperationStatusChangedWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "PushOperationTimedOut": {
      "post": {
        "description": "Indicates that a create, update, or delete operation has timed out.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushOperationTimedOutWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "AccountCategoriesUpdated": {
      "post": {
        "description": "Triggered anytime a company's accounts are categorized. This can be when Codat updates the suggested category fields or a user updates the confirmed category fields.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCategoriesUpdatedWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "SyncConnectionDeleted": {
      "post": {
        "description": "Indicates a Sync for Commerce connection has been deleted. Used for Sync for Commerce only.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncConnectionDeletedWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "SyncCompleted": {
      "post": {
        "description": "Triggered anytime an expense sync completes. Used for Sync for Expenses only.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncCompleteWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "SyncFailed": {
      "post": {
        "description": "Indicates a failure occurred during an expense sync. Used for Sync for Expenses only.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncFailedWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "bankFeeds.sourceAccount.connected": {
      "post": {
        "description": "Indicates a bank feed source account has changed to a status of connected.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceAccountWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "bankFeeds.sourceAccount.disconnected": {
      "post": {
        "description": "Indicates a bank feed source account has changed to a status of disconnected.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceAccountWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "read.complete": {
      "post": {
        "description": "Indicates that the fetch of data types for a product has completed.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReadCompleteWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was recieved successfully."
          }
        }
      }
    },
    "ClientRateLimitReached": {
      "post": {
        "description": "Triggered when the number of requests to Codat's API from the client exceeds the current quota.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRateLimitReachedWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    },
    "ClientRateLimitReset": {
      "post": {
        "description": "Triggered when the rate limit quota has reset for the client, and more requests to Codat's API are available.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRateLimitResetWebhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the webhook was received successfully."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountCategoriesUpdatedWebhook": {
        "title": "Account categories updated webhook",
        "description": "Webhook request body for the \"Account categories updated\" event.",
        "x-internal": true,
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
          },
          "DataConnectionId": {
            "$ref": "#/components/schemas/DataSyncCompletedWebhook/properties/DataConnectionId"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "$ref": "#/components/schemas/AccountCategoriesUpdatedWebhook/definitions/AccountCategoriesUpdatedWebhookData"
          }
        },
        "definitions": {
          "AccountCategoriesUpdatedWebhookData": {
            "type": "object",
            "title": "Account categories updated webhook data",
            "properties": {
              "modifiedDate": {
                "description": "The date on which the company's account categories were last modified in Codat.",
                "title": "Date",
                "type": "string",
                "example": "2022-10-23"
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "CompanyId": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "DataConnectionId": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "Account Categories Updated",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "Account categories updated for company f1c35bdc-1546-41b9-baf4-3f31135af968.",
            "Data": {
              "modifiedDate": "2019-08-24T14:15:22Z"
            }
          }
        ]
      },
      "ClientRateLimitReachedWebhook": {
        "title": "Client rate limit reached webhook",
        "x-internal": true,
        "description": "Webhook request body for a client that has reached their rate limit.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "$ref": "#/components/schemas/ClientRateLimitReachedWebhook/definitions/ClientRateLimitReachedWebhookData"
          }
        },
        "definitions": {
          "ClientRateLimitReachedWebhookData": {
            "type": "object",
            "title": "Client rate limit reached webhook data",
            "properties": {
              "DailyQuota": {
                "type": "integer",
                "description": "The number of available requests per day."
              },
              "ExpiresUtc": {
                "$ref": "#/components/schemas/ReadCompleteWebhook/properties/generatedDate",
                "description": "The date time in UTC when your daily quota is reset."
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "Rate Limit Reached",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "The current daily rate limit quota of 1000 requests for bae71d36-ff47-420a-b4a6-f8c9ddf41140 has been reached.",
            "Data": {
              "DailyQuota": 1000,
              "ExpiresUtc": "2023-05-03T00:00:00Z"
            }
          }
        ]
      },
      "ClientRateLimitResetWebhook": {
        "title": "Client rate limit reset webhook",
        "x-internal": true,
        "description": "Webhook request body for a client that has had their rate limit reset.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "$ref": "#/components/schemas/ClientRateLimitResetWebhook/definitions/ClientRateLimitResetWebhookData"
          }
        },
        "definitions": {
          "ClientRateLimitResetWebhookData": {
            "type": "object",
            "title": "Client rate limit reset webhook data",
            "properties": {
              "QuotaRemaining": {
                "type": "integer",
                "description": "Total number of requests remaining for your client.",
                "nullable": true
              },
              "ResetReason": {
                "type": "string",
                "description": "The reason for your rate limit quota being reset."
              },
              "DailyQuota": {
                "$ref": "#/components/schemas/ClientRateLimitReachedWebhook/definitions/ClientRateLimitReachedWebhookData/properties/DailyQuota",
                "nullable": true
              },
              "ExpiresUtc": {
                "$ref": "#/components/schemas/ClientRateLimitReachedWebhook/definitions/ClientRateLimitReachedWebhookData/properties/ExpiresUtc",
                "nullable": true
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "Rate Limit Reset",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "The current daily rate limit quota for client 30e0f9d2-52c0-4c9f-a806-bcd98a3bcd7e has been reset to 1000 requests.",
            "Data": {
              "QuotaRemaining": 1000,
              "ResetReason": "The quota was reset because it is a new day.",
              "DailyQuota": 1000,
              "ExpiresUtc": "2023-05-03T00:00:00Z"
            }
          }
        ]
      },
      "ConnectionStatusChangedWebhook": {
        "title": "Connection status changed webhook",
        "x-internal": true,
        "description": "Webhook request body for a company's data connection status changed.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
          },
          "DataConnectionId": {
            "$ref": "#/components/schemas/DataSyncCompletedWebhook/properties/DataConnectionId"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "$ref": "#/components/schemas/ConnectionStatusChangedWebhook/definitions/ConnectionStatusChangedWebhookData"
          }
        },
        "definitions": {
          "ConnectionStatusChangedWebhookData": {
            "type": "object",
            "title": "Connection status changed webhook data",
            "properties": {
              "dataConnectionId": {
                "$ref": "#/components/schemas/DataSyncCompletedWebhook/properties/DataConnectionId"
              },
              "newStatus": {
                "description": "The new authorization status of the data connection.",
                "title": "Data connection status",
                "type": "string",
                "enum": [
                  "PendingAuth",
                  "Linked",
                  "Unlinked",
                  "Deauthorized"
                ]
              },
              "oldStatus": {
                "description": "The old authorization status of the data connection.",
                "$ref": "#/components/schemas/ConnectionStatusChangedWebhook/definitions/ConnectionStatusChangedWebhookData/properties/newStatus"
              },
              "platformKey": {
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "[a-z]{4}",
                "example": "gbol",
                "description": "A unique 4-letter key to represent a platform in each integration. View [accounting](https://docs.codat.io/integrations/accounting/overview#platform-keys), [banking](https://docs.codat.io/integrations/banking/overview#platform-keys), and [commerce](https://docs.codat.io/integrations/commerce/overview#platform-keys) platform keys."
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "CompanyId": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "DataConnectionId": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "DataConnectionStatusChanged",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "Data connection for SandBox status changed from PendingAuth to Linked",
            "Data": {
              "dataConnectionId": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
              "newStatus": "Linked",
              "oldStatus": "PendingAuth",
              "platformKey": "gbol"
            }
          }
        ]
      },
      "DatasetDataChangedWebhook": {
        "title": "Dataset data changed webhook",
        "x-internal": true,
        "description": "Webhook request body to notify that a data synchronization has completed.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
          },
          "DataConnectionId": {
            "$ref": "#/components/schemas/DataSyncCompletedWebhook/properties/DataConnectionId"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "title": "Dataset data changed webhook data",
            "type": "object",
            "properties": {
              "dataType": {
                "$ref": "#/components/schemas/PushOperationStatusChangedWebhook/definitions/PushOperationStatusChangedWebhookData/properties/dataType"
              },
              "datasetId": {
                "$ref": "#/components/schemas/DatasetStatusChangedErrorWebhook/definitions/DatasetStatusChangedErrorWebhookData/properties/datasetId"
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "CompanyId": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "DataConnectionId": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "Dataset data changed",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "Data has changed for dataset type invoices, company 8a210b68-6988-11ed-a1eb-0242ac120002",
            "Data": {
              "dataType": "invoices",
              "datasetId": "6586f21b-ad4d-4d06-a309-712af47184a2"
            }
          }
        ]
      },
      "DatasetStatusChangedErrorWebhook": {
        "title": "Dataset status changed to error webhook",
        "x-internal": true,
        "description": "Webhook request body to notify that a data synchronization has completed.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
          },
          "DataConnectionId": {
            "$ref": "#/components/schemas/DataSyncCompletedWebhook/properties/DataConnectionId"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "$ref": "#/components/schemas/DatasetStatusChangedErrorWebhook/definitions/DatasetStatusChangedErrorWebhookData"
          }
        },
        "definitions": {
          "DatasetStatusChangedErrorWebhookData": {
            "type": "object",
            "title": "Dataset status changed to error webhook data",
            "properties": {
              "dataType": {
                "$ref": "#/components/schemas/PushOperationStatusChangedWebhook/definitions/PushOperationStatusChangedWebhookData/properties/dataType"
              },
              "datasetStatus": {
                "type": "string",
                "description": "The current status of the dataset's sync."
              },
              "datasetId": {
                "type": "string",
                "format": "uuid",
                "description": "Unique identifier for the dataset that completed its sync."
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "CompanyId": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "DataConnectionId": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "Data Sync Status Changed To Error",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "ERROR: syncing payments triggered a ProcessingError notification at 2020-04-21T12:12:57.4250446Z.",
            "Data": {
              "dataType": "invoices",
              "datasetStatus": "ProcessingError",
              "datasetId": "6586f21b-ad4d-4d06-a309-712af47184a2"
            }
          }
        ]
      },
      "DataSyncCompletedWebhook": {
        "title": "Data sync completed webhook",
        "x-internal": true,
        "description": "Webhook request body to notify the completion of a data sync.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
          },
          "DataConnectionId": {
            "type": "string",
            "format": "uuid",
            "example": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
            "description": "Unique identifier for a company's data connection."
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "$ref": "#/components/schemas/DataSyncCompletedWebhook/definitions/DataSyncCompletedWebhookData"
          }
        },
        "definitions": {
          "DataSyncCompletedWebhookData": {
            "type": "object",
            "title": "Data sync completed webhook data",
            "properties": {
              "dataType": {
                "$ref": "#/components/schemas/PushOperationStatusChangedWebhook/definitions/PushOperationStatusChangedWebhookData/properties/dataType",
                "nullable": true
              },
              "datasetId": {
                "$ref": "#/components/schemas/DatasetStatusChangedErrorWebhook/definitions/DatasetStatusChangedErrorWebhookData/properties/datasetId"
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "CompanyId": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "DataConnectionId": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "Data sync completed",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "Data sync of type creditNotes completed for company 7626befb-0c7d-49a4-9366-bc4c81b4e4b7",
            "Data": {
              "dataType": "creditNotes",
              "datasetId": "1541a5ee-0d84-4b6e-a7f7-c07c1f216333"
            }
          }
        ]
      },
      "NewCompanySynchronizedWebhook": {
        "title": "New company synchronized webhook",
        "x-internal": true,
        "description": "Webhook request body to notify that a new company has successfully synchronized at least one dataType for the first time.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
          },
          "DataConnectionId": {
            "$ref": "#/components/schemas/DataSyncCompletedWebhook/properties/DataConnectionId"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "$ref": "#/components/schemas/NewCompanySynchronizedWebhook/definitions/NewCompanySynchronizedWebhookData"
          }
        },
        "definitions": {
          "NewCompanySynchronizedWebhookData": {
            "type": "object",
            "title": "New company synchronized webhook data",
            "companyName": {
              "nullable": true,
              "type": "string",
              "description": "Name of company whose connection has changed."
            },
            "sourceType": {
              "nullable": true,
              "title": "Source Type",
              "description": "The type of platform of the connection.",
              "type": "string",
              "enum": [
                "Accounting",
                "Banking",
                "BankFeed",
                "Commerce",
                "Expense",
                "Other",
                "Unknown"
              ],
              "example": "Accounting"
            }
          }
        },
        "examples": [
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "CompanyId": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "DataConnectionId": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "New company synchronised",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "Company 8a210b68-6988-11ed-a1eb-0242ac120002 synced for the first time",
            "Data": {
              "companyName": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
              "sourceType": "Accounting"
            }
          }
        ]
      },
      "PushOperationStatusChangedWebhook": {
        "title": "Push operation status changed webhook",
        "x-internal": true,
        "description": "Webhook request body for a push operation status change.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
          },
          "DataConnectionId": {
            "$ref": "#/components/schemas/DataSyncCompletedWebhook/properties/DataConnectionId"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "$ref": "#/components/schemas/PushOperationStatusChangedWebhook/definitions/PushOperationStatusChangedWebhookData"
          }
        },
        "definitions": {
          "PushOperationStatusChangedWebhookData": {
            "type": "object",
            "title": "Push operation status changed webhook data",
            "properties": {
              "dataType": {
                "title": "Data types",
                "x-internal": true,
                "type": "string",
                "description": "Available data types",
                "enum": [
                  "accountTransactions",
                  "balanceSheet",
                  "bankAccounts",
                  "bankTransactions",
                  "billCreditNotes",
                  "billPayments",
                  "bills",
                  "cashFlowStatement",
                  "chartOfAccounts",
                  "company",
                  "creditNotes",
                  "customers",
                  "directCosts",
                  "directIncomes",
                  "invoices",
                  "itemReceipts",
                  "items",
                  "journalEntries",
                  "journals",
                  "paymentMethods",
                  "payments",
                  "profitAndLoss",
                  "purchaseOrders",
                  "salesOrders",
                  "suppliers",
                  "taxRates",
                  "trackingCategories",
                  "transfers",
                  "banking-accountBalances",
                  "banking-accounts",
                  "banking-transactionCategories",
                  "banking-transactions",
                  "commerce-companyInfo",
                  "commerce-customers",
                  "commerce-disputes",
                  "commerce-locations",
                  "commerce-orders",
                  "commerce-paymentMethods",
                  "commerce-payments",
                  "commerce-productCategories",
                  "commerce-products",
                  "commerce-taxComponents",
                  "commerce-transactions"
                ],
                "example": "invoices"
              },
              "status": {
                "title": "Push operation status",
                "type": "string",
                "enum": [
                  "Pending",
                  "Failed",
                  "Success",
                  "TimedOut"
                ],
                "description": "The current status of the push operation."
              },
              "pushOperationKey": {
                "type": "string",
                "format": "uuid",
                "description": "A unique identifier generated by Codat to represent this single push operation. This identifier can be used to track the status of the push, and should be persisted."
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "CompanyId": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "DataConnectionId": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "Push Operation Status Changed()",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "invoices triggered notification for PushOperationStatusChanged at 2019-05-22T18:19:42.742Z",
            "Data": {
              "dataType": "invoices",
              "status": "Success",
              "pushOperationKey": "c2f8847d-3047-4619-a157-6d947d8e4a73"
            }
          }
        ]
      },
      "PushOperationTimedOutWebhook": {
        "title": "Push operation timed out webhook",
        "x-internal": true,
        "description": "Webhook request body notifying that a push push operation has timed out.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
          },
          "DataConnectionId": {
            "$ref": "#/components/schemas/DataSyncCompletedWebhook/properties/DataConnectionId"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "$ref": "#/components/schemas/PushOperationTimedOutWebhook/definitions/PushOperationTimedOutWebhookData"
          }
        },
        "definitions": {
          "PushOperationTimedOutWebhookData": {
            "type": "object",
            "title": "Push operation timed out webhook data",
            "properties": {
              "dataType": {
                "$ref": "#/components/schemas/PushOperationStatusChangedWebhook/definitions/PushOperationStatusChangedWebhookData/properties/dataType"
              },
              "pushOperationKey": {
                "$ref": "#/components/schemas/PushOperationStatusChangedWebhook/definitions/PushOperationStatusChangedWebhookData/properties/pushOperationKey"
              },
              "pushOperationGuid": {
                "$ref": "#/components/schemas/PushOperationStatusChangedWebhook/definitions/PushOperationStatusChangedWebhookData/properties/pushOperationKey",
                "deprecated": true,
                "x-speakeasy-deprecation-replacement": "pushOperationKey"
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "CompanyId": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "DataConnectionId": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "Push Operation Timed Out",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "ERROR: pushing invoices never finished in time, timing out at 2020-09-07T08:42:13",
            "Data": {
              "dataType": "invoices",
              "pushOperationKey": "c2f8847d-3047-4619-a157-6d947d8e4a73",
              "pushOperationGuid": "c2f8847d-3047-4619-a157-6d947d8e4a73"
            }
          }
        ]
      },
      "ReadCompleteWebhook": {
        "title": "Read complete webhook",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "743ec94a-8aa4-44bb-8bd4-e1855ee0e74b",
            "description": "Unique identifier of the event."
          },
          "eventType": {
            "type": "string",
            "description": "The type of event."
          },
          "generatedDate": {
            "description": "The date time in UTC the event was generated in Codat.",
            "title": "Date time",
            "type": "string",
            "examples": [
              "2022-10-23T00:00:00.000Z",
              "2022-10-23T00:00:00.000Z"
            ]
          },
          "payload": {
            "$ref": "#/components/schemas/ReadCompleteWebhook/definitions/readCompleteWebhookPayload"
          }
        },
        "definitions": {
          "readCompleteWebhookPayload": {
            "title": "Company fetch complete webhook payload",
            "type": "object",
            "properties": {
              "referenceCompany": {
                "title": "Company reference",
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the company",
                    "example": "Codat Ltd."
                  },
                  "description": {
                    "type": "string",
                    "example": "Requested early access to the new financing scheme.",
                    "description": "Additional information about the company. This can be used to store foreign IDs, references, etc."
                  }
                }
              },
              "product": {
                "type": "string",
                "example": "lending",
                "description": "Name of the product that requested the data types to be fetched."
              },
              "modifiedFromDate": {
                "$ref": "#/components/schemas/ReadCompleteWebhook/properties/generatedDate",
                "description": "The date time in UTC when the data types were last fetched and input into Codat's cache."
              },
              "dataTypes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "connectionId": {
                      "$ref": "#/components/schemas/DataSyncCompletedWebhook/properties/DataConnectionId"
                    },
                    "dataType": {
                      "$ref": "#/components/schemas/PushOperationStatusChangedWebhook/definitions/PushOperationStatusChangedWebhookData/properties/dataType"
                    },
                    "recordsModified": {
                      "type": "boolean",
                      "example": false,
                      "description": "`True` if records have been created, updated or deleted in Codat's cache."
                    },
                    "status": {
                      "title": "Dataset status",
                      "type": "string",
                      "description": "The current status of the dataset.",
                      "enum": [
                        "Initial",
                        "Queued",
                        "Fetching",
                        "MapQueued",
                        "Mapping",
                        "Complete",
                        "FetchError",
                        "MapError",
                        "InternalError",
                        "ProcessingQueued",
                        "Processing",
                        "ProcessingError",
                        "ValidationQueued",
                        "Validating",
                        "ValidationError",
                        "AuthError",
                        "Cancelled",
                        "NotSupported",
                        "RateLimitError",
                        "PermissionsError",
                        "PrerequisiteNotMet"
                      ]
                    },
                    "statusDescription": {
                      "type": "string",
                      "description": "A description of the current status of the dataset."
                    },
                    "errorMessage": {
                      "type": "string",
                      "example": "Authorization failed.",
                      "description": "A message describing the error the dataset had if it has failed."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SourceAccountWebhook": {
        "title": "Source account status changed webhook",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "ba29118f-5406-4e59-b05c-ba307ca38d01",
            "description": "Unique identifier of the event"
          },
          "eventType": {
            "type": "string",
            "description": "The type of event.",
            "examples": [
              "bankFeeds.sourceAccount.connected",
              "bankFeeds.sourceAccount.disconnected"
            ]
          },
          "generatedDate": {
            "$ref": "#/components/schemas/ReadCompleteWebhook/properties/generatedDate",
            "description": "The date time in UTC the event was generated in Codat."
          },
          "payload": {
            "$ref": "#/components/schemas/SourceAccountWebhook/definitions/sourceAccountWebhookPayload"
          }
        },
        "definitions": {
          "sourceAccountWebhookPayload": {
            "title": "Payload",
            "type": "object",
            "properties": {
              "companyId": {
                "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
              },
              "connectionId": {
                "$ref": "#/components/schemas/DataSyncCompletedWebhook/properties/DataConnectionId"
              },
              "sourceAccount": {
                "title": "Source Account",
                "type": "object",
                "description": "The target bank account in a supported accounting software for ingestion into a bank feed.",
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique ID for the bank account."
                  },
                  "accountName": {
                    "type": "string",
                    "nullable": true,
                    "description": "The bank account name."
                  },
                  "accountType": {
                    "type": "string",
                    "nullable": true,
                    "description": "The type of bank account e.g. Credit."
                  },
                  "accountNumber": {
                    "type": "string",
                    "nullable": true,
                    "description": "The account number."
                  },
                  "sortCode": {
                    "type": "string",
                    "nullable": true,
                    "description": "The sort code."
                  },
                  "currency": {
                    "title": "Currency",
                    "x-internal": true,
                    "type": "string",
                    "description": "The currency data type in Codat is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, e.g. _GBP_.\n\n## Unknown currencies\n\nIn line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction. \n\nThere are only a very small number of edge cases where this currency code is returned by the Codat system.",
                    "format": "ISO4217",
                    "examples": [
                      "GBP",
                      "USD",
                      "EUR"
                    ]
                  },
                  "balance": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true,
                    "description": "The latest balance for the bank account."
                  },
                  "modifiedDate": {
                    "$ref": "#/components/schemas/ReadCompleteWebhook/properties/generatedDate",
                    "nullable": true,
                    "description": "The last date the bank account was modified."
                  },
                  "status": {
                    "type": "string",
                    "nullable": true,
                    "description": "Status of the source account.",
                    "enum": [
                      "pending",
                      "connected",
                      "connecting",
                      "disconnected",
                      "unknown"
                    ]
                  },
                  "feedStartDate": {
                    "$ref": "#/components/schemas/ReadCompleteWebhook/properties/generatedDate",
                    "nullable": true
                  }
                },
                "required": [
                  "id"
                ],
                "definitions": {
                  "sourceAccounts": {
                    "title": "Source accounts",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SourceAccountWebhook/definitions/sourceAccountWebhookPayload/properties/sourceAccount"
                    }
                  }
                },
                "examples": [
                  {
                    "id": "acc-002",
                    "accountName": "account-081",
                    "sortCode": "123456",
                    "accountType": "Credit",
                    "accountNumber": "12345670",
                    "currency": "GBP",
                    "balance": 99.99,
                    "modifiedDate": "2023-01-09T14:14:14.1057478Z",
                    "status": "pending"
                  },
                  {
                    "id": "acc-003",
                    "accountName": "account-095",
                    "sortCode": "123456",
                    "accountType": "Credit",
                    "accountNumber": "12345671",
                    "currency": "USD",
                    "balance": 0,
                    "modifiedDate": "2023-01-09T14:14:14.1057478Z",
                    "status": "pending"
                  }
                ]
              }
            }
          }
        }
      },
      "SyncCompleteWebhook": {
        "title": "Sync complete webhook",
        "x-internal": true,
        "description": "Webhook request body used to notify that a sync has completed.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "$ref": "#/components/schemas/SyncCompleteWebhook/definitions/SyncCompleteWebhookData"
          }
        },
        "definitions": {
          "SyncCompleteWebhookData": {
            "type": "object",
            "title": "Sync complete webhook data",
            "properties": {
              "syncId": {
                "$ref": "#/components/schemas/SyncFailedWebhook/definitions/SyncFailedWebhookData/properties/syncId"
              },
              "syncType": {
                "$ref": "#/components/schemas/SyncFailedWebhook/definitions/SyncFailedWebhookData/properties/syncType"
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "30e0f9d2-52c0-4c9f-a806-bcd98a3bcd7e",
            "ClientName": "Expense Sync",
            "CompanyId": "1f9559e7-8368-48c9-bdf4-f158e16b8b85",
            "AlertId": "33a4f8e9-09ae-4334-9b00-7bbe83024672",
            "RuleId": "5c27631d-3b63-4b50-8228-ee502fd113eb",
            "RuleType": "Sync Completed",
            "Message": "Sync 321363b4-efa9-4fbc-b71c-0b58d62f3248 for company 1f9559e7-8368-48c9-bdf4-f158e16b8b85 of type Expense completed successfully.",
            "Data": {
              "syncId": "321363b4-efa9-4fbc-b71c-0b58d62f3248",
              "syncType": "Expense"
            }
          }
        ]
      },
      "SyncConnectionDeletedWebhook": {
        "title": "Sync connection deleted webhook",
        "description": "A Sync for Commerce connection is deleted.",
        "x-internal": true,
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          }
        },
        "examples": [
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "CompanyId": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "Sync Connection Deleted",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "Sync connection for company 8a210b68-6988-11ed-a1eb-0242ac120002 deleted"
          },
          {
            "ClientId": "bae71d36-ff47-420a-b4a6-f8c9ddf41140",
            "ClientName": "Bank of Dave",
            "CompanyId": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "RuleId": "70af3071-65d9-4ec3-b3cb-5283e8d55dac",
            "RuleType": "Sync Connection Deleted",
            "AlertId": "a9367074-b5c3-42c4-9be4-be129f43577e",
            "Message": "Sync connection for company Tesco (8a210b68-6988-11ed-a1eb-0242ac120002) deleted"
          }
        ]
      },
      "SyncFailedWebhook": {
        "title": "Sync failed webhook",
        "x-internal": true,
        "description": "Webhook request body used to notify that a sync has failed.",
        "type": "object",
        "properties": {
          "ClientId": {
            "title": "Client ID",
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for your client in Codat."
          },
          "ClientName": {
            "type": "string",
            "description": "Name of your client in Codat."
          },
          "CompanyId": {
            "type": "string",
            "format": "uuid",
            "example": "8a210b68-6988-11ed-a1eb-0242ac120002",
            "description": "Unique identifier for your SMB in Codat."
          },
          "RuleId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the rule.",
            "deprecated": true
          },
          "RuleType": {
            "type": "string",
            "x-stoplight": {
              "id": "34d52a089f08a"
            },
            "description": "The type of rule."
          },
          "AlertId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier of the webhook event."
          },
          "Message": {
            "type": "string",
            "description": "A human-readable message about the webhook."
          },
          "Data": {
            "$ref": "#/components/schemas/SyncFailedWebhook/definitions/SyncFailedWebhookData"
          }
        },
        "definitions": {
          "SyncFailedWebhookData": {
            "type": "object",
            "title": "Sync failed webhook data",
            "properties": {
              "syncId": {
                "type": "string",
                "format": "uuid",
                "example": "a9367074-b5c3-42c4-9be4-be129f43577e",
                "description": "Unique identifier for the failed sync."
              },
              "syncType": {
                "type": "string",
                "description": "The type of sync being performed."
              },
              "FailureStage": {
                "type": "string",
                "description": "The stage of the job the sync failed."
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "30e0f9d2-52c0-4c9f-a806-bcd98a3bcd7e",
            "ClientName": "Expense Sync",
            "CompanyId": "1f9559e7-8368-48c9-bdf4-f158e16b8b85",
            "RuleId": "289c80dc-2aee-4b71-afff-9acd8d051080",
            "RuleType": "Sync Failed",
            "AlertId": "72c1103b-7f17-4a3a-8db5-67c2d360a516",
            "Message": "Sync 3bead2a1-1b3d-4d90-8077-cddc5ca68b01 for company 1f9559e7-8368-48c9-bdf4-f158e16b8b85 of type Expense has failed at step Pushing.",
            "Data": {
              "syncId": "3bead2a1-1b3d-4d90-8077-cddc5ca68b01",
              "syncType": "Expense",
              "FailureStage": "Pushing"
            }
          }
        ]
      },
      "SyncStartedWebhook": {
        "title": "Sync started webhook",
        "x-internal": true,
        "description": "Webhook request body used to notify that a sync has started.",
        "type": "object",
        "properties": {
          "ClientId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientId"
          },
          "ClientName": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/ClientName"
          },
          "CompanyId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/CompanyId"
          },
          "RuleId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleId"
          },
          "RuleType": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/RuleType"
          },
          "AlertId": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/AlertId"
          },
          "Message": {
            "$ref": "#/components/schemas/SyncFailedWebhook/properties/Message"
          },
          "Data": {
            "type": "object",
            "properties": {
              "syncId": {
                "$ref": "#/components/schemas/SyncFailedWebhook/definitions/SyncFailedWebhookData/properties/syncId"
              },
              "syncType": {
                "$ref": "#/components/schemas/SyncFailedWebhook/definitions/SyncFailedWebhookData/properties/syncType"
              }
            }
          }
        },
        "examples": [
          {
            "ClientId": "30e0f9d2-52c0-4c9f-a806-bcd98a3bcd7e",
            "ClientName": "Expense Sync",
            "CompanyId": "1f9559e7-8368-48c9-bdf4-f158e16b8b85",
            "AlertId": "33a4f8e9-09ae-4334-9b00-7bbe83024672",
            "RuleId": "5c27631d-3b63-4b50-8228-ee502fd113eb",
            "RuleType": "Sync Started",
            "Message": "Sync 321363b4-efa9-4fbc-b71c-0b58d62f3248 for company 1f9559e7-8368-48c9-bdf4-f158e16b8b85 of type Expense has started.",
            "Data": {
              "syncId": "321363b4-efa9-4fbc-b71c-0b58d62f3248",
              "syncType": "Expense"
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "auth_header": {
        "name": "Authorization",
        "description": "The word \"Basic\" followed by a space and your API key. [API keys](https://docs.codat.io/accounting-api#/schemas/apiKeys) are tokens used to control access to the API. You can get an API key via [the Codat Portal](https://app.codat.io/developers/api-keys), via [the API](https://docs.codat.io/codat-api#/api-keys/api-keys-list), or [read more](https://docs.codat.io/using-the-api/authentication) about authentication at Codat.",
        "type": "apiKey",
        "in": "header",
        "x-speakeasy-example": "Basic BASE_64_ENCODED(API_KEY)"
      }
    }
  }
}
